{"id":"../../node_modules/tinymce/plugins/lists/plugin.js","dependencies":[{"name":"D:\\testtttt\\vien-nntn\\package.json","includedInParent":true,"mtime":1667486829426},{"name":"D:\\testtttt\\vien-nntn\\node_modules\\tinymce\\package.json","includedInParent":true,"mtime":1667481939720}],"generated":{"js":"var global = arguments[3];\n/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isArray = isType$1('array');\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    const not = f => t => !f(t);\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains$1 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const filter$1 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const groupBy = (xs, f) => {\n      if (xs.length === 0) {\n        return [];\n      } else {\n        let wasType = f(xs[0]);\n        const r = [];\n        let group = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n          const x = xs[i];\n          const type = f(x);\n          if (type !== wasType) {\n            r.push(group);\n            group = [];\n          }\n          wasType = type;\n          group.push(x);\n        }\n        if (group.length !== 0) {\n          r.push(group);\n        }\n        return r;\n      }\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const get$1 = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$1(xs, 0);\n    const last = xs => get$1(xs, xs.length - 1);\n    const unique = (xs, comparator) => {\n      const r = [];\n      const isDuplicated = isFunction(comparator) ? x => exists(r, i => comparator(i, x)) : x => contains$1(r, x);\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (!isDuplicated(x)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n\n    const is$2 = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const equals = (lhs, rhs, comparator = tripleEquals) => lift2(lhs, rhs, comparator).getOr(lhs.isNone() && rhs.isNone());\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n\n    const ELEMENT = 1;\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    const fromDom$1 = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom: fromDom$1,\n      fromPoint\n    };\n\n    const is$1 = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    const contains = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    const is = is$1;\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isElement$1 = isType(ELEMENT);\n    const isTag = tag => e => isElement$1(e) && name(e) === tag;\n\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = element => map(element.dom.childNodes, SugarElement.fromDom);\n    const child = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child(element, 0);\n    const lastChild = element => child(element, element.dom.childNodes.length - 1);\n\n    const ancestor = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n\n    const before$1 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$1(v, element);\n        });\n      }, v => {\n        before$1(v, element);\n      });\n    };\n    const append$1 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n\n    const before = (marker, elements) => {\n      each$1(elements, x => {\n        before$1(marker, x);\n      });\n    };\n    const append = (parent, elements) => {\n      each$1(elements, x => {\n        append$1(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$1(children(element), rogue => {\n        remove(rogue);\n      });\n    };\n    const remove = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const fromDom = nodes => map(nodes, SugarElement.fromDom);\n\n    const keys = Object.keys;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const setAll = (element, attrs) => {\n      const dom = element.dom;\n      each(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const clone$1 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const clone = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const deep = original => clone(original, true);\n    const shallowAs = (original, tag) => {\n      const nu = SugarElement.fromTag(tag);\n      const attributes = clone$1(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    const mutate = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      after(original, nu);\n      const children$1 = children(original);\n      append(nu, children$1);\n      remove(original);\n      return nu;\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const matchNodeName = name => node => isNonNullable(node) && node.nodeName.toLowerCase() === name;\n    const matchNodeNames = regex => node => isNonNullable(node) && regex.test(node.nodeName);\n    const isTextNode = node => isNonNullable(node) && node.nodeType === 3;\n    const isElement = node => isNonNullable(node) && node.nodeType === 1;\n    const isListNode = matchNodeNames(/^(OL|UL|DL)$/);\n    const isOlUlNode = matchNodeNames(/^(OL|UL)$/);\n    const isOlNode = matchNodeName('ol');\n    const isListItemNode = matchNodeNames(/^(LI|DT|DD)$/);\n    const isDlItemNode = matchNodeNames(/^(DT|DD)$/);\n    const isTableCellNode = matchNodeNames(/^(TH|TD)$/);\n    const isBr = matchNodeName('br');\n    const isFirstChild = node => {\n      var _a;\n      return ((_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild) === node;\n    };\n    const isTextBlock = (editor, node) => isNonNullable(node) && node.nodeName in editor.schema.getTextBlockElements();\n    const isBlock = (node, blockElements) => isNonNullable(node) && node.nodeName in blockElements;\n    const isBogusBr = (dom, node) => {\n      if (!isBr(node)) {\n        return false;\n      }\n      return dom.isBlock(node.nextSibling) && !isBr(node.previousSibling);\n    };\n    const isEmpty$1 = (dom, elm, keepBookmarks) => {\n      const empty = dom.isEmpty(elm);\n      if (keepBookmarks && dom.select('span[data-mce-type=bookmark]', elm).length > 0) {\n        return false;\n      }\n      return empty;\n    };\n    const isChildOfBody = (dom, elm) => dom.isChildOf(elm, dom.getRoot());\n\n    const option = name => editor => editor.options.get(name);\n    const register$3 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('lists_indent_on_tab', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const shouldIndentOnTab = option('lists_indent_on_tab');\n    const getForcedRootBlock = option('forced_root_block');\n    const getForcedRootBlockAttrs = option('forced_root_block_attrs');\n\n    const createTextBlock = (editor, contentNode) => {\n      const dom = editor.dom;\n      const blockElements = editor.schema.getBlockElements();\n      const fragment = dom.createFragment();\n      const blockName = getForcedRootBlock(editor);\n      const blockAttrs = getForcedRootBlockAttrs(editor);\n      let node;\n      let textBlock;\n      let hasContentNode = false;\n      textBlock = dom.create(blockName, blockAttrs);\n      if (!isBlock(contentNode.firstChild, blockElements)) {\n        fragment.appendChild(textBlock);\n      }\n      while (node = contentNode.firstChild) {\n        const nodeName = node.nodeName;\n        if (!hasContentNode && (nodeName !== 'SPAN' || node.getAttribute('data-mce-type') !== 'bookmark')) {\n          hasContentNode = true;\n        }\n        if (isBlock(node, blockElements)) {\n          fragment.appendChild(node);\n          textBlock = null;\n        } else {\n          if (!textBlock) {\n            textBlock = dom.create(blockName, blockAttrs);\n            fragment.appendChild(textBlock);\n          }\n          textBlock.appendChild(node);\n        }\n      }\n      if (!hasContentNode && textBlock) {\n        textBlock.appendChild(dom.create('br', { 'data-mce-bogus': '1' }));\n      }\n      return fragment;\n    };\n\n    const DOM$2 = global$2.DOM;\n    const splitList = (editor, list, li) => {\n      const removeAndKeepBookmarks = targetNode => {\n        const parent = targetNode.parentNode;\n        if (parent) {\n          global$1.each(bookmarks, node => {\n            parent.insertBefore(node, li.parentNode);\n          });\n        }\n        DOM$2.remove(targetNode);\n      };\n      const bookmarks = DOM$2.select('span[data-mce-type=\"bookmark\"]', list);\n      const newBlock = createTextBlock(editor, li);\n      const tmpRng = DOM$2.createRng();\n      tmpRng.setStartAfter(li);\n      tmpRng.setEndAfter(list);\n      const fragment = tmpRng.extractContents();\n      for (let node = fragment.firstChild; node; node = node.firstChild) {\n        if (node.nodeName === 'LI' && editor.dom.isEmpty(node)) {\n          DOM$2.remove(node);\n          break;\n        }\n      }\n      if (!editor.dom.isEmpty(fragment)) {\n        DOM$2.insertAfter(fragment, list);\n      }\n      DOM$2.insertAfter(newBlock, list);\n      const parent = li.parentElement;\n      if (parent && isEmpty$1(editor.dom, parent)) {\n        removeAndKeepBookmarks(parent);\n      }\n      DOM$2.remove(li);\n      if (isEmpty$1(editor.dom, list)) {\n        DOM$2.remove(list);\n      }\n    };\n\n    const isDescriptionDetail = isTag('dd');\n    const isDescriptionTerm = isTag('dt');\n    const outdentDlItem = (editor, item) => {\n      if (isDescriptionDetail(item)) {\n        mutate(item, 'dt');\n      } else if (isDescriptionTerm(item)) {\n        parentElement(item).each(dl => splitList(editor, dl.dom, item.dom));\n      }\n    };\n    const indentDlItem = item => {\n      if (isDescriptionTerm(item)) {\n        mutate(item, 'dd');\n      }\n    };\n    const dlIndentation = (editor, indentation, dlItems) => {\n      if (indentation === 'Indent') {\n        each$1(dlItems, indentDlItem);\n      } else {\n        each$1(dlItems, item => outdentDlItem(editor, item));\n      }\n    };\n\n    const getNormalizedPoint = (container, offset) => {\n      if (isTextNode(container)) {\n        return {\n          container,\n          offset\n        };\n      }\n      const node = global$5.getNode(container, offset);\n      if (isTextNode(node)) {\n        return {\n          container: node,\n          offset: offset >= container.childNodes.length ? node.data.length : 0\n        };\n      } else if (node.previousSibling && isTextNode(node.previousSibling)) {\n        return {\n          container: node.previousSibling,\n          offset: node.previousSibling.data.length\n        };\n      } else if (node.nextSibling && isTextNode(node.nextSibling)) {\n        return {\n          container: node.nextSibling,\n          offset: 0\n        };\n      }\n      return {\n        container,\n        offset\n      };\n    };\n    const normalizeRange = rng => {\n      const outRng = rng.cloneRange();\n      const rangeStart = getNormalizedPoint(rng.startContainer, rng.startOffset);\n      outRng.setStart(rangeStart.container, rangeStart.offset);\n      const rangeEnd = getNormalizedPoint(rng.endContainer, rng.endOffset);\n      outRng.setEnd(rangeEnd.container, rangeEnd.offset);\n      return outRng;\n    };\n\n    const listNames = [\n      'OL',\n      'UL',\n      'DL'\n    ];\n    const listSelector = listNames.join(',');\n    const getParentList = (editor, node) => {\n      const selectionStart = node || editor.selection.getStart(true);\n      return editor.dom.getParent(selectionStart, listSelector, getClosestListHost(editor, selectionStart));\n    };\n    const isParentListSelected = (parentList, selectedBlocks) => isNonNullable(parentList) && selectedBlocks.length === 1 && selectedBlocks[0] === parentList;\n    const findSubLists = parentList => filter$1(parentList.querySelectorAll(listSelector), isListNode);\n    const getSelectedSubLists = editor => {\n      const parentList = getParentList(editor);\n      const selectedBlocks = editor.selection.getSelectedBlocks();\n      if (isParentListSelected(parentList, selectedBlocks)) {\n        return findSubLists(parentList);\n      } else {\n        return filter$1(selectedBlocks, elm => {\n          return isListNode(elm) && parentList !== elm;\n        });\n      }\n    };\n    const findParentListItemsNodes = (editor, elms) => {\n      const listItemsElms = global$1.map(elms, elm => {\n        const parentLi = editor.dom.getParent(elm, 'li,dd,dt', getClosestListHost(editor, elm));\n        return parentLi ? parentLi : elm;\n      });\n      return unique(listItemsElms);\n    };\n    const getSelectedListItems = editor => {\n      const selectedBlocks = editor.selection.getSelectedBlocks();\n      return filter$1(findParentListItemsNodes(editor, selectedBlocks), isListItemNode);\n    };\n    const getSelectedDlItems = editor => filter$1(getSelectedListItems(editor), isDlItemNode);\n    const getClosestEditingHost = (editor, elm) => {\n      const parentTableCell = editor.dom.getParents(elm, 'TD,TH');\n      return parentTableCell.length > 0 ? parentTableCell[0] : editor.getBody();\n    };\n    const isListHost = (schema, node) => !isListNode(node) && !isListItemNode(node) && exists(listNames, listName => schema.isValidChild(node.nodeName, listName));\n    const getClosestListHost = (editor, elm) => {\n      const parentBlocks = editor.dom.getParents(elm, editor.dom.isBlock);\n      const parentBlock = find(parentBlocks, elm => isListHost(editor.schema, elm));\n      return parentBlock.getOr(editor.getBody());\n    };\n    const findLastParentListNode = (editor, elm) => {\n      const parentLists = editor.dom.getParents(elm, 'ol,ul', getClosestListHost(editor, elm));\n      return last(parentLists);\n    };\n    const getSelectedLists = editor => {\n      const firstList = findLastParentListNode(editor, editor.selection.getStart());\n      const subsequentLists = filter$1(editor.selection.getSelectedBlocks(), isOlUlNode);\n      return firstList.toArray().concat(subsequentLists);\n    };\n    const getSelectedListRoots = editor => {\n      const selectedLists = getSelectedLists(editor);\n      return getUniqueListRoots(editor, selectedLists);\n    };\n    const getUniqueListRoots = (editor, lists) => {\n      const listRoots = map(lists, list => findLastParentListNode(editor, list).getOr(list));\n      return unique(listRoots);\n    };\n\n    const isCustomList = list => /\\btox\\-/.test(list.className);\n    const inList = (parents, listName) => findUntil(parents, isListNode, isTableCellNode).exists(list => list.nodeName === listName && !isCustomList(list));\n    const isWithinNonEditable = (editor, element) => element !== null && editor.dom.getContentEditableParent(element) === 'false';\n    const selectionIsWithinNonEditableList = editor => {\n      const parentList = getParentList(editor);\n      return isWithinNonEditable(editor, parentList);\n    };\n    const isWithinNonEditableList = (editor, element) => {\n      const parentList = editor.dom.getParent(element, 'ol,ul,dl');\n      return isWithinNonEditable(editor, parentList);\n    };\n    const setNodeChangeHandler = (editor, nodeChangeHandler) => {\n      const initialNode = editor.selection.getNode();\n      nodeChangeHandler({\n        parents: editor.dom.getParents(initialNode),\n        element: initialNode\n      });\n      editor.on('NodeChange', nodeChangeHandler);\n      return () => editor.off('NodeChange', nodeChangeHandler);\n    };\n\n    const fromElements = (elements, scope) => {\n      const doc = scope || document;\n      const fragment = doc.createDocumentFragment();\n      each$1(elements, element => {\n        fragment.appendChild(element.dom);\n      });\n      return SugarElement.fromDom(fragment);\n    };\n\n    const fireListEvent = (editor, action, element) => editor.dispatch('ListMutation', {\n      action,\n      element\n    });\n\n    const blank = r => s => s.replace(r, '');\n    const trim = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const isEmpty = s => !isNotEmpty(s);\n\n    const isSupported = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const set = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n\n    const joinSegment = (parent, child) => {\n      append$1(parent.item, child.list);\n    };\n    const joinSegments = segments => {\n      for (let i = 1; i < segments.length; i++) {\n        joinSegment(segments[i - 1], segments[i]);\n      }\n    };\n    const appendSegments = (head$1, tail) => {\n      lift2(last(head$1), head(tail), joinSegment);\n    };\n    const createSegment = (scope, listType) => {\n      const segment = {\n        list: SugarElement.fromTag(listType, scope),\n        item: SugarElement.fromTag('li', scope)\n      };\n      append$1(segment.list, segment.item);\n      return segment;\n    };\n    const createSegments = (scope, entry, size) => {\n      const segments = [];\n      for (let i = 0; i < size; i++) {\n        segments.push(createSegment(scope, entry.listType));\n      }\n      return segments;\n    };\n    const populateSegments = (segments, entry) => {\n      for (let i = 0; i < segments.length - 1; i++) {\n        set(segments[i].item, 'list-style-type', 'none');\n      }\n      last(segments).each(segment => {\n        setAll(segment.list, entry.listAttributes);\n        setAll(segment.item, entry.itemAttributes);\n        append(segment.item, entry.content);\n      });\n    };\n    const normalizeSegment = (segment, entry) => {\n      if (name(segment.list) !== entry.listType) {\n        segment.list = mutate(segment.list, entry.listType);\n      }\n      setAll(segment.list, entry.listAttributes);\n    };\n    const createItem = (scope, attr, content) => {\n      const item = SugarElement.fromTag('li', scope);\n      setAll(item, attr);\n      append(item, content);\n      return item;\n    };\n    const appendItem = (segment, item) => {\n      append$1(segment.list, item);\n      segment.item = item;\n    };\n    const writeShallow = (scope, cast, entry) => {\n      const newCast = cast.slice(0, entry.depth);\n      last(newCast).each(segment => {\n        const item = createItem(scope, entry.itemAttributes, entry.content);\n        appendItem(segment, item);\n        normalizeSegment(segment, entry);\n      });\n      return newCast;\n    };\n    const writeDeep = (scope, cast, entry) => {\n      const segments = createSegments(scope, entry, entry.depth - cast.length);\n      joinSegments(segments);\n      populateSegments(segments, entry);\n      appendSegments(cast, segments);\n      return cast.concat(segments);\n    };\n    const composeList = (scope, entries) => {\n      const cast = foldl(entries, (cast, entry) => {\n        return entry.depth > cast.length ? writeDeep(scope, cast, entry) : writeShallow(scope, cast, entry);\n      }, []);\n      return head(cast).map(segment => segment.list);\n    };\n\n    const isList = el => is(el, 'OL,UL');\n    const hasFirstChildList = el => firstChild(el).exists(isList);\n    const hasLastChildList = el => lastChild(el).exists(isList);\n\n    const isIndented = entry => entry.depth > 0;\n    const isSelected = entry => entry.isSelected;\n    const cloneItemContent = li => {\n      const children$1 = children(li);\n      const content = hasLastChildList(li) ? children$1.slice(0, -1) : children$1;\n      return map(content, deep);\n    };\n    const createEntry = (li, depth, isSelected) => parent(li).filter(isElement$1).map(list => ({\n      depth,\n      dirty: false,\n      isSelected,\n      content: cloneItemContent(li),\n      itemAttributes: clone$1(li),\n      listAttributes: clone$1(list),\n      listType: name(list)\n    }));\n\n    const indentEntry = (indentation, entry) => {\n      switch (indentation) {\n      case 'Indent':\n        entry.depth++;\n        break;\n      case 'Outdent':\n        entry.depth--;\n        break;\n      case 'Flatten':\n        entry.depth = 0;\n      }\n      entry.dirty = true;\n    };\n\n    const cloneListProperties = (target, source) => {\n      target.listType = source.listType;\n      target.listAttributes = { ...source.listAttributes };\n    };\n    const cleanListProperties = entry => {\n      entry.listAttributes = filter(entry.listAttributes, (_value, key) => key !== 'start');\n    };\n    const closestSiblingEntry = (entries, start) => {\n      const depth = entries[start].depth;\n      const matches = entry => entry.depth === depth && !entry.dirty;\n      const until = entry => entry.depth < depth;\n      return findUntil(reverse(entries.slice(0, start)), matches, until).orThunk(() => findUntil(entries.slice(start + 1), matches, until));\n    };\n    const normalizeEntries = entries => {\n      each$1(entries, (entry, i) => {\n        closestSiblingEntry(entries, i).fold(() => {\n          if (entry.dirty) {\n            cleanListProperties(entry);\n          }\n        }, matchingEntry => cloneListProperties(entry, matchingEntry));\n      });\n      return entries;\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const parseItem = (depth, itemSelection, selectionState, item) => firstChild(item).filter(isList).fold(() => {\n      itemSelection.each(selection => {\n        if (eq(selection.start, item)) {\n          selectionState.set(true);\n        }\n      });\n      const currentItemEntry = createEntry(item, depth, selectionState.get());\n      itemSelection.each(selection => {\n        if (eq(selection.end, item)) {\n          selectionState.set(false);\n        }\n      });\n      const childListEntries = lastChild(item).filter(isList).map(list => parseList(depth, itemSelection, selectionState, list)).getOr([]);\n      return currentItemEntry.toArray().concat(childListEntries);\n    }, list => parseList(depth, itemSelection, selectionState, list));\n    const parseList = (depth, itemSelection, selectionState, list) => bind(children(list), element => {\n      const parser = isList(element) ? parseList : parseItem;\n      const newDepth = depth + 1;\n      return parser(newDepth, itemSelection, selectionState, element);\n    });\n    const parseLists = (lists, itemSelection) => {\n      const selectionState = Cell(false);\n      const initialDepth = 0;\n      return map(lists, list => ({\n        sourceList: list,\n        entries: parseList(initialDepth, itemSelection, selectionState, list)\n      }));\n    };\n\n    const outdentedComposer = (editor, entries) => {\n      const normalizedEntries = normalizeEntries(entries);\n      return map(normalizedEntries, entry => {\n        const content = fromElements(entry.content);\n        return SugarElement.fromDom(createTextBlock(editor, content.dom));\n      });\n    };\n    const indentedComposer = (editor, entries) => {\n      const normalizedEntries = normalizeEntries(entries);\n      return composeList(editor.contentDocument, normalizedEntries).toArray();\n    };\n    const composeEntries = (editor, entries) => bind(groupBy(entries, isIndented), entries => {\n      const groupIsIndented = head(entries).exists(isIndented);\n      return groupIsIndented ? indentedComposer(editor, entries) : outdentedComposer(editor, entries);\n    });\n    const indentSelectedEntries = (entries, indentation) => {\n      each$1(filter$1(entries, isSelected), entry => indentEntry(indentation, entry));\n    };\n    const getItemSelection = editor => {\n      const selectedListItems = map(getSelectedListItems(editor), SugarElement.fromDom);\n      return lift2(find(selectedListItems, not(hasFirstChildList)), find(reverse(selectedListItems), not(hasFirstChildList)), (start, end) => ({\n        start,\n        end\n      }));\n    };\n    const listIndentation = (editor, lists, indentation) => {\n      const entrySets = parseLists(lists, getItemSelection(editor));\n      each$1(entrySets, entrySet => {\n        indentSelectedEntries(entrySet.entries, indentation);\n        const composedLists = composeEntries(editor, entrySet.entries);\n        each$1(composedLists, composedList => {\n          fireListEvent(editor, indentation === 'Indent' ? 'IndentList' : 'OutdentList', composedList.dom);\n        });\n        before(entrySet.sourceList, composedLists);\n        remove(entrySet.sourceList);\n      });\n    };\n\n    const selectionIndentation = (editor, indentation) => {\n      const lists = fromDom(getSelectedListRoots(editor));\n      const dlItems = fromDom(getSelectedDlItems(editor));\n      let isHandled = false;\n      if (lists.length || dlItems.length) {\n        const bookmark = editor.selection.getBookmark();\n        listIndentation(editor, lists, indentation);\n        dlIndentation(editor, indentation, dlItems);\n        editor.selection.moveToBookmark(bookmark);\n        editor.selection.setRng(normalizeRange(editor.selection.getRng()));\n        editor.nodeChanged();\n        isHandled = true;\n      }\n      return isHandled;\n    };\n    const handleIndentation = (editor, indentation) => !selectionIsWithinNonEditableList(editor) && selectionIndentation(editor, indentation);\n    const indentListSelection = editor => handleIndentation(editor, 'Indent');\n    const outdentListSelection = editor => handleIndentation(editor, 'Outdent');\n    const flattenListSelection = editor => handleIndentation(editor, 'Flatten');\n\n    var global = tinymce.util.Tools.resolve('tinymce.dom.BookmarkManager');\n\n    const DOM$1 = global$2.DOM;\n    const createBookmark = rng => {\n      const bookmark = {};\n      const setupEndPoint = start => {\n        let container = rng[start ? 'startContainer' : 'endContainer'];\n        let offset = rng[start ? 'startOffset' : 'endOffset'];\n        if (isElement(container)) {\n          const offsetNode = DOM$1.create('span', { 'data-mce-type': 'bookmark' });\n          if (container.hasChildNodes()) {\n            offset = Math.min(offset, container.childNodes.length - 1);\n            if (start) {\n              container.insertBefore(offsetNode, container.childNodes[offset]);\n            } else {\n              DOM$1.insertAfter(offsetNode, container.childNodes[offset]);\n            }\n          } else {\n            container.appendChild(offsetNode);\n          }\n          container = offsetNode;\n          offset = 0;\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      setupEndPoint(true);\n      if (!rng.collapsed) {\n        setupEndPoint();\n      }\n      return bookmark;\n    };\n    const resolveBookmark = bookmark => {\n      const restoreEndPoint = start => {\n        const nodeIndex = container => {\n          var _a;\n          let node = (_a = container.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild;\n          let idx = 0;\n          while (node) {\n            if (node === container) {\n              return idx;\n            }\n            if (!isElement(node) || node.getAttribute('data-mce-type') !== 'bookmark') {\n              idx++;\n            }\n            node = node.nextSibling;\n          }\n          return -1;\n        };\n        let container = bookmark[start ? 'startContainer' : 'endContainer'];\n        let offset = bookmark[start ? 'startOffset' : 'endOffset'];\n        if (!container) {\n          return;\n        }\n        if (isElement(container) && container.parentNode) {\n          const node = container;\n          offset = nodeIndex(container);\n          container = container.parentNode;\n          DOM$1.remove(node);\n          if (!container.hasChildNodes() && DOM$1.isBlock(container)) {\n            container.appendChild(DOM$1.create('br'));\n          }\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      restoreEndPoint(true);\n      restoreEndPoint();\n      const rng = DOM$1.createRng();\n      rng.setStart(bookmark.startContainer, bookmark.startOffset);\n      if (bookmark.endContainer) {\n        rng.setEnd(bookmark.endContainer, bookmark.endOffset);\n      }\n      return normalizeRange(rng);\n    };\n\n    const listToggleActionFromListName = listName => {\n      switch (listName) {\n      case 'UL':\n        return 'ToggleUlList';\n      case 'OL':\n        return 'ToggleOlList';\n      case 'DL':\n        return 'ToggleDLList';\n      }\n    };\n\n    const updateListStyle = (dom, el, detail) => {\n      const type = detail['list-style-type'] ? detail['list-style-type'] : null;\n      dom.setStyle(el, 'list-style-type', type);\n    };\n    const setAttribs = (elm, attrs) => {\n      global$1.each(attrs, (value, key) => {\n        elm.setAttribute(key, value);\n      });\n    };\n    const updateListAttrs = (dom, el, detail) => {\n      setAttribs(el, detail['list-attributes']);\n      global$1.each(dom.select('li', el), li => {\n        setAttribs(li, detail['list-item-attributes']);\n      });\n    };\n    const updateListWithDetails = (dom, el, detail) => {\n      updateListStyle(dom, el, detail);\n      updateListAttrs(dom, el, detail);\n    };\n    const removeStyles = (dom, element, styles) => {\n      global$1.each(styles, style => dom.setStyle(element, style, ''));\n    };\n    const getEndPointNode = (editor, rng, start, root) => {\n      let container = rng[start ? 'startContainer' : 'endContainer'];\n      const offset = rng[start ? 'startOffset' : 'endOffset'];\n      if (isElement(container)) {\n        container = container.childNodes[Math.min(offset, container.childNodes.length - 1)] || container;\n      }\n      if (!start && isBr(container.nextSibling)) {\n        container = container.nextSibling;\n      }\n      while (container.parentNode !== root) {\n        const parent = container.parentNode;\n        if (isTextBlock(editor, container)) {\n          return container;\n        }\n        if (/^(TD|TH)$/.test(parent.nodeName)) {\n          return container;\n        }\n        container = parent;\n      }\n      return container;\n    };\n    const getSelectedTextBlocks = (editor, rng, root) => {\n      const textBlocks = [];\n      const dom = editor.dom;\n      const startNode = getEndPointNode(editor, rng, true, root);\n      const endNode = getEndPointNode(editor, rng, false, root);\n      let block;\n      const siblings = [];\n      for (let node = startNode; node; node = node.nextSibling) {\n        siblings.push(node);\n        if (node === endNode) {\n          break;\n        }\n      }\n      global$1.each(siblings, node => {\n        var _a;\n        if (isTextBlock(editor, node)) {\n          textBlocks.push(node);\n          block = null;\n          return;\n        }\n        if (dom.isBlock(node) || isBr(node)) {\n          if (isBr(node)) {\n            dom.remove(node);\n          }\n          block = null;\n          return;\n        }\n        const nextSibling = node.nextSibling;\n        if (global.isBookmarkNode(node)) {\n          if (isListNode(nextSibling) || isTextBlock(editor, nextSibling) || !nextSibling && node.parentNode === root) {\n            block = null;\n            return;\n          }\n        }\n        if (!block) {\n          block = dom.create('p');\n          (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(block, node);\n          textBlocks.push(block);\n        }\n        block.appendChild(node);\n      });\n      return textBlocks;\n    };\n    const hasCompatibleStyle = (dom, sib, detail) => {\n      const sibStyle = dom.getStyle(sib, 'list-style-type');\n      let detailStyle = detail ? detail['list-style-type'] : '';\n      detailStyle = detailStyle === null ? '' : detailStyle;\n      return sibStyle === detailStyle;\n    };\n    const applyList = (editor, listName, detail) => {\n      const rng = editor.selection.getRng();\n      let listItemName = 'LI';\n      const root = getClosestListHost(editor, editor.selection.getStart(true));\n      const dom = editor.dom;\n      if (dom.getContentEditable(editor.selection.getNode()) === 'false') {\n        return;\n      }\n      listName = listName.toUpperCase();\n      if (listName === 'DL') {\n        listItemName = 'DT';\n      }\n      const bookmark = createBookmark(rng);\n      const selectedTextBlocks = getSelectedTextBlocks(editor, rng, root);\n      global$1.each(selectedTextBlocks, block => {\n        let listBlock;\n        const sibling = block.previousSibling;\n        const parent = block.parentNode;\n        if (!isListItemNode(parent)) {\n          if (sibling && isListNode(sibling) && sibling.nodeName === listName && hasCompatibleStyle(dom, sibling, detail)) {\n            listBlock = sibling;\n            block = dom.rename(block, listItemName);\n            sibling.appendChild(block);\n          } else {\n            listBlock = dom.create(listName);\n            parent.insertBefore(listBlock, block);\n            listBlock.appendChild(block);\n            block = dom.rename(block, listItemName);\n          }\n          removeStyles(dom, block, [\n            'margin',\n            'margin-right',\n            'margin-bottom',\n            'margin-left',\n            'margin-top',\n            'padding',\n            'padding-right',\n            'padding-bottom',\n            'padding-left',\n            'padding-top'\n          ]);\n          updateListWithDetails(dom, listBlock, detail);\n          mergeWithAdjacentLists(editor.dom, listBlock);\n        }\n      });\n      editor.selection.setRng(resolveBookmark(bookmark));\n    };\n    const isValidLists = (list1, list2) => {\n      return isListNode(list1) && list1.nodeName === (list2 === null || list2 === void 0 ? void 0 : list2.nodeName);\n    };\n    const hasSameListStyle = (dom, list1, list2) => {\n      const targetStyle = dom.getStyle(list1, 'list-style-type', true);\n      const style = dom.getStyle(list2, 'list-style-type', true);\n      return targetStyle === style;\n    };\n    const hasSameClasses = (elm1, elm2) => {\n      return elm1.className === elm2.className;\n    };\n    const shouldMerge = (dom, list1, list2) => {\n      return isValidLists(list1, list2) && hasSameListStyle(dom, list1, list2) && hasSameClasses(list1, list2);\n    };\n    const mergeWithAdjacentLists = (dom, listBlock) => {\n      let node;\n      let sibling = listBlock.nextSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        const liSibling = sibling;\n        while (node = liSibling.firstChild) {\n          listBlock.appendChild(node);\n        }\n        dom.remove(liSibling);\n      }\n      sibling = listBlock.previousSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        const liSibling = sibling;\n        while (node = liSibling.lastChild) {\n          listBlock.insertBefore(node, listBlock.firstChild);\n        }\n        dom.remove(liSibling);\n      }\n    };\n    const updateList$1 = (editor, list, listName, detail) => {\n      if (list.nodeName !== listName) {\n        const newList = editor.dom.rename(list, listName);\n        updateListWithDetails(editor.dom, newList, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), newList);\n      } else {\n        updateListWithDetails(editor.dom, list, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), list);\n      }\n    };\n    const toggleMultipleLists = (editor, parentList, lists, listName, detail) => {\n      const parentIsList = isListNode(parentList);\n      if (parentIsList && parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n        flattenListSelection(editor);\n      } else {\n        applyList(editor, listName, detail);\n        const bookmark = createBookmark(editor.selection.getRng());\n        const allLists = parentIsList ? [\n          parentList,\n          ...lists\n        ] : lists;\n        global$1.each(allLists, elm => {\n          updateList$1(editor, elm, listName, detail);\n        });\n        editor.selection.setRng(resolveBookmark(bookmark));\n      }\n    };\n    const hasListStyleDetail = detail => {\n      return 'list-style-type' in detail;\n    };\n    const toggleSingleList = (editor, parentList, listName, detail) => {\n      if (parentList === editor.getBody()) {\n        return;\n      }\n      if (parentList) {\n        if (parentList.nodeName === listName && !hasListStyleDetail(detail) && !isCustomList(parentList)) {\n          flattenListSelection(editor);\n        } else {\n          const bookmark = createBookmark(editor.selection.getRng());\n          updateListWithDetails(editor.dom, parentList, detail);\n          const newList = editor.dom.rename(parentList, listName);\n          mergeWithAdjacentLists(editor.dom, newList);\n          editor.selection.setRng(resolveBookmark(bookmark));\n          applyList(editor, listName, detail);\n          fireListEvent(editor, listToggleActionFromListName(listName), newList);\n        }\n      } else {\n        applyList(editor, listName, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), parentList);\n      }\n    };\n    const toggleList = (editor, listName, _detail) => {\n      const parentList = getParentList(editor);\n      if (isWithinNonEditableList(editor, parentList)) {\n        return;\n      }\n      const selectedSubLists = getSelectedSubLists(editor);\n      const detail = isObject(_detail) ? _detail : {};\n      if (selectedSubLists.length > 0) {\n        toggleMultipleLists(editor, parentList, selectedSubLists, listName, detail);\n      } else {\n        toggleSingleList(editor, parentList, listName, detail);\n      }\n    };\n\n    const DOM = global$2.DOM;\n    const normalizeList = (dom, list) => {\n      const parentNode = list.parentElement;\n      if (parentNode && parentNode.nodeName === 'LI' && parentNode.firstChild === list) {\n        const sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(list);\n          if (isEmpty$1(dom, parentNode)) {\n            DOM.remove(parentNode);\n          }\n        } else {\n          DOM.setStyle(parentNode, 'listStyleType', 'none');\n        }\n      }\n      if (isListNode(parentNode)) {\n        const sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(list);\n        }\n      }\n    };\n    const normalizeLists = (dom, element) => {\n      const lists = global$1.grep(dom.select('ol,ul', element));\n      global$1.each(lists, list => {\n        normalizeList(dom, list);\n      });\n    };\n\n    const findNextCaretContainer = (editor, rng, isForward, root) => {\n      let node = rng.startContainer;\n      const offset = rng.startOffset;\n      if (isTextNode(node) && (isForward ? offset < node.data.length : offset > 0)) {\n        return node;\n      }\n      const nonEmptyBlocks = editor.schema.getNonEmptyElements();\n      if (isElement(node)) {\n        node = global$5.getNode(node, offset);\n      }\n      const walker = new global$4(node, root);\n      if (isForward) {\n        if (isBogusBr(editor.dom, node)) {\n          walker.next();\n        }\n      }\n      const walkFn = isForward ? walker.next.bind(walker) : walker.prev2.bind(walker);\n      while (node = walkFn()) {\n        if (node.nodeName === 'LI' && !node.hasChildNodes()) {\n          return node;\n        }\n        if (nonEmptyBlocks[node.nodeName]) {\n          return node;\n        }\n        if (isTextNode(node) && node.data.length > 0) {\n          return node;\n        }\n      }\n      return null;\n    };\n    const hasOnlyOneBlockChild = (dom, elm) => {\n      const childNodes = elm.childNodes;\n      return childNodes.length === 1 && !isListNode(childNodes[0]) && dom.isBlock(childNodes[0]);\n    };\n    const unwrapSingleBlockChild = (dom, elm) => {\n      if (hasOnlyOneBlockChild(dom, elm)) {\n        dom.remove(elm.firstChild, true);\n      }\n    };\n    const moveChildren = (dom, fromElm, toElm) => {\n      let node;\n      const targetElm = hasOnlyOneBlockChild(dom, toElm) ? toElm.firstChild : toElm;\n      unwrapSingleBlockChild(dom, fromElm);\n      if (!isEmpty$1(dom, fromElm, true)) {\n        while (node = fromElm.firstChild) {\n          targetElm.appendChild(node);\n        }\n      }\n    };\n    const mergeLiElements = (dom, fromElm, toElm) => {\n      let listNode;\n      const ul = fromElm.parentNode;\n      if (!isChildOfBody(dom, fromElm) || !isChildOfBody(dom, toElm)) {\n        return;\n      }\n      if (isListNode(toElm.lastChild)) {\n        listNode = toElm.lastChild;\n      }\n      if (ul === toElm.lastChild) {\n        if (isBr(ul.previousSibling)) {\n          dom.remove(ul.previousSibling);\n        }\n      }\n      const node = toElm.lastChild;\n      if (node && isBr(node) && fromElm.hasChildNodes()) {\n        dom.remove(node);\n      }\n      if (isEmpty$1(dom, toElm, true)) {\n        empty(SugarElement.fromDom(toElm));\n      }\n      moveChildren(dom, fromElm, toElm);\n      if (listNode) {\n        toElm.appendChild(listNode);\n      }\n      const contains$1 = contains(SugarElement.fromDom(toElm), SugarElement.fromDom(fromElm));\n      const nestedLists = contains$1 ? dom.getParents(fromElm, isListNode, toElm) : [];\n      dom.remove(fromElm);\n      each$1(nestedLists, list => {\n        if (isEmpty$1(dom, list) && list !== dom.getRoot()) {\n          dom.remove(list);\n        }\n      });\n    };\n    const mergeIntoEmptyLi = (editor, fromLi, toLi) => {\n      empty(SugarElement.fromDom(toLi));\n      mergeLiElements(editor.dom, fromLi, toLi);\n      editor.selection.setCursorLocation(toLi, 0);\n    };\n    const mergeForward = (editor, rng, fromLi, toLi) => {\n      const dom = editor.dom;\n      if (dom.isEmpty(toLi)) {\n        mergeIntoEmptyLi(editor, fromLi, toLi);\n      } else {\n        const bookmark = createBookmark(rng);\n        mergeLiElements(dom, fromLi, toLi);\n        editor.selection.setRng(resolveBookmark(bookmark));\n      }\n    };\n    const mergeBackward = (editor, rng, fromLi, toLi) => {\n      const bookmark = createBookmark(rng);\n      mergeLiElements(editor.dom, fromLi, toLi);\n      const resolvedBookmark = resolveBookmark(bookmark);\n      editor.selection.setRng(resolvedBookmark);\n    };\n    const backspaceDeleteFromListToListCaret = (editor, isForward) => {\n      const dom = editor.dom, selection = editor.selection;\n      const selectionStartElm = selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const li = dom.getParent(selection.getStart(), 'LI', root);\n      if (li) {\n        const ul = li.parentElement;\n        if (ul === editor.getBody() && isEmpty$1(dom, ul)) {\n          return true;\n        }\n        const rng = normalizeRange(selection.getRng());\n        const otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi && otherLi !== li) {\n          editor.undoManager.transact(() => {\n            if (isForward) {\n              mergeForward(editor, rng, otherLi, li);\n            } else {\n              if (isFirstChild(li)) {\n                outdentListSelection(editor);\n              } else {\n                mergeBackward(editor, rng, li, otherLi);\n              }\n            }\n          });\n          return true;\n        } else if (!otherLi) {\n          if (!isForward && rng.startOffset === 0 && rng.endOffset === 0) {\n            editor.undoManager.transact(() => {\n              flattenListSelection(editor);\n            });\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    const removeBlock = (dom, block, root) => {\n      const parentBlock = dom.getParent(block.parentNode, dom.isBlock, root);\n      dom.remove(block);\n      if (parentBlock && dom.isEmpty(parentBlock)) {\n        dom.remove(parentBlock);\n      }\n    };\n    const backspaceDeleteIntoListCaret = (editor, isForward) => {\n      const dom = editor.dom;\n      const selectionStartElm = editor.selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const block = dom.getParent(selectionStartElm, dom.isBlock, root);\n      if (block && dom.isEmpty(block)) {\n        const rng = normalizeRange(editor.selection.getRng());\n        const otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi) {\n          const findValidElement = element => contains$1([\n            'td',\n            'th',\n            'caption'\n          ], name(element));\n          const findRoot = node => node.dom === root;\n          const otherLiCell = closest(SugarElement.fromDom(otherLi), findValidElement, findRoot);\n          const caretCell = closest(SugarElement.fromDom(rng.startContainer), findValidElement, findRoot);\n          if (!equals(otherLiCell, caretCell, eq)) {\n            return false;\n          }\n          editor.undoManager.transact(() => {\n            removeBlock(dom, block, root);\n            mergeWithAdjacentLists(dom, otherLi.parentNode);\n            editor.selection.select(otherLi, true);\n            editor.selection.collapse(isForward);\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    const backspaceDeleteCaret = (editor, isForward) => {\n      return backspaceDeleteFromListToListCaret(editor, isForward) || backspaceDeleteIntoListCaret(editor, isForward);\n    };\n    const hasListSelection = editor => {\n      const selectionStartElm = editor.selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const startListParent = editor.dom.getParent(selectionStartElm, 'LI,DT,DD', root);\n      return startListParent || getSelectedListItems(editor).length > 0;\n    };\n    const backspaceDeleteRange = editor => {\n      if (hasListSelection(editor)) {\n        editor.undoManager.transact(() => {\n          editor.execCommand('Delete');\n          normalizeLists(editor.dom, editor.getBody());\n        });\n        return true;\n      }\n      return false;\n    };\n    const backspaceDelete = (editor, isForward) => {\n      const selection = editor.selection;\n      return !isWithinNonEditableList(editor, selection.getNode()) && (selection.isCollapsed() ? backspaceDeleteCaret(editor, isForward) : backspaceDeleteRange(editor));\n    };\n    const setup$1 = editor => {\n      editor.on('ExecCommand', e => {\n        const cmd = e.command.toLowerCase();\n        if ((cmd === 'delete' || cmd === 'forwarddelete') && hasListSelection(editor)) {\n          normalizeLists(editor.dom, editor.getBody());\n        }\n      });\n      editor.on('keydown', e => {\n        if (e.keyCode === global$3.BACKSPACE) {\n          if (backspaceDelete(editor, false)) {\n            e.preventDefault();\n          }\n        } else if (e.keyCode === global$3.DELETE) {\n          if (backspaceDelete(editor, true)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n\n    const get = editor => ({\n      backspaceDelete: isForward => {\n        backspaceDelete(editor, isForward);\n      }\n    });\n\n    const updateList = (editor, update) => {\n      const parentList = getParentList(editor);\n      if (parentList === null || isWithinNonEditableList(editor, parentList)) {\n        return;\n      }\n      editor.undoManager.transact(() => {\n        if (isObject(update.styles)) {\n          editor.dom.setStyles(parentList, update.styles);\n        }\n        if (isObject(update.attrs)) {\n          each(update.attrs, (v, k) => editor.dom.setAttrib(parentList, k, v));\n        }\n      });\n    };\n\n    const parseAlphabeticBase26 = str => {\n      const chars = reverse(trim(str).split(''));\n      const values = map(chars, (char, i) => {\n        const charValue = char.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0) + 1;\n        return Math.pow(26, i) * charValue;\n      });\n      return foldl(values, (sum, v) => sum + v, 0);\n    };\n    const composeAlphabeticBase26 = value => {\n      value--;\n      if (value < 0) {\n        return '';\n      } else {\n        const remainder = value % 26;\n        const quotient = Math.floor(value / 26);\n        const rest = composeAlphabeticBase26(quotient);\n        const char = String.fromCharCode('A'.charCodeAt(0) + remainder);\n        return rest + char;\n      }\n    };\n    const isUppercase = str => /^[A-Z]+$/.test(str);\n    const isLowercase = str => /^[a-z]+$/.test(str);\n    const isNumeric = str => /^[0-9]+$/.test(str);\n    const deduceListType = start => {\n      if (isNumeric(start)) {\n        return 2;\n      } else if (isUppercase(start)) {\n        return 0;\n      } else if (isLowercase(start)) {\n        return 1;\n      } else if (isEmpty(start)) {\n        return 3;\n      } else {\n        return 4;\n      }\n    };\n    const parseStartValue = start => {\n      switch (deduceListType(start)) {\n      case 2:\n        return Optional.some({\n          listStyleType: Optional.none(),\n          start\n        });\n      case 0:\n        return Optional.some({\n          listStyleType: Optional.some('upper-alpha'),\n          start: parseAlphabeticBase26(start).toString()\n        });\n      case 1:\n        return Optional.some({\n          listStyleType: Optional.some('lower-alpha'),\n          start: parseAlphabeticBase26(start).toString()\n        });\n      case 3:\n        return Optional.some({\n          listStyleType: Optional.none(),\n          start: ''\n        });\n      case 4:\n        return Optional.none();\n      }\n    };\n    const parseDetail = detail => {\n      const start = parseInt(detail.start, 10);\n      if (is$2(detail.listStyleType, 'upper-alpha')) {\n        return composeAlphabeticBase26(start);\n      } else if (is$2(detail.listStyleType, 'lower-alpha')) {\n        return composeAlphabeticBase26(start).toLowerCase();\n      } else {\n        return detail.start;\n      }\n    };\n\n    const open = editor => {\n      const currentList = getParentList(editor);\n      if (!isOlNode(currentList) || isWithinNonEditableList(editor, currentList)) {\n        return;\n      }\n      editor.windowManager.open({\n        title: 'List Properties',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'input',\n              name: 'start',\n              label: 'Start list at number',\n              inputMode: 'numeric'\n            }]\n        },\n        initialData: {\n          start: parseDetail({\n            start: editor.dom.getAttrib(currentList, 'start', '1'),\n            listStyleType: Optional.from(editor.dom.getStyle(currentList, 'list-style-type'))\n          })\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        onSubmit: api => {\n          const data = api.getData();\n          parseStartValue(data.start).each(detail => {\n            editor.execCommand('mceListUpdate', false, {\n              attrs: { start: detail.start === '1' ? '' : detail.start },\n              styles: { 'list-style-type': detail.listStyleType.getOr('') }\n            });\n          });\n          api.close();\n        }\n      });\n    };\n\n    const queryListCommandState = (editor, listName) => () => {\n      const parentList = getParentList(editor);\n      return isNonNullable(parentList) && parentList.nodeName === listName;\n    };\n    const registerDialog = editor => {\n      editor.addCommand('mceListProps', () => {\n        open(editor);\n      });\n    };\n    const register$2 = editor => {\n      editor.on('BeforeExecCommand', e => {\n        const cmd = e.command.toLowerCase();\n        if (cmd === 'indent') {\n          indentListSelection(editor);\n        } else if (cmd === 'outdent') {\n          outdentListSelection(editor);\n        }\n      });\n      editor.addCommand('InsertUnorderedList', (ui, detail) => {\n        toggleList(editor, 'UL', detail);\n      });\n      editor.addCommand('InsertOrderedList', (ui, detail) => {\n        toggleList(editor, 'OL', detail);\n      });\n      editor.addCommand('InsertDefinitionList', (ui, detail) => {\n        toggleList(editor, 'DL', detail);\n      });\n      editor.addCommand('RemoveList', () => {\n        flattenListSelection(editor);\n      });\n      registerDialog(editor);\n      editor.addCommand('mceListUpdate', (ui, detail) => {\n        if (isObject(detail)) {\n          updateList(editor, detail);\n        }\n      });\n      editor.addQueryStateHandler('InsertUnorderedList', queryListCommandState(editor, 'UL'));\n      editor.addQueryStateHandler('InsertOrderedList', queryListCommandState(editor, 'OL'));\n      editor.addQueryStateHandler('InsertDefinitionList', queryListCommandState(editor, 'DL'));\n    };\n\n    const setupTabKey = editor => {\n      editor.on('keydown', e => {\n        if (e.keyCode !== global$3.TAB || global$3.metaKeyPressed(e)) {\n          return;\n        }\n        editor.undoManager.transact(() => {\n          if (e.shiftKey ? outdentListSelection(editor) : indentListSelection(editor)) {\n            e.preventDefault();\n          }\n        });\n      });\n    };\n    const setup = editor => {\n      if (shouldIndentOnTab(editor)) {\n        setupTabKey(editor);\n      }\n      setup$1(editor);\n    };\n\n    const setupToggleButtonHandler = (editor, listName) => api => {\n      const toggleButtonHandler = e => {\n        api.setActive(inList(e.parents, listName));\n        api.setEnabled(!isWithinNonEditableList(editor, e.element));\n      };\n      return setNodeChangeHandler(editor, toggleButtonHandler);\n    };\n    const register$1 = editor => {\n      const exec = command => () => editor.execCommand(command);\n      if (!editor.hasPlugin('advlist')) {\n        editor.ui.registry.addToggleButton('numlist', {\n          icon: 'ordered-list',\n          active: false,\n          tooltip: 'Numbered list',\n          onAction: exec('InsertOrderedList'),\n          onSetup: setupToggleButtonHandler(editor, 'OL')\n        });\n        editor.ui.registry.addToggleButton('bullist', {\n          icon: 'unordered-list',\n          active: false,\n          tooltip: 'Bullet list',\n          onAction: exec('InsertUnorderedList'),\n          onSetup: setupToggleButtonHandler(editor, 'UL')\n        });\n      }\n    };\n\n    const setupMenuButtonHandler = (editor, listName) => api => {\n      const menuButtonHandler = e => api.setEnabled(inList(e.parents, listName) && !isWithinNonEditableList(editor, e.element));\n      return setNodeChangeHandler(editor, menuButtonHandler);\n    };\n    const register = editor => {\n      const listProperties = {\n        text: 'List properties...',\n        icon: 'ordered-list',\n        onAction: () => editor.execCommand('mceListProps'),\n        onSetup: setupMenuButtonHandler(editor, 'OL')\n      };\n      editor.ui.registry.addMenuItem('listprops', listProperties);\n      editor.ui.registry.addContextMenu('lists', {\n        update: node => {\n          const parentList = getParentList(editor, node);\n          return isOlNode(parentList) ? ['listprops'] : [];\n        }\n      });\n    };\n\n    var Plugin = () => {\n      global$6.add('lists', editor => {\n        register$3(editor);\n        if (!editor.hasPlugin('rtc', true)) {\n          setup(editor);\n          register$2(editor);\n        } else {\n          registerDialog(editor);\n        }\n        register$1(editor);\n        register(editor);\n        return get(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"../../node_modules/tinymce/plugins/lists/plugin.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}}],"sources":{"../../node_modules/tinymce/plugins/lists/plugin.js":"/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isArray = isType$1('array');\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    const not = f => t => !f(t);\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains$1 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const filter$1 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const groupBy = (xs, f) => {\n      if (xs.length === 0) {\n        return [];\n      } else {\n        let wasType = f(xs[0]);\n        const r = [];\n        let group = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n          const x = xs[i];\n          const type = f(x);\n          if (type !== wasType) {\n            r.push(group);\n            group = [];\n          }\n          wasType = type;\n          group.push(x);\n        }\n        if (group.length !== 0) {\n          r.push(group);\n        }\n        return r;\n      }\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const get$1 = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$1(xs, 0);\n    const last = xs => get$1(xs, xs.length - 1);\n    const unique = (xs, comparator) => {\n      const r = [];\n      const isDuplicated = isFunction(comparator) ? x => exists(r, i => comparator(i, x)) : x => contains$1(r, x);\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (!isDuplicated(x)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n\n    const is$2 = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const equals = (lhs, rhs, comparator = tripleEquals) => lift2(lhs, rhs, comparator).getOr(lhs.isNone() && rhs.isNone());\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n\n    const ELEMENT = 1;\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    const fromDom$1 = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom: fromDom$1,\n      fromPoint\n    };\n\n    const is$1 = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    const contains = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    const is = is$1;\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isElement$1 = isType(ELEMENT);\n    const isTag = tag => e => isElement$1(e) && name(e) === tag;\n\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = element => map(element.dom.childNodes, SugarElement.fromDom);\n    const child = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child(element, 0);\n    const lastChild = element => child(element, element.dom.childNodes.length - 1);\n\n    const ancestor = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n\n    const before$1 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$1(v, element);\n        });\n      }, v => {\n        before$1(v, element);\n      });\n    };\n    const append$1 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n\n    const before = (marker, elements) => {\n      each$1(elements, x => {\n        before$1(marker, x);\n      });\n    };\n    const append = (parent, elements) => {\n      each$1(elements, x => {\n        append$1(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$1(children(element), rogue => {\n        remove(rogue);\n      });\n    };\n    const remove = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const fromDom = nodes => map(nodes, SugarElement.fromDom);\n\n    const keys = Object.keys;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const setAll = (element, attrs) => {\n      const dom = element.dom;\n      each(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const clone$1 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const clone = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const deep = original => clone(original, true);\n    const shallowAs = (original, tag) => {\n      const nu = SugarElement.fromTag(tag);\n      const attributes = clone$1(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    const mutate = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      after(original, nu);\n      const children$1 = children(original);\n      append(nu, children$1);\n      remove(original);\n      return nu;\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const matchNodeName = name => node => isNonNullable(node) && node.nodeName.toLowerCase() === name;\n    const matchNodeNames = regex => node => isNonNullable(node) && regex.test(node.nodeName);\n    const isTextNode = node => isNonNullable(node) && node.nodeType === 3;\n    const isElement = node => isNonNullable(node) && node.nodeType === 1;\n    const isListNode = matchNodeNames(/^(OL|UL|DL)$/);\n    const isOlUlNode = matchNodeNames(/^(OL|UL)$/);\n    const isOlNode = matchNodeName('ol');\n    const isListItemNode = matchNodeNames(/^(LI|DT|DD)$/);\n    const isDlItemNode = matchNodeNames(/^(DT|DD)$/);\n    const isTableCellNode = matchNodeNames(/^(TH|TD)$/);\n    const isBr = matchNodeName('br');\n    const isFirstChild = node => {\n      var _a;\n      return ((_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild) === node;\n    };\n    const isTextBlock = (editor, node) => isNonNullable(node) && node.nodeName in editor.schema.getTextBlockElements();\n    const isBlock = (node, blockElements) => isNonNullable(node) && node.nodeName in blockElements;\n    const isBogusBr = (dom, node) => {\n      if (!isBr(node)) {\n        return false;\n      }\n      return dom.isBlock(node.nextSibling) && !isBr(node.previousSibling);\n    };\n    const isEmpty$1 = (dom, elm, keepBookmarks) => {\n      const empty = dom.isEmpty(elm);\n      if (keepBookmarks && dom.select('span[data-mce-type=bookmark]', elm).length > 0) {\n        return false;\n      }\n      return empty;\n    };\n    const isChildOfBody = (dom, elm) => dom.isChildOf(elm, dom.getRoot());\n\n    const option = name => editor => editor.options.get(name);\n    const register$3 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('lists_indent_on_tab', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const shouldIndentOnTab = option('lists_indent_on_tab');\n    const getForcedRootBlock = option('forced_root_block');\n    const getForcedRootBlockAttrs = option('forced_root_block_attrs');\n\n    const createTextBlock = (editor, contentNode) => {\n      const dom = editor.dom;\n      const blockElements = editor.schema.getBlockElements();\n      const fragment = dom.createFragment();\n      const blockName = getForcedRootBlock(editor);\n      const blockAttrs = getForcedRootBlockAttrs(editor);\n      let node;\n      let textBlock;\n      let hasContentNode = false;\n      textBlock = dom.create(blockName, blockAttrs);\n      if (!isBlock(contentNode.firstChild, blockElements)) {\n        fragment.appendChild(textBlock);\n      }\n      while (node = contentNode.firstChild) {\n        const nodeName = node.nodeName;\n        if (!hasContentNode && (nodeName !== 'SPAN' || node.getAttribute('data-mce-type') !== 'bookmark')) {\n          hasContentNode = true;\n        }\n        if (isBlock(node, blockElements)) {\n          fragment.appendChild(node);\n          textBlock = null;\n        } else {\n          if (!textBlock) {\n            textBlock = dom.create(blockName, blockAttrs);\n            fragment.appendChild(textBlock);\n          }\n          textBlock.appendChild(node);\n        }\n      }\n      if (!hasContentNode && textBlock) {\n        textBlock.appendChild(dom.create('br', { 'data-mce-bogus': '1' }));\n      }\n      return fragment;\n    };\n\n    const DOM$2 = global$2.DOM;\n    const splitList = (editor, list, li) => {\n      const removeAndKeepBookmarks = targetNode => {\n        const parent = targetNode.parentNode;\n        if (parent) {\n          global$1.each(bookmarks, node => {\n            parent.insertBefore(node, li.parentNode);\n          });\n        }\n        DOM$2.remove(targetNode);\n      };\n      const bookmarks = DOM$2.select('span[data-mce-type=\"bookmark\"]', list);\n      const newBlock = createTextBlock(editor, li);\n      const tmpRng = DOM$2.createRng();\n      tmpRng.setStartAfter(li);\n      tmpRng.setEndAfter(list);\n      const fragment = tmpRng.extractContents();\n      for (let node = fragment.firstChild; node; node = node.firstChild) {\n        if (node.nodeName === 'LI' && editor.dom.isEmpty(node)) {\n          DOM$2.remove(node);\n          break;\n        }\n      }\n      if (!editor.dom.isEmpty(fragment)) {\n        DOM$2.insertAfter(fragment, list);\n      }\n      DOM$2.insertAfter(newBlock, list);\n      const parent = li.parentElement;\n      if (parent && isEmpty$1(editor.dom, parent)) {\n        removeAndKeepBookmarks(parent);\n      }\n      DOM$2.remove(li);\n      if (isEmpty$1(editor.dom, list)) {\n        DOM$2.remove(list);\n      }\n    };\n\n    const isDescriptionDetail = isTag('dd');\n    const isDescriptionTerm = isTag('dt');\n    const outdentDlItem = (editor, item) => {\n      if (isDescriptionDetail(item)) {\n        mutate(item, 'dt');\n      } else if (isDescriptionTerm(item)) {\n        parentElement(item).each(dl => splitList(editor, dl.dom, item.dom));\n      }\n    };\n    const indentDlItem = item => {\n      if (isDescriptionTerm(item)) {\n        mutate(item, 'dd');\n      }\n    };\n    const dlIndentation = (editor, indentation, dlItems) => {\n      if (indentation === 'Indent') {\n        each$1(dlItems, indentDlItem);\n      } else {\n        each$1(dlItems, item => outdentDlItem(editor, item));\n      }\n    };\n\n    const getNormalizedPoint = (container, offset) => {\n      if (isTextNode(container)) {\n        return {\n          container,\n          offset\n        };\n      }\n      const node = global$5.getNode(container, offset);\n      if (isTextNode(node)) {\n        return {\n          container: node,\n          offset: offset >= container.childNodes.length ? node.data.length : 0\n        };\n      } else if (node.previousSibling && isTextNode(node.previousSibling)) {\n        return {\n          container: node.previousSibling,\n          offset: node.previousSibling.data.length\n        };\n      } else if (node.nextSibling && isTextNode(node.nextSibling)) {\n        return {\n          container: node.nextSibling,\n          offset: 0\n        };\n      }\n      return {\n        container,\n        offset\n      };\n    };\n    const normalizeRange = rng => {\n      const outRng = rng.cloneRange();\n      const rangeStart = getNormalizedPoint(rng.startContainer, rng.startOffset);\n      outRng.setStart(rangeStart.container, rangeStart.offset);\n      const rangeEnd = getNormalizedPoint(rng.endContainer, rng.endOffset);\n      outRng.setEnd(rangeEnd.container, rangeEnd.offset);\n      return outRng;\n    };\n\n    const listNames = [\n      'OL',\n      'UL',\n      'DL'\n    ];\n    const listSelector = listNames.join(',');\n    const getParentList = (editor, node) => {\n      const selectionStart = node || editor.selection.getStart(true);\n      return editor.dom.getParent(selectionStart, listSelector, getClosestListHost(editor, selectionStart));\n    };\n    const isParentListSelected = (parentList, selectedBlocks) => isNonNullable(parentList) && selectedBlocks.length === 1 && selectedBlocks[0] === parentList;\n    const findSubLists = parentList => filter$1(parentList.querySelectorAll(listSelector), isListNode);\n    const getSelectedSubLists = editor => {\n      const parentList = getParentList(editor);\n      const selectedBlocks = editor.selection.getSelectedBlocks();\n      if (isParentListSelected(parentList, selectedBlocks)) {\n        return findSubLists(parentList);\n      } else {\n        return filter$1(selectedBlocks, elm => {\n          return isListNode(elm) && parentList !== elm;\n        });\n      }\n    };\n    const findParentListItemsNodes = (editor, elms) => {\n      const listItemsElms = global$1.map(elms, elm => {\n        const parentLi = editor.dom.getParent(elm, 'li,dd,dt', getClosestListHost(editor, elm));\n        return parentLi ? parentLi : elm;\n      });\n      return unique(listItemsElms);\n    };\n    const getSelectedListItems = editor => {\n      const selectedBlocks = editor.selection.getSelectedBlocks();\n      return filter$1(findParentListItemsNodes(editor, selectedBlocks), isListItemNode);\n    };\n    const getSelectedDlItems = editor => filter$1(getSelectedListItems(editor), isDlItemNode);\n    const getClosestEditingHost = (editor, elm) => {\n      const parentTableCell = editor.dom.getParents(elm, 'TD,TH');\n      return parentTableCell.length > 0 ? parentTableCell[0] : editor.getBody();\n    };\n    const isListHost = (schema, node) => !isListNode(node) && !isListItemNode(node) && exists(listNames, listName => schema.isValidChild(node.nodeName, listName));\n    const getClosestListHost = (editor, elm) => {\n      const parentBlocks = editor.dom.getParents(elm, editor.dom.isBlock);\n      const parentBlock = find(parentBlocks, elm => isListHost(editor.schema, elm));\n      return parentBlock.getOr(editor.getBody());\n    };\n    const findLastParentListNode = (editor, elm) => {\n      const parentLists = editor.dom.getParents(elm, 'ol,ul', getClosestListHost(editor, elm));\n      return last(parentLists);\n    };\n    const getSelectedLists = editor => {\n      const firstList = findLastParentListNode(editor, editor.selection.getStart());\n      const subsequentLists = filter$1(editor.selection.getSelectedBlocks(), isOlUlNode);\n      return firstList.toArray().concat(subsequentLists);\n    };\n    const getSelectedListRoots = editor => {\n      const selectedLists = getSelectedLists(editor);\n      return getUniqueListRoots(editor, selectedLists);\n    };\n    const getUniqueListRoots = (editor, lists) => {\n      const listRoots = map(lists, list => findLastParentListNode(editor, list).getOr(list));\n      return unique(listRoots);\n    };\n\n    const isCustomList = list => /\\btox\\-/.test(list.className);\n    const inList = (parents, listName) => findUntil(parents, isListNode, isTableCellNode).exists(list => list.nodeName === listName && !isCustomList(list));\n    const isWithinNonEditable = (editor, element) => element !== null && editor.dom.getContentEditableParent(element) === 'false';\n    const selectionIsWithinNonEditableList = editor => {\n      const parentList = getParentList(editor);\n      return isWithinNonEditable(editor, parentList);\n    };\n    const isWithinNonEditableList = (editor, element) => {\n      const parentList = editor.dom.getParent(element, 'ol,ul,dl');\n      return isWithinNonEditable(editor, parentList);\n    };\n    const setNodeChangeHandler = (editor, nodeChangeHandler) => {\n      const initialNode = editor.selection.getNode();\n      nodeChangeHandler({\n        parents: editor.dom.getParents(initialNode),\n        element: initialNode\n      });\n      editor.on('NodeChange', nodeChangeHandler);\n      return () => editor.off('NodeChange', nodeChangeHandler);\n    };\n\n    const fromElements = (elements, scope) => {\n      const doc = scope || document;\n      const fragment = doc.createDocumentFragment();\n      each$1(elements, element => {\n        fragment.appendChild(element.dom);\n      });\n      return SugarElement.fromDom(fragment);\n    };\n\n    const fireListEvent = (editor, action, element) => editor.dispatch('ListMutation', {\n      action,\n      element\n    });\n\n    const blank = r => s => s.replace(r, '');\n    const trim = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const isEmpty = s => !isNotEmpty(s);\n\n    const isSupported = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const set = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n\n    const joinSegment = (parent, child) => {\n      append$1(parent.item, child.list);\n    };\n    const joinSegments = segments => {\n      for (let i = 1; i < segments.length; i++) {\n        joinSegment(segments[i - 1], segments[i]);\n      }\n    };\n    const appendSegments = (head$1, tail) => {\n      lift2(last(head$1), head(tail), joinSegment);\n    };\n    const createSegment = (scope, listType) => {\n      const segment = {\n        list: SugarElement.fromTag(listType, scope),\n        item: SugarElement.fromTag('li', scope)\n      };\n      append$1(segment.list, segment.item);\n      return segment;\n    };\n    const createSegments = (scope, entry, size) => {\n      const segments = [];\n      for (let i = 0; i < size; i++) {\n        segments.push(createSegment(scope, entry.listType));\n      }\n      return segments;\n    };\n    const populateSegments = (segments, entry) => {\n      for (let i = 0; i < segments.length - 1; i++) {\n        set(segments[i].item, 'list-style-type', 'none');\n      }\n      last(segments).each(segment => {\n        setAll(segment.list, entry.listAttributes);\n        setAll(segment.item, entry.itemAttributes);\n        append(segment.item, entry.content);\n      });\n    };\n    const normalizeSegment = (segment, entry) => {\n      if (name(segment.list) !== entry.listType) {\n        segment.list = mutate(segment.list, entry.listType);\n      }\n      setAll(segment.list, entry.listAttributes);\n    };\n    const createItem = (scope, attr, content) => {\n      const item = SugarElement.fromTag('li', scope);\n      setAll(item, attr);\n      append(item, content);\n      return item;\n    };\n    const appendItem = (segment, item) => {\n      append$1(segment.list, item);\n      segment.item = item;\n    };\n    const writeShallow = (scope, cast, entry) => {\n      const newCast = cast.slice(0, entry.depth);\n      last(newCast).each(segment => {\n        const item = createItem(scope, entry.itemAttributes, entry.content);\n        appendItem(segment, item);\n        normalizeSegment(segment, entry);\n      });\n      return newCast;\n    };\n    const writeDeep = (scope, cast, entry) => {\n      const segments = createSegments(scope, entry, entry.depth - cast.length);\n      joinSegments(segments);\n      populateSegments(segments, entry);\n      appendSegments(cast, segments);\n      return cast.concat(segments);\n    };\n    const composeList = (scope, entries) => {\n      const cast = foldl(entries, (cast, entry) => {\n        return entry.depth > cast.length ? writeDeep(scope, cast, entry) : writeShallow(scope, cast, entry);\n      }, []);\n      return head(cast).map(segment => segment.list);\n    };\n\n    const isList = el => is(el, 'OL,UL');\n    const hasFirstChildList = el => firstChild(el).exists(isList);\n    const hasLastChildList = el => lastChild(el).exists(isList);\n\n    const isIndented = entry => entry.depth > 0;\n    const isSelected = entry => entry.isSelected;\n    const cloneItemContent = li => {\n      const children$1 = children(li);\n      const content = hasLastChildList(li) ? children$1.slice(0, -1) : children$1;\n      return map(content, deep);\n    };\n    const createEntry = (li, depth, isSelected) => parent(li).filter(isElement$1).map(list => ({\n      depth,\n      dirty: false,\n      isSelected,\n      content: cloneItemContent(li),\n      itemAttributes: clone$1(li),\n      listAttributes: clone$1(list),\n      listType: name(list)\n    }));\n\n    const indentEntry = (indentation, entry) => {\n      switch (indentation) {\n      case 'Indent':\n        entry.depth++;\n        break;\n      case 'Outdent':\n        entry.depth--;\n        break;\n      case 'Flatten':\n        entry.depth = 0;\n      }\n      entry.dirty = true;\n    };\n\n    const cloneListProperties = (target, source) => {\n      target.listType = source.listType;\n      target.listAttributes = { ...source.listAttributes };\n    };\n    const cleanListProperties = entry => {\n      entry.listAttributes = filter(entry.listAttributes, (_value, key) => key !== 'start');\n    };\n    const closestSiblingEntry = (entries, start) => {\n      const depth = entries[start].depth;\n      const matches = entry => entry.depth === depth && !entry.dirty;\n      const until = entry => entry.depth < depth;\n      return findUntil(reverse(entries.slice(0, start)), matches, until).orThunk(() => findUntil(entries.slice(start + 1), matches, until));\n    };\n    const normalizeEntries = entries => {\n      each$1(entries, (entry, i) => {\n        closestSiblingEntry(entries, i).fold(() => {\n          if (entry.dirty) {\n            cleanListProperties(entry);\n          }\n        }, matchingEntry => cloneListProperties(entry, matchingEntry));\n      });\n      return entries;\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const parseItem = (depth, itemSelection, selectionState, item) => firstChild(item).filter(isList).fold(() => {\n      itemSelection.each(selection => {\n        if (eq(selection.start, item)) {\n          selectionState.set(true);\n        }\n      });\n      const currentItemEntry = createEntry(item, depth, selectionState.get());\n      itemSelection.each(selection => {\n        if (eq(selection.end, item)) {\n          selectionState.set(false);\n        }\n      });\n      const childListEntries = lastChild(item).filter(isList).map(list => parseList(depth, itemSelection, selectionState, list)).getOr([]);\n      return currentItemEntry.toArray().concat(childListEntries);\n    }, list => parseList(depth, itemSelection, selectionState, list));\n    const parseList = (depth, itemSelection, selectionState, list) => bind(children(list), element => {\n      const parser = isList(element) ? parseList : parseItem;\n      const newDepth = depth + 1;\n      return parser(newDepth, itemSelection, selectionState, element);\n    });\n    const parseLists = (lists, itemSelection) => {\n      const selectionState = Cell(false);\n      const initialDepth = 0;\n      return map(lists, list => ({\n        sourceList: list,\n        entries: parseList(initialDepth, itemSelection, selectionState, list)\n      }));\n    };\n\n    const outdentedComposer = (editor, entries) => {\n      const normalizedEntries = normalizeEntries(entries);\n      return map(normalizedEntries, entry => {\n        const content = fromElements(entry.content);\n        return SugarElement.fromDom(createTextBlock(editor, content.dom));\n      });\n    };\n    const indentedComposer = (editor, entries) => {\n      const normalizedEntries = normalizeEntries(entries);\n      return composeList(editor.contentDocument, normalizedEntries).toArray();\n    };\n    const composeEntries = (editor, entries) => bind(groupBy(entries, isIndented), entries => {\n      const groupIsIndented = head(entries).exists(isIndented);\n      return groupIsIndented ? indentedComposer(editor, entries) : outdentedComposer(editor, entries);\n    });\n    const indentSelectedEntries = (entries, indentation) => {\n      each$1(filter$1(entries, isSelected), entry => indentEntry(indentation, entry));\n    };\n    const getItemSelection = editor => {\n      const selectedListItems = map(getSelectedListItems(editor), SugarElement.fromDom);\n      return lift2(find(selectedListItems, not(hasFirstChildList)), find(reverse(selectedListItems), not(hasFirstChildList)), (start, end) => ({\n        start,\n        end\n      }));\n    };\n    const listIndentation = (editor, lists, indentation) => {\n      const entrySets = parseLists(lists, getItemSelection(editor));\n      each$1(entrySets, entrySet => {\n        indentSelectedEntries(entrySet.entries, indentation);\n        const composedLists = composeEntries(editor, entrySet.entries);\n        each$1(composedLists, composedList => {\n          fireListEvent(editor, indentation === 'Indent' ? 'IndentList' : 'OutdentList', composedList.dom);\n        });\n        before(entrySet.sourceList, composedLists);\n        remove(entrySet.sourceList);\n      });\n    };\n\n    const selectionIndentation = (editor, indentation) => {\n      const lists = fromDom(getSelectedListRoots(editor));\n      const dlItems = fromDom(getSelectedDlItems(editor));\n      let isHandled = false;\n      if (lists.length || dlItems.length) {\n        const bookmark = editor.selection.getBookmark();\n        listIndentation(editor, lists, indentation);\n        dlIndentation(editor, indentation, dlItems);\n        editor.selection.moveToBookmark(bookmark);\n        editor.selection.setRng(normalizeRange(editor.selection.getRng()));\n        editor.nodeChanged();\n        isHandled = true;\n      }\n      return isHandled;\n    };\n    const handleIndentation = (editor, indentation) => !selectionIsWithinNonEditableList(editor) && selectionIndentation(editor, indentation);\n    const indentListSelection = editor => handleIndentation(editor, 'Indent');\n    const outdentListSelection = editor => handleIndentation(editor, 'Outdent');\n    const flattenListSelection = editor => handleIndentation(editor, 'Flatten');\n\n    var global = tinymce.util.Tools.resolve('tinymce.dom.BookmarkManager');\n\n    const DOM$1 = global$2.DOM;\n    const createBookmark = rng => {\n      const bookmark = {};\n      const setupEndPoint = start => {\n        let container = rng[start ? 'startContainer' : 'endContainer'];\n        let offset = rng[start ? 'startOffset' : 'endOffset'];\n        if (isElement(container)) {\n          const offsetNode = DOM$1.create('span', { 'data-mce-type': 'bookmark' });\n          if (container.hasChildNodes()) {\n            offset = Math.min(offset, container.childNodes.length - 1);\n            if (start) {\n              container.insertBefore(offsetNode, container.childNodes[offset]);\n            } else {\n              DOM$1.insertAfter(offsetNode, container.childNodes[offset]);\n            }\n          } else {\n            container.appendChild(offsetNode);\n          }\n          container = offsetNode;\n          offset = 0;\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      setupEndPoint(true);\n      if (!rng.collapsed) {\n        setupEndPoint();\n      }\n      return bookmark;\n    };\n    const resolveBookmark = bookmark => {\n      const restoreEndPoint = start => {\n        const nodeIndex = container => {\n          var _a;\n          let node = (_a = container.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild;\n          let idx = 0;\n          while (node) {\n            if (node === container) {\n              return idx;\n            }\n            if (!isElement(node) || node.getAttribute('data-mce-type') !== 'bookmark') {\n              idx++;\n            }\n            node = node.nextSibling;\n          }\n          return -1;\n        };\n        let container = bookmark[start ? 'startContainer' : 'endContainer'];\n        let offset = bookmark[start ? 'startOffset' : 'endOffset'];\n        if (!container) {\n          return;\n        }\n        if (isElement(container) && container.parentNode) {\n          const node = container;\n          offset = nodeIndex(container);\n          container = container.parentNode;\n          DOM$1.remove(node);\n          if (!container.hasChildNodes() && DOM$1.isBlock(container)) {\n            container.appendChild(DOM$1.create('br'));\n          }\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      restoreEndPoint(true);\n      restoreEndPoint();\n      const rng = DOM$1.createRng();\n      rng.setStart(bookmark.startContainer, bookmark.startOffset);\n      if (bookmark.endContainer) {\n        rng.setEnd(bookmark.endContainer, bookmark.endOffset);\n      }\n      return normalizeRange(rng);\n    };\n\n    const listToggleActionFromListName = listName => {\n      switch (listName) {\n      case 'UL':\n        return 'ToggleUlList';\n      case 'OL':\n        return 'ToggleOlList';\n      case 'DL':\n        return 'ToggleDLList';\n      }\n    };\n\n    const updateListStyle = (dom, el, detail) => {\n      const type = detail['list-style-type'] ? detail['list-style-type'] : null;\n      dom.setStyle(el, 'list-style-type', type);\n    };\n    const setAttribs = (elm, attrs) => {\n      global$1.each(attrs, (value, key) => {\n        elm.setAttribute(key, value);\n      });\n    };\n    const updateListAttrs = (dom, el, detail) => {\n      setAttribs(el, detail['list-attributes']);\n      global$1.each(dom.select('li', el), li => {\n        setAttribs(li, detail['list-item-attributes']);\n      });\n    };\n    const updateListWithDetails = (dom, el, detail) => {\n      updateListStyle(dom, el, detail);\n      updateListAttrs(dom, el, detail);\n    };\n    const removeStyles = (dom, element, styles) => {\n      global$1.each(styles, style => dom.setStyle(element, style, ''));\n    };\n    const getEndPointNode = (editor, rng, start, root) => {\n      let container = rng[start ? 'startContainer' : 'endContainer'];\n      const offset = rng[start ? 'startOffset' : 'endOffset'];\n      if (isElement(container)) {\n        container = container.childNodes[Math.min(offset, container.childNodes.length - 1)] || container;\n      }\n      if (!start && isBr(container.nextSibling)) {\n        container = container.nextSibling;\n      }\n      while (container.parentNode !== root) {\n        const parent = container.parentNode;\n        if (isTextBlock(editor, container)) {\n          return container;\n        }\n        if (/^(TD|TH)$/.test(parent.nodeName)) {\n          return container;\n        }\n        container = parent;\n      }\n      return container;\n    };\n    const getSelectedTextBlocks = (editor, rng, root) => {\n      const textBlocks = [];\n      const dom = editor.dom;\n      const startNode = getEndPointNode(editor, rng, true, root);\n      const endNode = getEndPointNode(editor, rng, false, root);\n      let block;\n      const siblings = [];\n      for (let node = startNode; node; node = node.nextSibling) {\n        siblings.push(node);\n        if (node === endNode) {\n          break;\n        }\n      }\n      global$1.each(siblings, node => {\n        var _a;\n        if (isTextBlock(editor, node)) {\n          textBlocks.push(node);\n          block = null;\n          return;\n        }\n        if (dom.isBlock(node) || isBr(node)) {\n          if (isBr(node)) {\n            dom.remove(node);\n          }\n          block = null;\n          return;\n        }\n        const nextSibling = node.nextSibling;\n        if (global.isBookmarkNode(node)) {\n          if (isListNode(nextSibling) || isTextBlock(editor, nextSibling) || !nextSibling && node.parentNode === root) {\n            block = null;\n            return;\n          }\n        }\n        if (!block) {\n          block = dom.create('p');\n          (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(block, node);\n          textBlocks.push(block);\n        }\n        block.appendChild(node);\n      });\n      return textBlocks;\n    };\n    const hasCompatibleStyle = (dom, sib, detail) => {\n      const sibStyle = dom.getStyle(sib, 'list-style-type');\n      let detailStyle = detail ? detail['list-style-type'] : '';\n      detailStyle = detailStyle === null ? '' : detailStyle;\n      return sibStyle === detailStyle;\n    };\n    const applyList = (editor, listName, detail) => {\n      const rng = editor.selection.getRng();\n      let listItemName = 'LI';\n      const root = getClosestListHost(editor, editor.selection.getStart(true));\n      const dom = editor.dom;\n      if (dom.getContentEditable(editor.selection.getNode()) === 'false') {\n        return;\n      }\n      listName = listName.toUpperCase();\n      if (listName === 'DL') {\n        listItemName = 'DT';\n      }\n      const bookmark = createBookmark(rng);\n      const selectedTextBlocks = getSelectedTextBlocks(editor, rng, root);\n      global$1.each(selectedTextBlocks, block => {\n        let listBlock;\n        const sibling = block.previousSibling;\n        const parent = block.parentNode;\n        if (!isListItemNode(parent)) {\n          if (sibling && isListNode(sibling) && sibling.nodeName === listName && hasCompatibleStyle(dom, sibling, detail)) {\n            listBlock = sibling;\n            block = dom.rename(block, listItemName);\n            sibling.appendChild(block);\n          } else {\n            listBlock = dom.create(listName);\n            parent.insertBefore(listBlock, block);\n            listBlock.appendChild(block);\n            block = dom.rename(block, listItemName);\n          }\n          removeStyles(dom, block, [\n            'margin',\n            'margin-right',\n            'margin-bottom',\n            'margin-left',\n            'margin-top',\n            'padding',\n            'padding-right',\n            'padding-bottom',\n            'padding-left',\n            'padding-top'\n          ]);\n          updateListWithDetails(dom, listBlock, detail);\n          mergeWithAdjacentLists(editor.dom, listBlock);\n        }\n      });\n      editor.selection.setRng(resolveBookmark(bookmark));\n    };\n    const isValidLists = (list1, list2) => {\n      return isListNode(list1) && list1.nodeName === (list2 === null || list2 === void 0 ? void 0 : list2.nodeName);\n    };\n    const hasSameListStyle = (dom, list1, list2) => {\n      const targetStyle = dom.getStyle(list1, 'list-style-type', true);\n      const style = dom.getStyle(list2, 'list-style-type', true);\n      return targetStyle === style;\n    };\n    const hasSameClasses = (elm1, elm2) => {\n      return elm1.className === elm2.className;\n    };\n    const shouldMerge = (dom, list1, list2) => {\n      return isValidLists(list1, list2) && hasSameListStyle(dom, list1, list2) && hasSameClasses(list1, list2);\n    };\n    const mergeWithAdjacentLists = (dom, listBlock) => {\n      let node;\n      let sibling = listBlock.nextSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        const liSibling = sibling;\n        while (node = liSibling.firstChild) {\n          listBlock.appendChild(node);\n        }\n        dom.remove(liSibling);\n      }\n      sibling = listBlock.previousSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        const liSibling = sibling;\n        while (node = liSibling.lastChild) {\n          listBlock.insertBefore(node, listBlock.firstChild);\n        }\n        dom.remove(liSibling);\n      }\n    };\n    const updateList$1 = (editor, list, listName, detail) => {\n      if (list.nodeName !== listName) {\n        const newList = editor.dom.rename(list, listName);\n        updateListWithDetails(editor.dom, newList, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), newList);\n      } else {\n        updateListWithDetails(editor.dom, list, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), list);\n      }\n    };\n    const toggleMultipleLists = (editor, parentList, lists, listName, detail) => {\n      const parentIsList = isListNode(parentList);\n      if (parentIsList && parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n        flattenListSelection(editor);\n      } else {\n        applyList(editor, listName, detail);\n        const bookmark = createBookmark(editor.selection.getRng());\n        const allLists = parentIsList ? [\n          parentList,\n          ...lists\n        ] : lists;\n        global$1.each(allLists, elm => {\n          updateList$1(editor, elm, listName, detail);\n        });\n        editor.selection.setRng(resolveBookmark(bookmark));\n      }\n    };\n    const hasListStyleDetail = detail => {\n      return 'list-style-type' in detail;\n    };\n    const toggleSingleList = (editor, parentList, listName, detail) => {\n      if (parentList === editor.getBody()) {\n        return;\n      }\n      if (parentList) {\n        if (parentList.nodeName === listName && !hasListStyleDetail(detail) && !isCustomList(parentList)) {\n          flattenListSelection(editor);\n        } else {\n          const bookmark = createBookmark(editor.selection.getRng());\n          updateListWithDetails(editor.dom, parentList, detail);\n          const newList = editor.dom.rename(parentList, listName);\n          mergeWithAdjacentLists(editor.dom, newList);\n          editor.selection.setRng(resolveBookmark(bookmark));\n          applyList(editor, listName, detail);\n          fireListEvent(editor, listToggleActionFromListName(listName), newList);\n        }\n      } else {\n        applyList(editor, listName, detail);\n        fireListEvent(editor, listToggleActionFromListName(listName), parentList);\n      }\n    };\n    const toggleList = (editor, listName, _detail) => {\n      const parentList = getParentList(editor);\n      if (isWithinNonEditableList(editor, parentList)) {\n        return;\n      }\n      const selectedSubLists = getSelectedSubLists(editor);\n      const detail = isObject(_detail) ? _detail : {};\n      if (selectedSubLists.length > 0) {\n        toggleMultipleLists(editor, parentList, selectedSubLists, listName, detail);\n      } else {\n        toggleSingleList(editor, parentList, listName, detail);\n      }\n    };\n\n    const DOM = global$2.DOM;\n    const normalizeList = (dom, list) => {\n      const parentNode = list.parentElement;\n      if (parentNode && parentNode.nodeName === 'LI' && parentNode.firstChild === list) {\n        const sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(list);\n          if (isEmpty$1(dom, parentNode)) {\n            DOM.remove(parentNode);\n          }\n        } else {\n          DOM.setStyle(parentNode, 'listStyleType', 'none');\n        }\n      }\n      if (isListNode(parentNode)) {\n        const sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(list);\n        }\n      }\n    };\n    const normalizeLists = (dom, element) => {\n      const lists = global$1.grep(dom.select('ol,ul', element));\n      global$1.each(lists, list => {\n        normalizeList(dom, list);\n      });\n    };\n\n    const findNextCaretContainer = (editor, rng, isForward, root) => {\n      let node = rng.startContainer;\n      const offset = rng.startOffset;\n      if (isTextNode(node) && (isForward ? offset < node.data.length : offset > 0)) {\n        return node;\n      }\n      const nonEmptyBlocks = editor.schema.getNonEmptyElements();\n      if (isElement(node)) {\n        node = global$5.getNode(node, offset);\n      }\n      const walker = new global$4(node, root);\n      if (isForward) {\n        if (isBogusBr(editor.dom, node)) {\n          walker.next();\n        }\n      }\n      const walkFn = isForward ? walker.next.bind(walker) : walker.prev2.bind(walker);\n      while (node = walkFn()) {\n        if (node.nodeName === 'LI' && !node.hasChildNodes()) {\n          return node;\n        }\n        if (nonEmptyBlocks[node.nodeName]) {\n          return node;\n        }\n        if (isTextNode(node) && node.data.length > 0) {\n          return node;\n        }\n      }\n      return null;\n    };\n    const hasOnlyOneBlockChild = (dom, elm) => {\n      const childNodes = elm.childNodes;\n      return childNodes.length === 1 && !isListNode(childNodes[0]) && dom.isBlock(childNodes[0]);\n    };\n    const unwrapSingleBlockChild = (dom, elm) => {\n      if (hasOnlyOneBlockChild(dom, elm)) {\n        dom.remove(elm.firstChild, true);\n      }\n    };\n    const moveChildren = (dom, fromElm, toElm) => {\n      let node;\n      const targetElm = hasOnlyOneBlockChild(dom, toElm) ? toElm.firstChild : toElm;\n      unwrapSingleBlockChild(dom, fromElm);\n      if (!isEmpty$1(dom, fromElm, true)) {\n        while (node = fromElm.firstChild) {\n          targetElm.appendChild(node);\n        }\n      }\n    };\n    const mergeLiElements = (dom, fromElm, toElm) => {\n      let listNode;\n      const ul = fromElm.parentNode;\n      if (!isChildOfBody(dom, fromElm) || !isChildOfBody(dom, toElm)) {\n        return;\n      }\n      if (isListNode(toElm.lastChild)) {\n        listNode = toElm.lastChild;\n      }\n      if (ul === toElm.lastChild) {\n        if (isBr(ul.previousSibling)) {\n          dom.remove(ul.previousSibling);\n        }\n      }\n      const node = toElm.lastChild;\n      if (node && isBr(node) && fromElm.hasChildNodes()) {\n        dom.remove(node);\n      }\n      if (isEmpty$1(dom, toElm, true)) {\n        empty(SugarElement.fromDom(toElm));\n      }\n      moveChildren(dom, fromElm, toElm);\n      if (listNode) {\n        toElm.appendChild(listNode);\n      }\n      const contains$1 = contains(SugarElement.fromDom(toElm), SugarElement.fromDom(fromElm));\n      const nestedLists = contains$1 ? dom.getParents(fromElm, isListNode, toElm) : [];\n      dom.remove(fromElm);\n      each$1(nestedLists, list => {\n        if (isEmpty$1(dom, list) && list !== dom.getRoot()) {\n          dom.remove(list);\n        }\n      });\n    };\n    const mergeIntoEmptyLi = (editor, fromLi, toLi) => {\n      empty(SugarElement.fromDom(toLi));\n      mergeLiElements(editor.dom, fromLi, toLi);\n      editor.selection.setCursorLocation(toLi, 0);\n    };\n    const mergeForward = (editor, rng, fromLi, toLi) => {\n      const dom = editor.dom;\n      if (dom.isEmpty(toLi)) {\n        mergeIntoEmptyLi(editor, fromLi, toLi);\n      } else {\n        const bookmark = createBookmark(rng);\n        mergeLiElements(dom, fromLi, toLi);\n        editor.selection.setRng(resolveBookmark(bookmark));\n      }\n    };\n    const mergeBackward = (editor, rng, fromLi, toLi) => {\n      const bookmark = createBookmark(rng);\n      mergeLiElements(editor.dom, fromLi, toLi);\n      const resolvedBookmark = resolveBookmark(bookmark);\n      editor.selection.setRng(resolvedBookmark);\n    };\n    const backspaceDeleteFromListToListCaret = (editor, isForward) => {\n      const dom = editor.dom, selection = editor.selection;\n      const selectionStartElm = selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const li = dom.getParent(selection.getStart(), 'LI', root);\n      if (li) {\n        const ul = li.parentElement;\n        if (ul === editor.getBody() && isEmpty$1(dom, ul)) {\n          return true;\n        }\n        const rng = normalizeRange(selection.getRng());\n        const otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi && otherLi !== li) {\n          editor.undoManager.transact(() => {\n            if (isForward) {\n              mergeForward(editor, rng, otherLi, li);\n            } else {\n              if (isFirstChild(li)) {\n                outdentListSelection(editor);\n              } else {\n                mergeBackward(editor, rng, li, otherLi);\n              }\n            }\n          });\n          return true;\n        } else if (!otherLi) {\n          if (!isForward && rng.startOffset === 0 && rng.endOffset === 0) {\n            editor.undoManager.transact(() => {\n              flattenListSelection(editor);\n            });\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    const removeBlock = (dom, block, root) => {\n      const parentBlock = dom.getParent(block.parentNode, dom.isBlock, root);\n      dom.remove(block);\n      if (parentBlock && dom.isEmpty(parentBlock)) {\n        dom.remove(parentBlock);\n      }\n    };\n    const backspaceDeleteIntoListCaret = (editor, isForward) => {\n      const dom = editor.dom;\n      const selectionStartElm = editor.selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const block = dom.getParent(selectionStartElm, dom.isBlock, root);\n      if (block && dom.isEmpty(block)) {\n        const rng = normalizeRange(editor.selection.getRng());\n        const otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi) {\n          const findValidElement = element => contains$1([\n            'td',\n            'th',\n            'caption'\n          ], name(element));\n          const findRoot = node => node.dom === root;\n          const otherLiCell = closest(SugarElement.fromDom(otherLi), findValidElement, findRoot);\n          const caretCell = closest(SugarElement.fromDom(rng.startContainer), findValidElement, findRoot);\n          if (!equals(otherLiCell, caretCell, eq)) {\n            return false;\n          }\n          editor.undoManager.transact(() => {\n            removeBlock(dom, block, root);\n            mergeWithAdjacentLists(dom, otherLi.parentNode);\n            editor.selection.select(otherLi, true);\n            editor.selection.collapse(isForward);\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    const backspaceDeleteCaret = (editor, isForward) => {\n      return backspaceDeleteFromListToListCaret(editor, isForward) || backspaceDeleteIntoListCaret(editor, isForward);\n    };\n    const hasListSelection = editor => {\n      const selectionStartElm = editor.selection.getStart();\n      const root = getClosestEditingHost(editor, selectionStartElm);\n      const startListParent = editor.dom.getParent(selectionStartElm, 'LI,DT,DD', root);\n      return startListParent || getSelectedListItems(editor).length > 0;\n    };\n    const backspaceDeleteRange = editor => {\n      if (hasListSelection(editor)) {\n        editor.undoManager.transact(() => {\n          editor.execCommand('Delete');\n          normalizeLists(editor.dom, editor.getBody());\n        });\n        return true;\n      }\n      return false;\n    };\n    const backspaceDelete = (editor, isForward) => {\n      const selection = editor.selection;\n      return !isWithinNonEditableList(editor, selection.getNode()) && (selection.isCollapsed() ? backspaceDeleteCaret(editor, isForward) : backspaceDeleteRange(editor));\n    };\n    const setup$1 = editor => {\n      editor.on('ExecCommand', e => {\n        const cmd = e.command.toLowerCase();\n        if ((cmd === 'delete' || cmd === 'forwarddelete') && hasListSelection(editor)) {\n          normalizeLists(editor.dom, editor.getBody());\n        }\n      });\n      editor.on('keydown', e => {\n        if (e.keyCode === global$3.BACKSPACE) {\n          if (backspaceDelete(editor, false)) {\n            e.preventDefault();\n          }\n        } else if (e.keyCode === global$3.DELETE) {\n          if (backspaceDelete(editor, true)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n\n    const get = editor => ({\n      backspaceDelete: isForward => {\n        backspaceDelete(editor, isForward);\n      }\n    });\n\n    const updateList = (editor, update) => {\n      const parentList = getParentList(editor);\n      if (parentList === null || isWithinNonEditableList(editor, parentList)) {\n        return;\n      }\n      editor.undoManager.transact(() => {\n        if (isObject(update.styles)) {\n          editor.dom.setStyles(parentList, update.styles);\n        }\n        if (isObject(update.attrs)) {\n          each(update.attrs, (v, k) => editor.dom.setAttrib(parentList, k, v));\n        }\n      });\n    };\n\n    const parseAlphabeticBase26 = str => {\n      const chars = reverse(trim(str).split(''));\n      const values = map(chars, (char, i) => {\n        const charValue = char.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0) + 1;\n        return Math.pow(26, i) * charValue;\n      });\n      return foldl(values, (sum, v) => sum + v, 0);\n    };\n    const composeAlphabeticBase26 = value => {\n      value--;\n      if (value < 0) {\n        return '';\n      } else {\n        const remainder = value % 26;\n        const quotient = Math.floor(value / 26);\n        const rest = composeAlphabeticBase26(quotient);\n        const char = String.fromCharCode('A'.charCodeAt(0) + remainder);\n        return rest + char;\n      }\n    };\n    const isUppercase = str => /^[A-Z]+$/.test(str);\n    const isLowercase = str => /^[a-z]+$/.test(str);\n    const isNumeric = str => /^[0-9]+$/.test(str);\n    const deduceListType = start => {\n      if (isNumeric(start)) {\n        return 2;\n      } else if (isUppercase(start)) {\n        return 0;\n      } else if (isLowercase(start)) {\n        return 1;\n      } else if (isEmpty(start)) {\n        return 3;\n      } else {\n        return 4;\n      }\n    };\n    const parseStartValue = start => {\n      switch (deduceListType(start)) {\n      case 2:\n        return Optional.some({\n          listStyleType: Optional.none(),\n          start\n        });\n      case 0:\n        return Optional.some({\n          listStyleType: Optional.some('upper-alpha'),\n          start: parseAlphabeticBase26(start).toString()\n        });\n      case 1:\n        return Optional.some({\n          listStyleType: Optional.some('lower-alpha'),\n          start: parseAlphabeticBase26(start).toString()\n        });\n      case 3:\n        return Optional.some({\n          listStyleType: Optional.none(),\n          start: ''\n        });\n      case 4:\n        return Optional.none();\n      }\n    };\n    const parseDetail = detail => {\n      const start = parseInt(detail.start, 10);\n      if (is$2(detail.listStyleType, 'upper-alpha')) {\n        return composeAlphabeticBase26(start);\n      } else if (is$2(detail.listStyleType, 'lower-alpha')) {\n        return composeAlphabeticBase26(start).toLowerCase();\n      } else {\n        return detail.start;\n      }\n    };\n\n    const open = editor => {\n      const currentList = getParentList(editor);\n      if (!isOlNode(currentList) || isWithinNonEditableList(editor, currentList)) {\n        return;\n      }\n      editor.windowManager.open({\n        title: 'List Properties',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'input',\n              name: 'start',\n              label: 'Start list at number',\n              inputMode: 'numeric'\n            }]\n        },\n        initialData: {\n          start: parseDetail({\n            start: editor.dom.getAttrib(currentList, 'start', '1'),\n            listStyleType: Optional.from(editor.dom.getStyle(currentList, 'list-style-type'))\n          })\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        onSubmit: api => {\n          const data = api.getData();\n          parseStartValue(data.start).each(detail => {\n            editor.execCommand('mceListUpdate', false, {\n              attrs: { start: detail.start === '1' ? '' : detail.start },\n              styles: { 'list-style-type': detail.listStyleType.getOr('') }\n            });\n          });\n          api.close();\n        }\n      });\n    };\n\n    const queryListCommandState = (editor, listName) => () => {\n      const parentList = getParentList(editor);\n      return isNonNullable(parentList) && parentList.nodeName === listName;\n    };\n    const registerDialog = editor => {\n      editor.addCommand('mceListProps', () => {\n        open(editor);\n      });\n    };\n    const register$2 = editor => {\n      editor.on('BeforeExecCommand', e => {\n        const cmd = e.command.toLowerCase();\n        if (cmd === 'indent') {\n          indentListSelection(editor);\n        } else if (cmd === 'outdent') {\n          outdentListSelection(editor);\n        }\n      });\n      editor.addCommand('InsertUnorderedList', (ui, detail) => {\n        toggleList(editor, 'UL', detail);\n      });\n      editor.addCommand('InsertOrderedList', (ui, detail) => {\n        toggleList(editor, 'OL', detail);\n      });\n      editor.addCommand('InsertDefinitionList', (ui, detail) => {\n        toggleList(editor, 'DL', detail);\n      });\n      editor.addCommand('RemoveList', () => {\n        flattenListSelection(editor);\n      });\n      registerDialog(editor);\n      editor.addCommand('mceListUpdate', (ui, detail) => {\n        if (isObject(detail)) {\n          updateList(editor, detail);\n        }\n      });\n      editor.addQueryStateHandler('InsertUnorderedList', queryListCommandState(editor, 'UL'));\n      editor.addQueryStateHandler('InsertOrderedList', queryListCommandState(editor, 'OL'));\n      editor.addQueryStateHandler('InsertDefinitionList', queryListCommandState(editor, 'DL'));\n    };\n\n    const setupTabKey = editor => {\n      editor.on('keydown', e => {\n        if (e.keyCode !== global$3.TAB || global$3.metaKeyPressed(e)) {\n          return;\n        }\n        editor.undoManager.transact(() => {\n          if (e.shiftKey ? outdentListSelection(editor) : indentListSelection(editor)) {\n            e.preventDefault();\n          }\n        });\n      });\n    };\n    const setup = editor => {\n      if (shouldIndentOnTab(editor)) {\n        setupTabKey(editor);\n      }\n      setup$1(editor);\n    };\n\n    const setupToggleButtonHandler = (editor, listName) => api => {\n      const toggleButtonHandler = e => {\n        api.setActive(inList(e.parents, listName));\n        api.setEnabled(!isWithinNonEditableList(editor, e.element));\n      };\n      return setNodeChangeHandler(editor, toggleButtonHandler);\n    };\n    const register$1 = editor => {\n      const exec = command => () => editor.execCommand(command);\n      if (!editor.hasPlugin('advlist')) {\n        editor.ui.registry.addToggleButton('numlist', {\n          icon: 'ordered-list',\n          active: false,\n          tooltip: 'Numbered list',\n          onAction: exec('InsertOrderedList'),\n          onSetup: setupToggleButtonHandler(editor, 'OL')\n        });\n        editor.ui.registry.addToggleButton('bullist', {\n          icon: 'unordered-list',\n          active: false,\n          tooltip: 'Bullet list',\n          onAction: exec('InsertUnorderedList'),\n          onSetup: setupToggleButtonHandler(editor, 'UL')\n        });\n      }\n    };\n\n    const setupMenuButtonHandler = (editor, listName) => api => {\n      const menuButtonHandler = e => api.setEnabled(inList(e.parents, listName) && !isWithinNonEditableList(editor, e.element));\n      return setNodeChangeHandler(editor, menuButtonHandler);\n    };\n    const register = editor => {\n      const listProperties = {\n        text: 'List properties...',\n        icon: 'ordered-list',\n        onAction: () => editor.execCommand('mceListProps'),\n        onSetup: setupMenuButtonHandler(editor, 'OL')\n      };\n      editor.ui.registry.addMenuItem('listprops', listProperties);\n      editor.ui.registry.addContextMenu('lists', {\n        update: node => {\n          const parentList = getParentList(editor, node);\n          return isOlNode(parentList) ? ['listprops'] : [];\n        }\n      });\n    };\n\n    var Plugin = () => {\n      global$6.add('lists', editor => {\n        register$3(editor);\n        if (!editor.hasPlugin('rtc', true)) {\n          setup(editor);\n          register$2(editor);\n        } else {\n          registerDialog(editor);\n        }\n        register$1(editor);\n        register(editor);\n        return get(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"},"lineCount":1868}},"error":null,"hash":"e3b4ff9c513a88e3de545b0afab3c4e4","cacheData":{"env":{}}}