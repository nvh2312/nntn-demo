{"id":"../../node_modules/tinymce/models/dom/model.js","dependencies":[{"name":"D:\\testtttt\\vien-nntn\\package.json","includedInParent":true,"mtime":1667494144802},{"name":"D:\\testtttt\\vien-nntn\\node_modules\\tinymce\\package.json","includedInParent":true,"mtime":1667487746497},{"name":"process","parent":"D:\\testtttt\\vien-nntn\\node_modules\\tinymce\\models\\dom\\model.js","resolved":"D:\\testtttt\\vien-nntn\\node_modules\\process\\browser.js"}],"generated":{"js":"var global = arguments[3];\nvar process = require(\"process\");\n/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.ModelManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$2 = t => a => t === a;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isArray = isType$1('array');\n    const isNull = eq$2(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$2(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const compose = (fa, fb) => {\n      return (...args) => {\n        return fa(fb.apply(null, args));\n      };\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const identity = x => {\n      return x;\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const not = f => t => !f(t);\n    const die = msg => {\n      return () => {\n        throw new Error(msg);\n      };\n    };\n    const apply = f => {\n      return f();\n    };\n    const never = constant(false);\n    const always = constant(true);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains$2 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const range$1 = (num, f) => {\n      const r = [];\n      for (let i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    const map$1 = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$2 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const eachr = (xs, f) => {\n      for (let i = xs.length - 1; i >= 0; i--) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const partition = (xs, pred) => {\n      const pass = [];\n      const fail = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        const arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass,\n        fail\n      };\n    };\n    const filter$2 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const foldr = (xs, f, acc) => {\n      eachr(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const foldl = (xs, f, acc) => {\n      each$2(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find$1 = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const findIndex = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(i);\n        }\n      }\n      return Optional.none();\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind$2 = (xs, f) => flatten(map$1(xs, f));\n    const forall = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        const x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const mapToObject = (xs, f) => {\n      const r = {};\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    const sort$1 = (xs, comparator) => {\n      const copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    const get$d = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$d(xs, 0);\n    const last$2 = xs => get$d(xs, xs.length - 1);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each$1 = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const map = (obj, f) => {\n      return tupleMap(obj, (x, i) => ({\n        k: i,\n        v: f(x, i)\n      }));\n    };\n    const tupleMap = (obj, f) => {\n      const r = {};\n      each$1(obj, (x, i) => {\n        const tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each$1(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter$1 = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const mapToArray = (obj, f) => {\n      const r = [];\n      each$1(obj, (value, name) => {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    const values = obj => {\n      return mapToArray(obj, identity);\n    };\n    const get$c = (obj, key) => {\n      return has$1(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has$1 = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has$1(obj, key) && obj[key] !== undefined && obj[key] !== null;\n    const isEmpty = r => {\n      for (const x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const COMMENT = 8;\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isComment = element => type(element) === COMMENT || name(element) === '#comment';\n    const isElement = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = tag => e => isElement(e) && name(e) === tag;\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$2 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const setAll$1 = (element, attrs) => {\n      const dom = element.dom;\n      each$1(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const setOptions = (element, attrs) => {\n      each$1(attrs, (v, k) => {\n        v.fold(() => {\n          remove$7(element, k);\n        }, value => {\n          rawSet(element.dom, k, value);\n        });\n      });\n    };\n    const get$b = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$b(element, key));\n    const remove$7 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n    const clone$2 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const fromHtml$1 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    const fromDom$1 = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint$1 = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    const SugarElement = {\n      fromHtml: fromHtml$1,\n      fromTag,\n      fromText,\n      fromDom: fromDom$1,\n      fromPoint: fromPoint$1\n    };\n\n    const is$2 = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$1 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map$1(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq$1 = (e1, e2) => e1.dom === e2.dom;\n    const contains$1 = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    const is$1 = is$2;\n\n    const owner = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner(dos);\n    const documentElement = element => SugarElement.fromDom(documentOrOwner(element).dom.documentElement);\n    const defaultView = element => SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n      const stop = isFunction(isRoot) ? isRoot : never;\n      let dom = element.dom;\n      const ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        const rawParent = dom.parentNode;\n        const p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    const prevSibling = element => Optional.from(element.dom.previousSibling).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children$2 = element => map$1(element.dom.childNodes, SugarElement.fromDom);\n    const child$2 = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child$2(element, 0);\n\n    const before$3 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after$5 = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$1(v, element);\n        });\n      }, v => {\n        before$3(v, element);\n      });\n    };\n    const prepend = (parent, element) => {\n      const firstChild$1 = firstChild(parent);\n      firstChild$1.fold(() => {\n        append$1(parent, element);\n      }, v => {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    const append$1 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n    const appendAt = (parent, element, index) => {\n      child$2(parent, index).fold(() => {\n        append$1(parent, element);\n      }, v => {\n        before$3(v, element);\n      });\n    };\n    const wrap = (element, wrapper) => {\n      before$3(element, wrapper);\n      append$1(wrapper, element);\n    };\n\n    const after$4 = (marker, elements) => {\n      each$2(elements, (x, i) => {\n        const e = i === 0 ? marker : elements[i - 1];\n        after$5(e, x);\n      });\n    };\n    const append = (parent, elements) => {\n      each$2(elements, x => {\n        append$1(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$2(children$2(element), rogue => {\n        remove$6(rogue);\n      });\n    };\n    const remove$6 = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    const unwrap = wrapper => {\n      const children = children$2(wrapper);\n      if (children.length > 0) {\n        after$4(wrapper, children);\n      }\n      remove$6(wrapper);\n    };\n\n    const clone$1 = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const shallow = original => clone$1(original, false);\n    const deep = original => clone$1(original, true);\n    const shallowAs = (original, tag) => {\n      const nu = SugarElement.fromTag(tag);\n      const attributes = clone$2(original);\n      setAll$1(nu, attributes);\n      return nu;\n    };\n    const copy$2 = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      const cloneChildren = children$2(deep(original));\n      append(nu, cloneChildren);\n      return nu;\n    };\n    const mutate$1 = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      after$5(original, nu);\n      const children = children$2(original);\n      append(nu, children);\n      remove$6(original);\n      return nu;\n    };\n\n    const validSectionList = [\n      'tfoot',\n      'thead',\n      'tbody',\n      'colgroup'\n    ];\n    const isValidSection = parentName => contains$2(validSectionList, parentName);\n    const grid = (rows, columns) => ({\n      rows,\n      columns\n    });\n    const address = (row, column) => ({\n      row,\n      column\n    });\n    const detail = (element, rowspan, colspan) => ({\n      element,\n      rowspan,\n      colspan\n    });\n    const detailnew = (element, rowspan, colspan, isNew) => ({\n      element,\n      rowspan,\n      colspan,\n      isNew\n    });\n    const extended = (element, rowspan, colspan, row, column, isLocked) => ({\n      element,\n      rowspan,\n      colspan,\n      row,\n      column,\n      isLocked\n    });\n    const rowdetail = (element, cells, section) => ({\n      element,\n      cells,\n      section\n    });\n    const rowdetailnew = (element, cells, section, isNew) => ({\n      element,\n      cells,\n      section,\n      isNew\n    });\n    const elementnew = (element, isNew, isLocked) => ({\n      element,\n      isNew,\n      isLocked\n    });\n    const rowcells = (element, cells, section, isNew) => ({\n      element,\n      cells,\n      section,\n      isNew\n    });\n    const bounds = (startRow, startCol, finishRow, finishCol) => ({\n      startRow,\n      startCol,\n      finishRow,\n      finishCol\n    });\n    const columnext = (element, colspan, column) => ({\n      element,\n      colspan,\n      column\n    });\n    const colgroup = (element, columns) => ({\n      element,\n      columns\n    });\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const isSupported$1 = constant(supported);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n    const getOriginalEventTarget = event => {\n      if (isSupported$1() && isNonNullable(event.target)) {\n        const el = SugarElement.fromDom(event.target);\n        if (isElement(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            const composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    const isOpenShadowHost = element => isNonNullable(element.dom.shadowRoot);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const body$1 = () => getBody$1(SugarElement.fromDom(document));\n    const getBody$1 = doc => {\n      const b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    const ancestors$4 = (scope, predicate, isRoot) => filter$2(parents(scope, isRoot), predicate);\n    const children$1 = (scope, predicate) => filter$2(children$2(scope), predicate);\n    const descendants$1 = (scope, predicate) => {\n      let result = [];\n      each$2(children$2(scope), x => {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants$1(x, predicate));\n      });\n      return result;\n    };\n\n    const ancestors$3 = (scope, selector, isRoot) => ancestors$4(scope, e => is$2(e, selector), isRoot);\n    const children = (scope, selector) => children$1(scope, e => is$2(e, selector));\n    const descendants = (scope, selector) => all$1(selector, scope);\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const ancestor$2 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$2 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$2, scope, predicate, isRoot);\n    };\n    const child$1 = (scope, predicate) => {\n      const pred = node => predicate(SugarElement.fromDom(node));\n      const result = find$1(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n    const descendant$1 = (scope, predicate) => {\n      const descend = node => {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          const child = SugarElement.fromDom(node.childNodes[i]);\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope.dom);\n    };\n\n    const ancestor$1 = (scope, selector, isRoot) => ancestor$2(scope, e => is$2(e, selector), isRoot);\n    const child = (scope, selector) => child$1(scope, e => is$2(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    const closest$1 = (scope, selector, isRoot) => {\n      const is = (element, selector) => is$2(element, selector);\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const bindFrom = (a, f) => a !== undefined && a !== null ? f(a) : Optional.none();\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const contains = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n    const endsWith = (str, suffix) => {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    const blank = r => s => s.replace(r, '');\n    const trim = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const toFloat = value => {\n      const num = parseFloat(value);\n      return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n\n    const isSupported = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const internalRemove = (dom, property) => {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    const set$1 = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n      const dom = element.dom;\n      each$1(css, (v, k) => {\n        internalSet(dom, k, v);\n      });\n    };\n    const get$a = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    const getRaw$2 = (element, property) => {\n      const dom = element.dom;\n      const raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(r => r.length > 0);\n    };\n    const remove$5 = (element, property) => {\n      const dom = element.dom;\n      internalRemove(dom, property);\n      if (is(getOpt(element, 'style').map(trim), '')) {\n        remove$7(element, 'style');\n      }\n    };\n    const copy$1 = (source, target) => {\n      const sourceDom = source.dom;\n      const targetDom = target.dom;\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    const getAttrValue = (cell, name, fallback = 0) => getOpt(cell, name).map(value => parseInt(value, 10)).getOr(fallback);\n    const getSpan = (cell, type) => getAttrValue(cell, type, 1);\n    const hasColspan = cellOrCol => {\n      if (isTag('col')(cellOrCol)) {\n        return getAttrValue(cellOrCol, 'span', 1) > 1;\n      } else {\n        return getSpan(cellOrCol, 'colspan') > 1;\n      }\n    };\n    const hasRowspan = cell => getSpan(cell, 'rowspan') > 1;\n    const getCssValue = (element, property) => parseInt(get$a(element, property), 10);\n    const minWidth = constant(10);\n    const minHeight = constant(10);\n\n    const firstLayer = (scope, selector) => {\n      return filterFirstLayer(scope, selector, always);\n    };\n    const filterFirstLayer = (scope, selector, predicate) => {\n      return bind$2(children$2(scope), x => {\n        if (is$2(x, selector)) {\n          return predicate(x) ? [x] : [];\n        } else {\n          return filterFirstLayer(x, selector, predicate);\n        }\n      });\n    };\n\n    const lookup = (tags, element, isRoot = never) => {\n      if (isRoot(element)) {\n        return Optional.none();\n      }\n      if (contains$2(tags, name(element))) {\n        return Optional.some(element);\n      }\n      const isRootOrUpperTable = elm => is$2(elm, 'table') || isRoot(elm);\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    const cell = (element, isRoot) => lookup([\n      'td',\n      'th'\n    ], element, isRoot);\n    const cells$1 = ancestor => firstLayer(ancestor, 'th,td');\n    const columns$1 = ancestor => {\n      if (is$2(ancestor, 'colgroup')) {\n        return children(ancestor, 'col');\n      } else {\n        return bind$2(columnGroups(ancestor), columnGroup => children(columnGroup, 'col'));\n      }\n    };\n    const table = (element, isRoot) => closest$1(element, 'table', isRoot);\n    const rows$1 = ancestor => firstLayer(ancestor, 'tr');\n    const columnGroups = ancestor => table(ancestor).fold(constant([]), table => children(table, 'colgroup'));\n\n    const fromRowsOrColGroups = (elems, getSection) => map$1(elems, row => {\n      if (name(row) === 'colgroup') {\n        const cells = map$1(columns$1(row), column => {\n          const colspan = getAttrValue(column, 'span', 1);\n          return detail(column, 1, colspan);\n        });\n        return rowdetail(row, cells, 'colgroup');\n      } else {\n        const cells = map$1(cells$1(row), cell => {\n          const rowspan = getAttrValue(cell, 'rowspan', 1);\n          const colspan = getAttrValue(cell, 'colspan', 1);\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdetail(row, cells, getSection(row));\n      }\n    });\n    const getParentSection = group => parent(group).map(parent => {\n      const parentName = name(parent);\n      return isValidSection(parentName) ? parentName : 'tbody';\n    }).getOr('tbody');\n    const fromTable$1 = table => {\n      const rows = rows$1(table);\n      const columnGroups$1 = columnGroups(table);\n      const elems = [\n        ...columnGroups$1,\n        ...rows\n      ];\n      return fromRowsOrColGroups(elems, getParentSection);\n    };\n    const fromPastedRows = (elems, section) => fromRowsOrColGroups(elems, () => section);\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n      const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      const isiPhone = os.isiOS() && !isiPad;\n      const isMobile = os.isiOS() || os.isAndroid();\n      const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      const isPhone = isiPhone || isMobile && !isTablet;\n      const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      const isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview),\n        isDesktop: constant(isDesktop)\n      };\n    };\n\n    const firstMatch = (regexes, s) => {\n      for (let i = 0; i < regexes.length; i++) {\n        const x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    const find = (regexes, agent) => {\n      const r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      const group = i => {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$2(group(1), group(2));\n    };\n    const detect$5 = (versionRegexes, agent) => {\n      const cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$2();\n      }\n      return find(versionRegexes, cleanedAgent);\n    };\n    const unknown$2 = () => {\n      return nu$2(0, 0);\n    };\n    const nu$2 = (major, minor) => {\n      return {\n        major,\n        minor\n      };\n    };\n    const Version = {\n      nu: nu$2,\n      detect: detect$5,\n      unknown: unknown$2\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n      return findMap(userAgentData.brands, uaBrand => {\n        const lcBrand = uaBrand.brand.toLowerCase();\n        return find$1(browsers, browser => {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(info => ({\n          current: info.name,\n          version: Version.nu(parseInt(uaBrand.version, 10), 0)\n        }));\n      });\n    };\n\n    const detect$4 = (candidates, userAgent) => {\n      const agent = String(userAgent).toLowerCase();\n      return find$1(candidates, candidate => {\n        return candidate.search(agent);\n      });\n    };\n    const detectBrowser = (browsers, userAgent) => {\n      return detect$4(browsers, userAgent).map(browser => {\n        const version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version\n        };\n      });\n    };\n    const detectOs = (oses, userAgent) => {\n      return detect$4(oses, userAgent).map(os => {\n        const version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version\n        };\n      });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = target => {\n      return uastring => {\n        return contains(uastring, target);\n      };\n    };\n    const browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: uastring => {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chromium',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: uastring => {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: uastring => {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: uastring => {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    const oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: uastring => {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'macOS',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    const PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$1 = () => {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$1 = info => {\n      const current = info.current;\n      const version = info.version;\n      const isBrowser = name => () => current === name;\n      return {\n        current,\n        version,\n        isEdge: isBrowser(edge),\n        isChromium: isBrowser(chromium),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    const Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chromium: constant(chromium),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    const unknown = () => {\n      return nu({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu = info => {\n      const current = info.current;\n      const version = info.version;\n      const isOS = name => () => current === name;\n      return {\n        current,\n        version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isMacOS: isOS(macos),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    const OperatingSystem = {\n      unknown,\n      nu,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      macos: constant(macos),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd),\n      chromeos: constant(chromeos)\n    };\n\n    const detect$3 = (userAgent, userAgentDataOpt, mediaMatch) => {\n      const browsers = PlatformInfo.browsers();\n      const oses = PlatformInfo.oses();\n      const browser = userAgentDataOpt.bind(userAgentData => detectBrowser$1(browsers, userAgentData)).orThunk(() => detectBrowser(browsers, userAgent)).fold(Browser.unknown, Browser.nu);\n      const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser,\n        os,\n        deviceType\n      };\n    };\n    const PlatformDetection = { detect: detect$3 };\n\n    const mediaMatch = query => window.matchMedia(query).matches;\n    let platform = cached(() => PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch));\n    const detect$2 = () => platform();\n\n    const Dimension = (name, getOffset) => {\n      const set = (element, h) => {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        const dom = element.dom;\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      const get = element => {\n        const r = getOffset(element);\n        if (r <= 0 || r === null) {\n          const css = get$a(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      const getOuter = get;\n      const aggregate = (element, properties) => foldl(properties, (acc, property) => {\n        const val = get$a(element, property);\n        const value = val === undefined ? 0 : parseInt(val, 10);\n        return isNaN(value) ? acc : acc + value;\n      }, 0);\n      const max = (element, value, properties) => {\n        const cumulativeInclusions = aggregate(element, properties);\n        const absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set,\n        get,\n        getOuter,\n        aggregate,\n        max\n      };\n    };\n\n    const toNumber = (px, fallback) => toFloat(px).getOr(fallback);\n    const getProp = (element, name, fallback) => toNumber(get$a(element, name), fallback);\n    const calcContentBoxSize = (element, size, upper, lower) => {\n      const paddingUpper = getProp(element, `padding-${ upper }`, 0);\n      const paddingLower = getProp(element, `padding-${ lower }`, 0);\n      const borderUpper = getProp(element, `border-${ upper }-width`, 0);\n      const borderLower = getProp(element, `border-${ lower }-width`, 0);\n      return size - paddingUpper - paddingLower - borderUpper - borderLower;\n    };\n    const getCalculatedWidth = (element, boxSizing) => {\n      const dom = element.dom;\n      const width = dom.getBoundingClientRect().width || dom.offsetWidth;\n      return boxSizing === 'border-box' ? width : calcContentBoxSize(element, width, 'left', 'right');\n    };\n    const getHeight$1 = element => getProp(element, 'height', element.dom.offsetHeight);\n    const getWidth = element => getProp(element, 'width', element.dom.offsetWidth);\n    const getInnerWidth = element => getCalculatedWidth(element, 'content-box');\n\n    const api$2 = Dimension('width', element => element.dom.offsetWidth);\n    const get$9 = element => api$2.get(element);\n    const getOuter$2 = element => api$2.getOuter(element);\n    const getInner = getInnerWidth;\n    const getRuntime$1 = getWidth;\n\n    const addCells = (gridRow, index, cells) => {\n      const existingCells = gridRow.cells;\n      const before = existingCells.slice(0, index);\n      const after = existingCells.slice(index);\n      const newCells = before.concat(cells).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    const addCell = (gridRow, index, cell) => addCells(gridRow, index, [cell]);\n    const mutateCell = (gridRow, index, cell) => {\n      const cells = gridRow.cells;\n      cells[index] = cell;\n    };\n    const setCells = (gridRow, cells) => rowcells(gridRow.element, cells, gridRow.section, gridRow.isNew);\n    const mapCells = (gridRow, f) => {\n      const cells = gridRow.cells;\n      const r = map$1(cells, f);\n      return rowcells(gridRow.element, r, gridRow.section, gridRow.isNew);\n    };\n    const getCell = (gridRow, index) => gridRow.cells[index];\n    const getCellElement = (gridRow, index) => getCell(gridRow, index).element;\n    const cellLength = gridRow => gridRow.cells.length;\n    const extractGridDetails = grid => {\n      const result = partition(grid, row => row.section === 'colgroup');\n      return {\n        rows: result.fail,\n        cols: result.pass\n      };\n    };\n    const clone = (gridRow, cloneRow, cloneCell) => {\n      const newCells = map$1(gridRow.cells, cloneCell);\n      return rowcells(cloneRow(gridRow.element), newCells, gridRow.section, true);\n    };\n\n    const LOCKED_COL_ATTR = 'data-snooker-locked-cols';\n    const getLockedColumnsFromTable = table => getOpt(table, LOCKED_COL_ATTR).bind(lockedColStr => Optional.from(lockedColStr.match(/\\d+/g))).map(lockedCols => mapToObject(lockedCols, always));\n    const getLockedColumnsFromGrid = grid => {\n      const locked = foldl(extractGridDetails(grid).rows, (acc, row) => {\n        each$2(row.cells, (cell, idx) => {\n          if (cell.isLocked) {\n            acc[idx] = true;\n          }\n        });\n        return acc;\n      }, {});\n      const lockedArr = mapToArray(locked, (_val, key) => parseInt(key, 10));\n      return sort$1(lockedArr);\n    };\n\n    const key = (row, column) => {\n      return row + ',' + column;\n    };\n    const getAt = (warehouse, row, column) => Optional.from(warehouse.access[key(row, column)]);\n    const findItem = (warehouse, item, comparator) => {\n      const filtered = filterItems(warehouse, detail => {\n        return comparator(item, detail.element);\n      });\n      return filtered.length > 0 ? Optional.some(filtered[0]) : Optional.none();\n    };\n    const filterItems = (warehouse, predicate) => {\n      const all = bind$2(warehouse.all, r => {\n        return r.cells;\n      });\n      return filter$2(all, predicate);\n    };\n    const generateColumns = rowData => {\n      const columnsGroup = {};\n      let index = 0;\n      each$2(rowData.cells, column => {\n        const colspan = column.colspan;\n        range$1(colspan, columnIndex => {\n          const colIndex = index + columnIndex;\n          columnsGroup[colIndex] = columnext(column.element, colspan, colIndex);\n        });\n        index += colspan;\n      });\n      return columnsGroup;\n    };\n    const generate$1 = list => {\n      const access = {};\n      const cells = [];\n      const tableOpt = head(list).map(rowData => rowData.element).bind(table);\n      const lockedColumns = tableOpt.bind(getLockedColumnsFromTable).getOr({});\n      let maxRows = 0;\n      let maxColumns = 0;\n      let rowCount = 0;\n      const {\n        pass: colgroupRows,\n        fail: rows\n      } = partition(list, rowData => rowData.section === 'colgroup');\n      each$2(rows, rowData => {\n        const currentRow = [];\n        each$2(rowData.cells, rowCell => {\n          let start = 0;\n          while (access[key(rowCount, start)] !== undefined) {\n            start++;\n          }\n          const isLocked = hasNonNullableKey(lockedColumns, start.toString());\n          const current = extended(rowCell.element, rowCell.rowspan, rowCell.colspan, rowCount, start, isLocked);\n          for (let occupiedColumnPosition = 0; occupiedColumnPosition < rowCell.colspan; occupiedColumnPosition++) {\n            for (let occupiedRowPosition = 0; occupiedRowPosition < rowCell.rowspan; occupiedRowPosition++) {\n              const rowPosition = rowCount + occupiedRowPosition;\n              const columnPosition = start + occupiedColumnPosition;\n              const newpos = key(rowPosition, columnPosition);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, columnPosition + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        maxRows++;\n        cells.push(rowdetail(rowData.element, currentRow, rowData.section));\n        rowCount++;\n      });\n      const {columns, colgroups} = last$2(colgroupRows).map(rowData => {\n        const columns = generateColumns(rowData);\n        const colgroup$1 = colgroup(rowData.element, values(columns));\n        return {\n          colgroups: [colgroup$1],\n          columns\n        };\n      }).getOrThunk(() => ({\n        colgroups: [],\n        columns: {}\n      }));\n      const grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: grid$1,\n        access,\n        all: cells,\n        columns,\n        colgroups\n      };\n    };\n    const fromTable = table => {\n      const list = fromTable$1(table);\n      return generate$1(list);\n    };\n    const justCells = warehouse => bind$2(warehouse.all, w => w.cells);\n    const justColumns = warehouse => values(warehouse.columns);\n    const hasColumns = warehouse => keys(warehouse.columns).length > 0;\n    const getColumnAt = (warehouse, columnIndex) => Optional.from(warehouse.columns[columnIndex]);\n    const Warehouse = {\n      fromTable,\n      generate: generate$1,\n      getAt,\n      findItem,\n      filterItems,\n      justCells,\n      justColumns,\n      hasColumns,\n      getColumnAt\n    };\n\n    const columns = (warehouse, isValidCell = always) => {\n      const grid = warehouse.grid;\n      const cols = range$1(grid.columns, identity);\n      const rowsArr = range$1(grid.rows, identity);\n      return map$1(cols, col => {\n        const getBlock = () => bind$2(rowsArr, r => Warehouse.getAt(warehouse, r, col).filter(detail => detail.column === col).toArray());\n        const isValid = detail => detail.colspan === 1 && isValidCell(detail.element);\n        const getFallback = () => Warehouse.getAt(warehouse, 0, col);\n        return decide(getBlock, isValid, getFallback);\n      });\n    };\n    const decide = (getBlock, isValid, getFallback) => {\n      const inBlock = getBlock();\n      const validInBlock = find$1(inBlock, isValid);\n      const detailOption = validInBlock.orThunk(() => Optional.from(inBlock[0]).orThunk(getFallback));\n      return detailOption.map(detail => detail.element);\n    };\n    const rows = warehouse => {\n      const grid = warehouse.grid;\n      const rowsArr = range$1(grid.rows, identity);\n      const cols = range$1(grid.columns, identity);\n      return map$1(rowsArr, row => {\n        const getBlock = () => bind$2(cols, c => Warehouse.getAt(warehouse, row, c).filter(detail => detail.row === row).fold(constant([]), detail => [detail]));\n        const isSingle = detail => detail.rowspan === 1;\n        const getFallback = () => Warehouse.getAt(warehouse, row, 0);\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n\n    const deduce = (xs, index) => {\n      if (index < 0 || index >= xs.length - 1) {\n        return Optional.none();\n      }\n      const current = xs[index].fold(() => {\n        const rest = reverse(xs.slice(0, index));\n        return findMap(rest, (a, i) => a.map(aa => ({\n          value: aa,\n          delta: i + 1\n        })));\n      }, c => Optional.some({\n        value: c,\n        delta: 0\n      }));\n      const next = xs[index + 1].fold(() => {\n        const rest = xs.slice(index + 1);\n        return findMap(rest, (a, i) => a.map(aa => ({\n          value: aa,\n          delta: i + 1\n        })));\n      }, n => Optional.some({\n        value: n,\n        delta: 1\n      }));\n      return current.bind(c => next.map(n => {\n        const extras = n.delta + c.delta;\n        return Math.abs(n.value - c.value) / extras;\n      }));\n    };\n\n    const onDirection = (isLtr, isRtl) => element => getDirection(element) === 'rtl' ? isRtl : isLtr;\n    const getDirection = element => get$a(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n\n    const api$1 = Dimension('height', element => {\n      const dom = element.dom;\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    const get$8 = element => api$1.get(element);\n    const getOuter$1 = element => api$1.getOuter(element);\n    const getRuntime = getHeight$1;\n\n    const r = (left, top) => {\n      const translate = (x, y) => r(left + x, top + y);\n      return {\n        left,\n        top,\n        translate\n      };\n    };\n    const SugarPosition = r;\n\n    const boxPosition = dom => {\n      const box = dom.getBoundingClientRect();\n      return SugarPosition(box.left, box.top);\n    };\n    const firstDefinedOrZero = (a, b) => {\n      if (a !== undefined) {\n        return a;\n      } else {\n        return b !== undefined ? b : 0;\n      }\n    };\n    const absolute = element => {\n      const doc = element.dom.ownerDocument;\n      const body = doc.body;\n      const win = doc.defaultView;\n      const html = doc.documentElement;\n      if (body === element.dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      const scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n      const scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n      const clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      const clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    const viewport = element => {\n      const dom = element.dom;\n      const doc = dom.ownerDocument;\n      const body = doc.body;\n      if (body === dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return SugarPosition(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    const rowInfo = (row, y) => ({\n      row,\n      y\n    });\n    const colInfo = (col, x) => ({\n      col,\n      x\n    });\n    const rtlEdge = cell => {\n      const pos = absolute(cell);\n      return pos.left + getOuter$2(cell);\n    };\n    const ltrEdge = cell => {\n      return absolute(cell).left;\n    };\n    const getLeftEdge = (index, cell) => {\n      return colInfo(index, ltrEdge(cell));\n    };\n    const getRightEdge = (index, cell) => {\n      return colInfo(index, rtlEdge(cell));\n    };\n    const getTop$1 = cell => {\n      return absolute(cell).top;\n    };\n    const getTopEdge = (index, cell) => {\n      return rowInfo(index, getTop$1(cell));\n    };\n    const getBottomEdge = (index, cell) => {\n      return rowInfo(index, getTop$1(cell) + getOuter$1(cell));\n    };\n    const findPositions = (getInnerEdge, getOuterEdge, array) => {\n      if (array.length === 0) {\n        return [];\n      }\n      const lines = map$1(array.slice(1), (cellOption, index) => {\n        return cellOption.map(cell => {\n          return getInnerEdge(index, cell);\n        });\n      });\n      const lastLine = array[array.length - 1].map(cell => {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    const negate = step => {\n      return -step;\n    };\n    const height = {\n      delta: identity,\n      positions: optElements => findPositions(getTopEdge, getBottomEdge, optElements),\n      edge: getTop$1\n    };\n    const ltr$1 = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: optElements => findPositions(getLeftEdge, getRightEdge, optElements)\n    };\n    const rtl$1 = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: optElements => findPositions(getRightEdge, getLeftEdge, optElements)\n    };\n    const detect$1 = onDirection(ltr$1, rtl$1);\n    const width = {\n      delta: (amount, table) => detect$1(table).delta(amount, table),\n      positions: (cols, table) => detect$1(table).positions(cols, table),\n      edge: cell => detect$1(cell).edge(cell)\n    };\n\n    const units = {\n      unsupportedLength: [\n        'em',\n        'ex',\n        'cap',\n        'ch',\n        'ic',\n        'rem',\n        'lh',\n        'rlh',\n        'vw',\n        'vh',\n        'vi',\n        'vb',\n        'vmin',\n        'vmax',\n        'cm',\n        'mm',\n        'Q',\n        'in',\n        'pc',\n        'pt',\n        'px'\n      ],\n      fixed: [\n        'px',\n        'pt'\n      ],\n      relative: ['%'],\n      empty: ['']\n    };\n    const pattern = (() => {\n      const decimalDigits = '[0-9]+';\n      const signedInteger = '[+-]?' + decimalDigits;\n      const exponentPart = '[eE]' + signedInteger;\n      const dot = '\\\\.';\n      const opt = input => `(?:${ input })?`;\n      const unsignedDecimalLiteral = [\n        'Infinity',\n        decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n        dot + decimalDigits + opt(exponentPart),\n        decimalDigits + opt(exponentPart)\n      ].join('|');\n      const float = `[+-]?(?:${ unsignedDecimalLiteral })`;\n      return new RegExp(`^(${ float })(.*)$`);\n    })();\n    const isUnit = (unit, accepted) => exists(accepted, acc => exists(units[acc], check => unit === check));\n    const parse = (input, accepted) => {\n      const match = Optional.from(pattern.exec(input));\n      return match.bind(array => {\n        const value = Number(array[1]);\n        const unitRaw = array[2];\n        if (isUnit(unitRaw, accepted)) {\n          return Optional.some({\n            value,\n            unit: unitRaw\n          });\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n\n    const rPercentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    const rPixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    const isCol$2 = isTag('col');\n    const getPercentSize = (elm, outerGetter, innerGetter) => {\n      const relativeParent = parentElement(elm).getOrThunk(() => getBody$1(owner(elm)));\n      return outerGetter(elm) / innerGetter(relativeParent) * 100;\n    };\n    const setPixelWidth = (cell, amount) => {\n      set$1(cell, 'width', amount + 'px');\n    };\n    const setPercentageWidth = (cell, amount) => {\n      set$1(cell, 'width', amount + '%');\n    };\n    const setHeight = (cell, amount) => {\n      set$1(cell, 'height', amount + 'px');\n    };\n    const getHeightValue = cell => getRuntime(cell) + 'px';\n    const convert = (cell, number, getter, setter) => {\n      const newSize = table(cell).map(table => {\n        const total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    const normalizePixelSize = (value, cell, getter, setter) => {\n      const number = parseFloat(value);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    const getTotalHeight = cell => {\n      const value = getHeightValue(cell);\n      if (!value) {\n        return get$8(cell);\n      }\n      return normalizePixelSize(value, cell, get$8, setHeight);\n    };\n    const get$7 = (cell, type, f) => {\n      const v = f(cell);\n      const span = getSpan(cell, type);\n      return v / span;\n    };\n    const getRaw$1 = (element, prop) => {\n      return getRaw$2(element, prop).orThunk(() => {\n        return getOpt(element, prop).map(val => val + 'px');\n      });\n    };\n    const getRawWidth$1 = element => getRaw$1(element, 'width');\n    const getRawHeight = element => getRaw$1(element, 'height');\n    const getPercentageWidth = cell => getPercentSize(cell, get$9, getInner);\n    const getPixelWidth$1 = cell => isCol$2(cell) ? get$9(cell) : getRuntime$1(cell);\n    const getHeight = cell => {\n      return get$7(cell, 'rowspan', getTotalHeight);\n    };\n    const getGenericWidth = cell => {\n      const width = getRawWidth$1(cell);\n      return width.bind(w => parse(w, [\n        'fixed',\n        'relative',\n        'empty'\n      ]));\n    };\n    const setGenericWidth = (cell, amount, unit) => {\n      set$1(cell, 'width', amount + unit);\n    };\n    const getPixelTableWidth = table => get$9(table) + 'px';\n    const getPercentTableWidth = table => getPercentSize(table, get$9, getInner) + '%';\n    const isPercentSizing$1 = table => getRawWidth$1(table).exists(size => rPercentageBasedSizeRegex.test(size));\n    const isPixelSizing$1 = table => getRawWidth$1(table).exists(size => rPixelBasedSizeRegex.test(size));\n    const isNoneSizing$1 = table => getRawWidth$1(table).isNone();\n    const percentageBasedSizeRegex = constant(rPercentageBasedSizeRegex);\n\n    const isCol$1 = isTag('col');\n    const getRawW = cell => {\n      return getRawWidth$1(cell).getOrThunk(() => getPixelWidth$1(cell) + 'px');\n    };\n    const getRawH = cell => {\n      return getRawHeight(cell).getOrThunk(() => getHeight(cell) + 'px');\n    };\n    const justCols = warehouse => map$1(Warehouse.justColumns(warehouse), column => Optional.from(column.element));\n    const isValidColumn = cell => {\n      const browser = detect$2().browser;\n      const supportsColWidths = browser.isChromium() || browser.isFirefox();\n      return isCol$1(cell) ? supportsColWidths : true;\n    };\n    const getDimension = (cellOpt, index, backups, filter, getter, fallback) => cellOpt.filter(filter).fold(() => fallback(deduce(backups, index)), cell => getter(cell));\n    const getWidthFrom = (warehouse, table, getWidth, fallback) => {\n      const columnCells = columns(warehouse);\n      const columns$1 = Warehouse.hasColumns(warehouse) ? justCols(warehouse) : columnCells;\n      const backups = [Optional.some(width.edge(table))].concat(map$1(width.positions(columnCells, table), pos => pos.map(p => p.x)));\n      const colFilter = not(hasColspan);\n      return map$1(columns$1, (cellOption, c) => {\n        return getDimension(cellOption, c, backups, colFilter, column => {\n          if (isValidColumn(column)) {\n            return getWidth(column);\n          } else {\n            const cell = bindFrom(columnCells[c], identity);\n            return getDimension(cell, c, backups, colFilter, cell => fallback(Optional.some(get$9(cell))), fallback);\n          }\n        }, fallback);\n      });\n    };\n    const getDeduced = deduced => {\n      return deduced.map(d => {\n        return d + 'px';\n      }).getOr('');\n    };\n    const getRawWidths = (warehouse, table) => {\n      return getWidthFrom(warehouse, table, getRawW, getDeduced);\n    };\n    const getPercentageWidths = (warehouse, table, tableSize) => {\n      return getWidthFrom(warehouse, table, getPercentageWidth, deduced => {\n        return deduced.fold(() => {\n          return tableSize.minCellWidth();\n        }, cellWidth => {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      });\n    };\n    const getPixelWidths = (warehouse, table, tableSize) => {\n      return getWidthFrom(warehouse, table, getPixelWidth$1, deduced => {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      });\n    };\n    const getHeightFrom = (warehouse, table, direction, getHeight, fallback) => {\n      const rows$1 = rows(warehouse);\n      const backups = [Optional.some(direction.edge(table))].concat(map$1(direction.positions(rows$1, table), pos => pos.map(p => p.y)));\n      return map$1(rows$1, (cellOption, c) => {\n        return getDimension(cellOption, c, backups, not(hasRowspan), getHeight, fallback);\n      });\n    };\n    const getPixelHeights = (warehouse, table, direction) => {\n      return getHeightFrom(warehouse, table, direction, getHeight, deduced => {\n        return deduced.getOrThunk(minHeight);\n      });\n    };\n    const getRawHeights = (warehouse, table, direction) => {\n      return getHeightFrom(warehouse, table, direction, getRawH, getDeduced);\n    };\n\n    const widthLookup = (table, getter) => () => {\n      if (inBody(table)) {\n        return getter(table);\n      } else {\n        return parseFloat(getRaw$2(table, 'width').getOr('0'));\n      }\n    };\n    const noneSize = table => {\n      const getWidth = widthLookup(table, get$9);\n      const zero = constant(0);\n      const getWidths = (warehouse, tableSize) => getPixelWidths(warehouse, table, tableSize);\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta: zero,\n        singleColumnWidth: constant([0]),\n        minCellWidth: zero,\n        setElementWidth: noop,\n        adjustTableWidth: noop,\n        isRelative: true,\n        label: 'none'\n      };\n    };\n    const percentageSize = table => {\n      const getFloatWidth = widthLookup(table, elem => parseFloat(getPercentTableWidth(elem)));\n      const getWidth = widthLookup(table, get$9);\n      const getCellDelta = delta => delta / getWidth() * 100;\n      const singleColumnWidth = (w, _delta) => [100 - w];\n      const minCellWidth = () => minWidth() / getWidth() * 100;\n      const adjustTableWidth = delta => {\n        const currentWidth = getFloatWidth();\n        const change = delta / 100 * currentWidth;\n        const newWidth = currentWidth + change;\n        setPercentageWidth(table, newWidth);\n      };\n      const getWidths = (warehouse, tableSize) => getPercentageWidths(warehouse, table, tableSize);\n      return {\n        width: getFloatWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta,\n        singleColumnWidth,\n        minCellWidth,\n        setElementWidth: setPercentageWidth,\n        adjustTableWidth,\n        isRelative: true,\n        label: 'percent'\n      };\n    };\n    const pixelSize = table => {\n      const getWidth = widthLookup(table, get$9);\n      const getCellDelta = identity;\n      const singleColumnWidth = (w, delta) => {\n        const newNext = Math.max(minWidth(), w + delta);\n        return [newNext - w];\n      };\n      const adjustTableWidth = delta => {\n        const newWidth = getWidth() + delta;\n        setPixelWidth(table, newWidth);\n      };\n      const getWidths = (warehouse, tableSize) => getPixelWidths(warehouse, table, tableSize);\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta,\n        singleColumnWidth,\n        minCellWidth: minWidth,\n        setElementWidth: setPixelWidth,\n        adjustTableWidth,\n        isRelative: false,\n        label: 'pixel'\n      };\n    };\n    const chooseSize = (element, width) => {\n      const percentMatch = percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(element);\n      } else {\n        return pixelSize(element);\n      }\n    };\n    const getTableSize = table => {\n      const width = getRawWidth$1(table);\n      return width.fold(() => noneSize(table), w => chooseSize(table, w));\n    };\n    const TableSize = {\n      getTableSize,\n      pixelSize,\n      percentageSize,\n      noneSize\n    };\n\n    const statsStruct = (minRow, minCol, maxRow, maxCol, allCells, selectedCells) => ({\n      minRow,\n      minCol,\n      maxRow,\n      maxCol,\n      allCells,\n      selectedCells\n    });\n    const findSelectedStats = (house, isSelected) => {\n      const totalColumns = house.grid.columns;\n      const totalRows = house.grid.rows;\n      let minRow = totalRows;\n      let minCol = totalColumns;\n      let maxRow = 0;\n      let maxCol = 0;\n      const allCells = [];\n      const selectedCells = [];\n      each$1(house.access, detail => {\n        allCells.push(detail);\n        if (isSelected(detail)) {\n          selectedCells.push(detail);\n          const startRow = detail.row;\n          const endRow = startRow + detail.rowspan - 1;\n          const startCol = detail.column;\n          const endCol = startCol + detail.colspan - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol, allCells, selectedCells);\n    };\n    const makeCell = (list, seenSelected, rowIndex) => {\n      const row = list[rowIndex].element;\n      const td = SugarElement.fromTag('td');\n      append$1(td, SugarElement.fromTag('br'));\n      const f = seenSelected ? append$1 : prepend;\n      f(row, td);\n    };\n    const fillInGaps = (list, house, stats, isSelected) => {\n      const rows = filter$2(list, row => row.section !== 'colgroup');\n      const totalColumns = house.grid.columns;\n      const totalRows = house.grid.rows;\n      for (let i = 0; i < totalRows; i++) {\n        let seenSelected = false;\n        for (let j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow || i > stats.maxRow || j < stats.minCol || j > stats.maxCol)) {\n            const needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(rows, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    const clean = (replica, stats, house, widthDelta) => {\n      each$1(house.columns, col => {\n        if (col.column < stats.minCol || col.column > stats.maxCol) {\n          remove$6(col.element);\n        }\n      });\n      const emptyRows = filter$2(firstLayer(replica, 'tr'), row => row.dom.childElementCount === 0);\n      each$2(emptyRows, remove$6);\n      if (stats.minCol === stats.maxCol || stats.minRow === stats.maxRow) {\n        each$2(firstLayer(replica, 'th,td'), cell => {\n          remove$7(cell, 'rowspan');\n          remove$7(cell, 'colspan');\n        });\n      }\n      remove$7(replica, LOCKED_COL_ATTR);\n      remove$7(replica, 'data-snooker-col-series');\n      const tableSize = TableSize.getTableSize(replica);\n      tableSize.adjustTableWidth(widthDelta);\n    };\n    const getTableWidthDelta = (table, warehouse, tableSize, stats) => {\n      if (stats.minCol === 0 && warehouse.grid.columns === stats.maxCol + 1) {\n        return 0;\n      }\n      const colWidths = getPixelWidths(warehouse, table, tableSize);\n      const allColsWidth = foldl(colWidths, (acc, width) => acc + width, 0);\n      const selectedColsWidth = foldl(colWidths.slice(stats.minCol, stats.maxCol + 1), (acc, width) => acc + width, 0);\n      const newWidth = selectedColsWidth / allColsWidth * tableSize.pixelWidth();\n      const delta = newWidth - tableSize.pixelWidth();\n      return tableSize.getCellDelta(delta);\n    };\n    const extract$1 = (table, selectedSelector) => {\n      const isSelected = detail => is$2(detail.element, selectedSelector);\n      const replica = deep(table);\n      const list = fromTable$1(replica);\n      const tableSize = TableSize.getTableSize(table);\n      const replicaHouse = Warehouse.generate(list);\n      const replicaStats = findSelectedStats(replicaHouse, isSelected);\n      const selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      const unselectedCells = filterFirstLayer(replica, 'th,td', cell => is$2(cell, selector));\n      each$2(unselectedCells, remove$6);\n      fillInGaps(list, replicaHouse, replicaStats, isSelected);\n      const house = Warehouse.fromTable(table);\n      const widthDelta = getTableWidthDelta(table, house, tableSize, replicaStats);\n      clean(replica, replicaStats, replicaHouse, widthDelta);\n      return replica;\n    };\n\n    const nbsp = '\\xA0';\n\n    const NodeValue = (is, name) => {\n      const get = element => {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      const getOption = element => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      const set = (element, value) => {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get,\n        getOption,\n        set\n      };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get$6 = element => api.get(element);\n    const getOption = element => api.getOption(element);\n    const set = (element, value) => api.set(element, value);\n\n    const getEnd = element => name(element) === 'img' ? 1 : getOption(element).fold(() => children$2(element).length, v => v.length);\n    const isTextNodeWithCursorPosition = el => getOption(el).filter(text => text.trim().length !== 0 || text.indexOf(nbsp) > -1).isSome();\n    const elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    const isCursorPosition = elem => {\n      const hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains$2(elementsWithCursorPosition, name(elem));\n    };\n\n    const first = element => descendant$1(element, isCursorPosition);\n    const last$1 = element => descendantRtl(element, isCursorPosition);\n    const descendantRtl = (scope, predicate) => {\n      const descend = element => {\n        const children = children$2(element);\n        for (let i = children.length - 1; i >= 0; i--) {\n          const child = children[i];\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope);\n    };\n\n    const transferableAttributes = {\n      scope: [\n        'row',\n        'col'\n      ]\n    };\n    const createCell = doc => () => {\n      const td = SugarElement.fromTag('td', doc.dom);\n      append$1(td, SugarElement.fromTag('br', doc.dom));\n      return td;\n    };\n    const createCol = doc => () => {\n      return SugarElement.fromTag('col', doc.dom);\n    };\n    const createColgroup = doc => () => {\n      return SugarElement.fromTag('colgroup', doc.dom);\n    };\n    const createRow$1 = doc => () => {\n      return SugarElement.fromTag('tr', doc.dom);\n    };\n    const replace$1 = (cell, tag, attrs) => {\n      const replica = copy$2(cell, tag);\n      each$1(attrs, (v, k) => {\n        if (v === null) {\n          remove$7(replica, k);\n        } else {\n          set$2(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    const pasteReplace = cell => {\n      return cell;\n    };\n    const cloneFormats = (oldCell, newCell, formats) => {\n      const first$1 = first(oldCell);\n      return first$1.map(firstText => {\n        const formatSelector = formats.join(',');\n        const parents = ancestors$3(firstText, formatSelector, element => {\n          return eq$1(element, oldCell);\n        });\n        return foldr(parents, (last, parent) => {\n          const clonedFormat = shallow(parent);\n          remove$7(clonedFormat, 'contenteditable');\n          append$1(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    const cloneAppropriateAttributes = (original, clone) => {\n      each$1(transferableAttributes, (validAttributes, attributeName) => getOpt(original, attributeName).filter(attribute => contains$2(validAttributes, attribute)).each(attribute => set$2(clone, attributeName, attribute)));\n    };\n    const cellOperations = (mutate, doc, formatsToClone) => {\n      const cloneCss = (prev, clone) => {\n        copy$1(prev.element, clone);\n        remove$5(clone, 'height');\n        if (prev.colspan !== 1) {\n          remove$5(clone, 'width');\n        }\n      };\n      const newCell = prev => {\n        const td = SugarElement.fromTag(name(prev.element), doc.dom);\n        const formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        const lastNode = formats.length > 0 ? cloneFormats(prev.element, td, formats) : td;\n        append$1(lastNode, SugarElement.fromTag('br'));\n        cloneCss(prev, td);\n        cloneAppropriateAttributes(prev.element, td);\n        mutate(prev.element, td);\n        return td;\n      };\n      const newCol = prev => {\n        const col = SugarElement.fromTag(name(prev.element), doc.dom);\n        cloneCss(prev, col);\n        mutate(prev.element, col);\n        return col;\n      };\n      return {\n        col: newCol,\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: newCell,\n        replace: replace$1,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n    const paste$1 = doc => {\n      return {\n        col: createCol(doc),\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: createCell(doc),\n        replace: pasteReplace,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      return children$2(SugarElement.fromDom(div));\n    };\n    const fromDom = nodes => map$1(nodes, SugarElement.fromDom);\n\n    const getBody = editor => SugarElement.fromDom(editor.getBody());\n    const getIsRoot = editor => element => eq$1(element, getBody(editor));\n    const removeDataStyle = table => {\n      remove$7(table, 'data-mce-style');\n      const removeStyleAttribute = element => remove$7(element, 'data-mce-style');\n      each$2(cells$1(table), removeStyleAttribute);\n      each$2(columns$1(table), removeStyleAttribute);\n      each$2(rows$1(table), removeStyleAttribute);\n    };\n    const getSelectionStart = editor => SugarElement.fromDom(editor.selection.getStart());\n    const getPixelWidth = elm => elm.getBoundingClientRect().width;\n    const getPixelHeight = elm => elm.getBoundingClientRect().height;\n    const getRawWidth = (editor, elm) => {\n      const raw = editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      return Optional.from(raw).filter(isNotEmpty);\n    };\n    const isPercentage$1 = value => /^(\\d+(\\.\\d+)?)%$/.test(value);\n    const isPixel = value => /^(\\d+(\\.\\d+)?)px$/.test(value);\n\n    const inSelection = (bounds, detail) => {\n      const leftEdge = detail.column;\n      const rightEdge = detail.column + detail.colspan - 1;\n      const topEdge = detail.row;\n      const bottomEdge = detail.row + detail.rowspan - 1;\n      return leftEdge <= bounds.finishCol && rightEdge >= bounds.startCol && (topEdge <= bounds.finishRow && bottomEdge >= bounds.startRow);\n    };\n    const isWithin = (bounds, detail) => {\n      return detail.column >= bounds.startCol && detail.column + detail.colspan - 1 <= bounds.finishCol && detail.row >= bounds.startRow && detail.row + detail.rowspan - 1 <= bounds.finishRow;\n    };\n    const isRectangular = (warehouse, bounds) => {\n      let isRect = true;\n      const detailIsWithin = curry(isWithin, bounds);\n      for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Optional.some(bounds) : Optional.none();\n    };\n\n    const getBounds = (detailA, detailB) => {\n      return bounds(Math.min(detailA.row, detailB.row), Math.min(detailA.column, detailB.column), Math.max(detailA.row + detailA.rowspan - 1, detailB.row + detailB.rowspan - 1), Math.max(detailA.column + detailA.colspan - 1, detailB.column + detailB.colspan - 1));\n    };\n    const getAnyBox = (warehouse, startCell, finishCell) => {\n      const startCoords = Warehouse.findItem(warehouse, startCell, eq$1);\n      const finishCoords = Warehouse.findItem(warehouse, finishCell, eq$1);\n      return startCoords.bind(sc => {\n        return finishCoords.map(fc => {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    const getBox$1 = (warehouse, startCell, finishCell) => {\n      return getAnyBox(warehouse, startCell, finishCell).bind(bounds => {\n        return isRectangular(warehouse, bounds);\n      });\n    };\n\n    const moveBy$1 = (warehouse, cell, row, column) => {\n      return Warehouse.findItem(warehouse, cell, eq$1).bind(detail => {\n        const startRow = row > 0 ? detail.row + detail.rowspan - 1 : detail.row;\n        const startCol = column > 0 ? detail.column + detail.colspan - 1 : detail.column;\n        const dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(d => {\n          return d.element;\n        });\n      });\n    };\n    const intercepts$1 = (warehouse, start, finish) => {\n      return getAnyBox(warehouse, start, finish).map(bounds => {\n        const inside = Warehouse.filterItems(warehouse, curry(inSelection, bounds));\n        return map$1(inside, detail => {\n          return detail.element;\n        });\n      });\n    };\n    const parentCell = (warehouse, innerCell) => {\n      const isContainedBy = (c1, c2) => {\n        return contains$1(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(detail => {\n        return detail.element;\n      });\n    };\n\n    const moveBy = (cell, deltaRow, deltaColumn) => {\n      return table(cell).bind(table => {\n        const warehouse = getWarehouse(table);\n        return moveBy$1(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    const intercepts = (table, first, last) => {\n      const warehouse = getWarehouse(table);\n      return intercepts$1(warehouse, first, last);\n    };\n    const nestedIntercepts = (table, first, firstTable, last, lastTable) => {\n      const warehouse = getWarehouse(table);\n      const optStartCell = eq$1(table, firstTable) ? Optional.some(first) : parentCell(warehouse, first);\n      const optLastCell = eq$1(table, lastTable) ? Optional.some(last) : parentCell(warehouse, last);\n      return optStartCell.bind(startCell => optLastCell.bind(lastCell => intercepts$1(warehouse, startCell, lastCell)));\n    };\n    const getBox = (table, first, last) => {\n      const warehouse = getWarehouse(table);\n      return getBox$1(warehouse, first, last);\n    };\n    const getWarehouse = Warehouse.fromTable;\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    var DomUniverse = () => {\n      const clone = element => {\n        return SugarElement.fromDom(element.dom.cloneNode(false));\n      };\n      const document = element => documentOrOwner(element).dom;\n      const isBoundary = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains$2(TagBoundaries, name(element));\n      };\n      const isEmptyTag = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains$2([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      const isNonEditable = element => isElement(element) && get$b(element, 'contenteditable') === 'false';\n      const comparePosition = (element, other) => {\n        return element.dom.compareDocumentPosition(other.dom);\n      };\n      const copyAttributesTo = (source, destination) => {\n        const as = clone$2(source);\n        setAll$1(destination, as);\n      };\n      const isSpecial = element => {\n        const tag = name(element);\n        return contains$2([\n          'script',\n          'noscript',\n          'iframe',\n          'noframes',\n          'noembed',\n          'title',\n          'style',\n          'textarea',\n          'xmp'\n        ], tag);\n      };\n      const getLanguage = element => isElement(element) ? getOpt(element, 'lang') : Optional.none();\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor$2,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants,\n          predicate: descendants$1\n        }),\n        styles: constant({\n          get: get$a,\n          getRaw: getRaw$2,\n          set: set$1,\n          remove: remove$5\n        }),\n        attrs: constant({\n          get: get$b,\n          set: set$2,\n          remove: remove$7,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before$3,\n          after: after$5,\n          afterAll: after$4,\n          append: append$1,\n          appendAll: append,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$6\n        }),\n        create: constant({\n          nu: SugarElement.fromTag,\n          clone,\n          text: SugarElement.fromText\n        }),\n        query: constant({\n          comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children$2,\n          name: name,\n          parent: parent,\n          document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          isSpecial,\n          getLanguage,\n          getText: get$6,\n          setText: set,\n          isBoundary,\n          isEmptyTag,\n          isNonEditable\n        }),\n        eq: eq$1,\n        is: is$1\n      };\n    };\n\n    const all = (universe, look, elements, f) => {\n      const head = elements[0];\n      const tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    const oneAll = (universe, look, elements) => {\n      return elements.length > 0 ? all(universe, look, elements, unsafeOne) : Optional.none();\n    };\n    const unsafeOne = (universe, look, head, tail) => {\n      const start = look(universe, head);\n      return foldr(tail, (b, a) => {\n        const current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    const commonElement = (universe, start, end) => {\n      return start.bind(s => {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    const eq = (universe, item) => {\n      return curry(universe.eq, item);\n    };\n    const ancestors$2 = (universe, start, end, isRoot = never) => {\n      const ps1 = [start].concat(universe.up().all(start));\n      const ps2 = [end].concat(universe.up().all(end));\n      const prune = path => {\n        const index = findIndex(path, isRoot);\n        return index.fold(() => {\n          return path;\n        }, ind => {\n          return path.slice(0, ind + 1);\n        });\n      };\n      const pruned1 = prune(ps1);\n      const pruned2 = prune(ps2);\n      const shared = find$1(pruned1, x => {\n        return exists(pruned2, eq(universe, x));\n      });\n      return {\n        firstpath: pruned1,\n        secondpath: pruned2,\n        shared\n      };\n    };\n\n    const sharedOne$1 = oneAll;\n    const ancestors$1 = ancestors$2;\n\n    const universe$3 = DomUniverse();\n    const sharedOne = (look, elements) => {\n      return sharedOne$1(universe$3, (_universe, element) => {\n        return look(element);\n      }, elements);\n    };\n    const ancestors = (start, finish, isRoot) => {\n      return ancestors$1(universe$3, start, finish, isRoot);\n    };\n\n    const lookupTable = container => {\n      return ancestor$1(container, 'table');\n    };\n    const identify = (start, finish, isRoot) => {\n      const getIsRoot = rootTable => {\n        return element => {\n          return isRoot !== undefined && isRoot(element) || eq$1(element, rootTable);\n        };\n      };\n      if (eq$1(start, finish)) {\n        return Optional.some({\n          boxes: Optional.some([start]),\n          start,\n          finish\n        });\n      } else {\n        return lookupTable(start).bind(startTable => {\n          return lookupTable(finish).bind(finishTable => {\n            if (eq$1(startTable, finishTable)) {\n              return Optional.some({\n                boxes: intercepts(startTable, start, finish),\n                start,\n                finish\n              });\n            } else if (contains$1(startTable, finishTable)) {\n              const ancestorCells = ancestors$3(finish, 'td,th', getIsRoot(startTable));\n              const finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Optional.some({\n                boxes: nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start,\n                finish: finishCell\n              });\n            } else if (contains$1(finishTable, startTable)) {\n              const ancestorCells = ancestors$3(start, 'td,th', getIsRoot(finishTable));\n              const startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Optional.some({\n                boxes: nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start,\n                finish: startCell\n              });\n            } else {\n              return ancestors(start, finish).shared.bind(lca => {\n                return closest$1(lca, 'table', isRoot).bind(lcaTable => {\n                  const finishAncestorCells = ancestors$3(finish, 'td,th', getIsRoot(lcaTable));\n                  const finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  const startAncestorCells = ancestors$3(start, 'td,th', getIsRoot(lcaTable));\n                  const startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Optional.some({\n                    boxes: nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  });\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    const retrieve$1 = (container, selector) => {\n      const sels = descendants(container, selector);\n      return sels.length > 0 ? Optional.some(sels) : Optional.none();\n    };\n    const getLast = (boxes, lastSelectedSelector) => {\n      return find$1(boxes, box => {\n        return is$2(box, lastSelectedSelector);\n      });\n    };\n    const getEdges = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return descendant(container, firstSelectedSelector).bind(first => {\n        return descendant(container, lastSelectedSelector).bind(last => {\n          return sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(table => {\n            return {\n              first,\n              last,\n              table\n            };\n          });\n        });\n      });\n    };\n    const expandTo = (finish, firstSelectedSelector) => {\n      return ancestor$1(finish, 'table').bind(table => {\n        return descendant(table, firstSelectedSelector).bind(start => {\n          return identify(start, finish).bind(identified => {\n            return identified.boxes.map(boxes => {\n              return {\n                boxes,\n                start: identified.start,\n                finish: identified.finish\n              };\n            });\n          });\n        });\n      });\n    };\n    const shiftSelection = (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) => {\n      return getLast(boxes, lastSelectedSelector).bind(last => {\n        return moveBy(last, deltaRow, deltaColumn).bind(finish => {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n\n    const retrieve = (container, selector) => {\n      return retrieve$1(container, selector);\n    };\n    const retrieveBox = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(edges => {\n        const isRoot = ancestor => {\n          return eq$1(container, ancestor);\n        };\n        const sectionSelector = 'thead,tfoot,tbody,table';\n        const firstAncestor = ancestor$1(edges.first, sectionSelector, isRoot);\n        const lastAncestor = ancestor$1(edges.last, sectionSelector, isRoot);\n        return firstAncestor.bind(fA => {\n          return lastAncestor.bind(lA => {\n            return eq$1(fA, lA) ? getBox(edges.table, edges.first, edges.last) : Optional.none();\n          });\n        });\n      });\n    };\n\n    const selection = identity;\n    const unmergable = selectedCells => {\n      const hasSpan = (elem, type) => getOpt(elem, type).exists(span => parseInt(span, 10) > 1);\n      const hasRowOrColSpan = elem => hasSpan(elem, 'rowspan') || hasSpan(elem, 'colspan');\n      return selectedCells.length > 0 && forall(selectedCells, hasRowOrColSpan) ? Optional.some(selectedCells) : Optional.none();\n    };\n    const mergable = (table, selectedCells, ephemera) => {\n      if (selectedCells.length <= 1) {\n        return Optional.none();\n      } else {\n        return retrieveBox(table, ephemera.firstSelectedSelector, ephemera.lastSelectedSelector).map(bounds => ({\n          bounds,\n          cells: selectedCells\n        }));\n      }\n    };\n\n    const strSelected = 'data-mce-selected';\n    const strSelectedSelector = 'td[' + strSelected + '],th[' + strSelected + ']';\n    const strAttributeSelector = '[' + strSelected + ']';\n    const strFirstSelected = 'data-mce-first-selected';\n    const strFirstSelectedSelector = 'td[' + strFirstSelected + '],th[' + strFirstSelected + ']';\n    const strLastSelected = 'data-mce-last-selected';\n    const strLastSelectedSelector = 'td[' + strLastSelected + '],th[' + strLastSelected + ']';\n    const attributeSelector = strAttributeSelector;\n    const ephemera = {\n      selected: strSelected,\n      selectedSelector: strSelectedSelector,\n      firstSelected: strFirstSelected,\n      firstSelectedSelector: strFirstSelectedSelector,\n      lastSelected: strLastSelected,\n      lastSelectedSelector: strLastSelectedSelector\n    };\n\n    const forMenu = (selectedCells, table, cell) => ({\n      element: cell,\n      mergable: mergable(table, selectedCells, ephemera),\n      unmergable: unmergable(selectedCells),\n      selection: selection(selectedCells)\n    });\n    const paste = (element, clipboard, generators) => ({\n      element,\n      clipboard,\n      generators\n    });\n    const pasteRows = (selectedCells, _cell, clipboard, generators) => ({\n      selection: selection(selectedCells),\n      clipboard,\n      generators\n    });\n\n    const getSelectionCellFallback = element => table(element).bind(table => retrieve(table, ephemera.firstSelectedSelector)).fold(constant(element), cells => cells[0]);\n    const getSelectionFromSelector = selector => (initCell, isRoot) => {\n      const cellName = name(initCell);\n      const cell = cellName === 'col' || cellName === 'colgroup' ? getSelectionCellFallback(initCell) : initCell;\n      return closest$1(cell, selector, isRoot);\n    };\n    const getSelectionCellOrCaption = getSelectionFromSelector('th,td,caption');\n    const getSelectionCell = getSelectionFromSelector('th,td');\n    const getCellsFromSelection = editor => fromDom(editor.model.table.getSelectedCells());\n    const getCellsFromFakeSelection = editor => filter$2(getCellsFromSelection(editor), cell => is$2(cell, ephemera.selectedSelector));\n\n    const extractSelected = cells => {\n      return table(cells[0]).map(table => {\n        const replica = extract$1(table, attributeSelector);\n        removeDataStyle(replica);\n        return [replica];\n      });\n    };\n    const serializeElements = (editor, elements) => map$1(elements, elm => editor.selection.serializer.serialize(elm.dom, {})).join('');\n    const getTextContent = elements => map$1(elements, element => element.dom.innerText).join('');\n    const registerEvents = (editor, actions) => {\n      editor.on('BeforeGetContent', e => {\n        const multiCellContext = cells => {\n          e.preventDefault();\n          extractSelected(cells).each(elements => {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          const cells = getCellsFromFakeSelection(editor);\n          if (cells.length >= 1) {\n            multiCellContext(cells);\n          }\n        }\n      });\n      editor.on('BeforeSetContent', e => {\n        if (e.selection === true && e.paste === true) {\n          const selectedCells = getCellsFromSelection(editor);\n          head(selectedCells).each(cell => {\n            table(cell).each(table => {\n              const elements = filter$2(fromHtml(e.content), content => {\n                return name(content) !== 'meta';\n              });\n              const isTable = isTag('table');\n              if (elements.length === 1 && isTable(elements[0])) {\n                e.preventDefault();\n                const doc = SugarElement.fromDom(editor.getDoc());\n                const generators = paste$1(doc);\n                const targets = paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(() => {\n                  editor.focus();\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n\n    const point = (element, offset) => ({\n      element,\n      offset\n    });\n\n    const scan$1 = (universe, element, direction) => {\n      if (universe.property().isText(element) && universe.property().getText(element).trim().length === 0 || universe.property().isComment(element)) {\n        return direction(element).bind(elem => {\n          return scan$1(universe, elem, direction).orThunk(() => {\n            return Optional.some(elem);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const toEnd = (universe, element) => {\n      if (universe.property().isText(element)) {\n        return universe.property().getText(element).length;\n      }\n      const children = universe.property().children(element);\n      return children.length;\n    };\n    const freefallRtl$2 = (universe, element) => {\n      const candidate = scan$1(universe, element, universe.query().prevSibling).getOr(element);\n      if (universe.property().isText(candidate)) {\n        return point(candidate, toEnd(universe, candidate));\n      }\n      const children = universe.property().children(candidate);\n      return children.length > 0 ? freefallRtl$2(universe, children[children.length - 1]) : point(candidate, toEnd(universe, candidate));\n    };\n\n    const freefallRtl$1 = freefallRtl$2;\n\n    const universe$2 = DomUniverse();\n    const freefallRtl = element => {\n      return freefallRtl$1(universe$2, element);\n    };\n\n    const halve = (main, other) => {\n      if (!hasColspan(main)) {\n        const width = getGenericWidth(main);\n        width.each(w => {\n          const newWidth = w.value / 2;\n          setGenericWidth(main, newWidth, w.unit);\n          setGenericWidth(other, newWidth, w.unit);\n        });\n      }\n    };\n\n    const zero = array => map$1(array, constant(0));\n    const surround = (sizes, startIndex, endIndex, results, f) => f(sizes.slice(0, startIndex)).concat(results).concat(f(sizes.slice(endIndex)));\n    const clampDeltaHelper = predicate => (sizes, index, delta, minCellSize) => {\n      if (!predicate(delta)) {\n        return delta;\n      } else {\n        const newSize = Math.max(minCellSize, sizes[index] - Math.abs(delta));\n        const diff = Math.abs(newSize - sizes[index]);\n        return delta >= 0 ? diff : -diff;\n      }\n    };\n    const clampNegativeDelta = clampDeltaHelper(delta => delta < 0);\n    const clampDelta = clampDeltaHelper(always);\n    const resizeTable = () => {\n      const calcFixedDeltas = (sizes, index, next, delta, minCellSize) => {\n        const clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          0\n        ], zero);\n      };\n      const calcRelativeDeltas = (sizes, index, delta, minCellSize) => {\n        const ratio = (100 + delta) / 100;\n        const newThis = Math.max(minCellSize, (sizes[index] + delta) / ratio);\n        return map$1(sizes, (size, idx) => {\n          const newSize = idx === index ? newThis : size / ratio;\n          return newSize - size;\n        });\n      };\n      const calcLeftEdgeDeltas = (sizes, index, next, delta, minCellSize, isRelative) => {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          return calcFixedDeltas(sizes, index, next, delta, minCellSize);\n        }\n      };\n      const calcMiddleDeltas = (sizes, _prev, index, next, delta, minCellSize, isRelative) => calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize, isRelative);\n      const resizeTable = (resizer, delta) => resizer(delta);\n      const calcRightEdgeDeltas = (sizes, _prev, index, delta, minCellSize, isRelative) => {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          const clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n          return zero(sizes.slice(0, index)).concat([clampedDelta]);\n        }\n      };\n      const calcRedestributedWidths = (sizes, totalWidth, pixelDelta, isRelative) => {\n        if (isRelative) {\n          const tableWidth = totalWidth + pixelDelta;\n          const ratio = tableWidth / totalWidth;\n          const newSizes = map$1(sizes, size => size / ratio);\n          return {\n            delta: ratio * 100 - 100,\n            newSizes\n          };\n        } else {\n          return {\n            delta: pixelDelta,\n            newSizes: sizes\n          };\n        }\n      };\n      return {\n        resizeTable,\n        clampTableDelta: clampNegativeDelta,\n        calcLeftEdgeDeltas,\n        calcMiddleDeltas,\n        calcRightEdgeDeltas,\n        calcRedestributedWidths\n      };\n    };\n    const preserveTable = () => {\n      const calcLeftEdgeDeltas = (sizes, index, next, delta, minCellSize) => {\n        const idx = delta >= 0 ? next : index;\n        const clampedDelta = clampDelta(sizes, idx, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          -clampedDelta\n        ], zero);\n      };\n      const calcMiddleDeltas = (sizes, _prev, index, next, delta, minCellSize) => calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize);\n      const resizeTable = (resizer, delta, isLastColumn) => {\n        if (isLastColumn) {\n          resizer(delta);\n        }\n      };\n      const calcRightEdgeDeltas = (sizes, _prev, _index, delta, _minCellSize, isRelative) => {\n        if (isRelative) {\n          return zero(sizes);\n        } else {\n          const diff = delta / sizes.length;\n          return map$1(sizes, constant(diff));\n        }\n      };\n      const clampTableDelta = (sizes, index, delta, minCellSize, isLastColumn) => {\n        if (isLastColumn) {\n          if (delta >= 0) {\n            return delta;\n          } else {\n            const maxDelta = foldl(sizes, (a, b) => a + b - minCellSize, 0);\n            return Math.max(-maxDelta, delta);\n          }\n        } else {\n          return clampNegativeDelta(sizes, index, delta, minCellSize);\n        }\n      };\n      const calcRedestributedWidths = (sizes, _totalWidth, _pixelDelta, _isRelative) => ({\n        delta: 0,\n        newSizes: sizes\n      });\n      return {\n        resizeTable,\n        clampTableDelta,\n        calcLeftEdgeDeltas,\n        calcMiddleDeltas,\n        calcRightEdgeDeltas,\n        calcRedestributedWidths\n      };\n    };\n\n    const getGridSize = table => {\n      const warehouse = Warehouse.fromTable(table);\n      return warehouse.grid;\n    };\n\n    const isHeaderCell = isTag('th');\n    const isHeaderCells = cells => forall(cells, cell => isHeaderCell(cell.element));\n    const getRowHeaderType = (isHeaderRow, isHeaderCells) => {\n      if (isHeaderRow && isHeaderCells) {\n        return 'sectionCells';\n      } else if (isHeaderRow) {\n        return 'section';\n      } else {\n        return 'cells';\n      }\n    };\n    const getRowType = row => {\n      const isHeaderRow = row.section === 'thead';\n      const isHeaderCells = is(findCommonCellType(row.cells), 'th');\n      if (row.section === 'tfoot') {\n        return { type: 'footer' };\n      } else if (isHeaderRow || isHeaderCells) {\n        return {\n          type: 'header',\n          subType: getRowHeaderType(isHeaderRow, isHeaderCells)\n        };\n      } else {\n        return { type: 'body' };\n      }\n    };\n    const findCommonCellType = cells => {\n      const headerCells = filter$2(cells, cell => isHeaderCell(cell.element));\n      if (headerCells.length === 0) {\n        return Optional.some('td');\n      } else if (headerCells.length === cells.length) {\n        return Optional.some('th');\n      } else {\n        return Optional.none();\n      }\n    };\n    const findCommonRowType = rows => {\n      const rowTypes = map$1(rows, row => getRowType(row).type);\n      const hasHeader = contains$2(rowTypes, 'header');\n      const hasFooter = contains$2(rowTypes, 'footer');\n      if (!hasHeader && !hasFooter) {\n        return Optional.some('body');\n      } else {\n        const hasBody = contains$2(rowTypes, 'body');\n        if (hasHeader && !hasBody && !hasFooter) {\n          return Optional.some('header');\n        } else if (!hasHeader && !hasBody && hasFooter) {\n          return Optional.some('footer');\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n    const findTableRowHeaderType = warehouse => findMap(warehouse.all, row => {\n      const rowType = getRowType(row);\n      return rowType.type === 'header' ? Optional.from(rowType.subType) : Optional.none();\n    });\n\n    const transformCell = (cell, comparator, substitution) => elementnew(substitution(cell.element, comparator), true, cell.isLocked);\n    const transformRow = (row, section) => row.section !== section ? rowcells(row.element, row.cells, section, row.isNew) : row;\n    const section = () => ({\n      transformRow,\n      transformCell: (cell, comparator, substitution) => {\n        const newCell = substitution(cell.element, comparator);\n        const fixedCell = name(newCell) !== 'td' ? mutate$1(newCell, 'td') : newCell;\n        return elementnew(fixedCell, cell.isNew, cell.isLocked);\n      }\n    });\n    const sectionCells = () => ({\n      transformRow,\n      transformCell\n    });\n    const cells = () => ({\n      transformRow: (row, section) => {\n        const newSection = section === 'thead' ? 'tbody' : section;\n        return transformRow(row, newSection);\n      },\n      transformCell\n    });\n    const fallback = () => ({\n      transformRow: identity,\n      transformCell\n    });\n    const getTableSectionType = (table, fallback) => {\n      const warehouse = Warehouse.fromTable(table);\n      const type = findTableRowHeaderType(warehouse).getOr(fallback);\n      switch (type) {\n      case 'section':\n        return section();\n      case 'sectionCells':\n        return sectionCells();\n      case 'cells':\n        return cells();\n      }\n    };\n    const TableSection = {\n      getTableSectionType,\n      section,\n      sectionCells,\n      cells,\n      fallback\n    };\n\n    const closest = target => closest$1(target, '[contenteditable]');\n    const isEditable$1 = (element, assumeEditable = false) => {\n      if (inBody(element)) {\n        return element.dom.isContentEditable;\n      } else {\n        return closest(element).fold(constant(assumeEditable), editable => getRaw(editable) === 'true');\n      }\n    };\n    const getRaw = element => element.dom.contentEditable;\n\n    const setIfNot = (element, property, value, ignore) => {\n      if (value === ignore) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, value);\n      }\n    };\n    const insert$1 = (table, selector, element) => {\n      last$2(children(table, selector)).fold(() => prepend(table, element), child => after$5(child, element));\n    };\n    const generateSection = (table, sectionName) => {\n      const section = child(table, sectionName).getOrThunk(() => {\n        const newSection = SugarElement.fromTag(sectionName, owner(table).dom);\n        if (sectionName === 'thead') {\n          insert$1(table, 'caption,colgroup', newSection);\n        } else if (sectionName === 'colgroup') {\n          insert$1(table, 'caption', newSection);\n        } else {\n          append$1(table, newSection);\n        }\n        return newSection;\n      });\n      empty(section);\n      return section;\n    };\n    const render$1 = (table, grid) => {\n      const newRows = [];\n      const newCells = [];\n      const syncRows = gridSection => map$1(gridSection, row => {\n        if (row.isNew) {\n          newRows.push(row.element);\n        }\n        const tr = row.element;\n        empty(tr);\n        each$2(row.cells, cell => {\n          if (cell.isNew) {\n            newCells.push(cell.element);\n          }\n          setIfNot(cell.element, 'colspan', cell.colspan, 1);\n          setIfNot(cell.element, 'rowspan', cell.rowspan, 1);\n          append$1(tr, cell.element);\n        });\n        return tr;\n      });\n      const syncColGroup = gridSection => bind$2(gridSection, colGroup => map$1(colGroup.cells, col => {\n        setIfNot(col.element, 'span', col.colspan, 1);\n        return col.element;\n      }));\n      const renderSection = (gridSection, sectionName) => {\n        const section = generateSection(table, sectionName);\n        const sync = sectionName === 'colgroup' ? syncColGroup : syncRows;\n        const sectionElems = sync(gridSection);\n        append(section, sectionElems);\n      };\n      const removeSection = sectionName => {\n        child(table, sectionName).each(remove$6);\n      };\n      const renderOrRemoveSection = (gridSection, sectionName) => {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      const headSection = [];\n      const bodySection = [];\n      const footSection = [];\n      const columnGroupsSection = [];\n      each$2(grid, row => {\n        switch (row.section) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        case 'colgroup':\n          columnGroupsSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(columnGroupsSection, 'colgroup');\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows,\n        newCells\n      };\n    };\n    const copy = grid => map$1(grid, row => {\n      const tr = shallow(row.element);\n      each$2(row.cells, cell => {\n        const clonedCell = deep(cell.element);\n        setIfNot(clonedCell, 'colspan', cell.colspan, 1);\n        setIfNot(clonedCell, 'rowspan', cell.rowspan, 1);\n        append$1(tr, clonedCell);\n      });\n      return tr;\n    });\n\n    const getColumn = (grid, index) => {\n      return map$1(grid, row => {\n        return getCell(row, index);\n      });\n    };\n    const getRow = (grid, index) => {\n      return grid[index];\n    };\n    const findDiff = (xs, comp) => {\n      if (xs.length === 0) {\n        return 0;\n      }\n      const first = xs[0];\n      const index = findIndex(xs, x => {\n        return !comp(first.element, x.element);\n      });\n      return index.getOr(xs.length);\n    };\n    const subgrid = (grid, row, column, comparator) => {\n      const gridRow = getRow(grid, row);\n      const isColRow = gridRow.section === 'colgroup';\n      const colspan = findDiff(gridRow.cells.slice(column), comparator);\n      const rowspan = isColRow ? 1 : findDiff(getColumn(grid.slice(row), column), comparator);\n      return {\n        colspan,\n        rowspan\n      };\n    };\n\n    const toDetails = (grid, comparator) => {\n      const seen = map$1(grid, row => map$1(row.cells, never));\n      const updateSeen = (rowIndex, columnIndex, rowspan, colspan) => {\n        for (let row = rowIndex; row < rowIndex + rowspan; row++) {\n          for (let column = columnIndex; column < columnIndex + colspan; column++) {\n            seen[row][column] = true;\n          }\n        }\n      };\n      return map$1(grid, (row, rowIndex) => {\n        const details = bind$2(row.cells, (cell, columnIndex) => {\n          if (seen[rowIndex][columnIndex] === false) {\n            const result = subgrid(grid, rowIndex, columnIndex, comparator);\n            updateSeen(rowIndex, columnIndex, result.rowspan, result.colspan);\n            return [detailnew(cell.element, result.rowspan, result.colspan, cell.isNew)];\n          } else {\n            return [];\n          }\n        });\n        return rowdetailnew(row.element, details, row.section, row.isNew);\n      });\n    };\n    const toGrid = (warehouse, generators, isNew) => {\n      const grid = [];\n      each$2(warehouse.colgroups, colgroup => {\n        const colgroupCols = [];\n        for (let columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          const element = Warehouse.getColumnAt(warehouse, columnIndex).map(column => elementnew(column.element, isNew, false)).getOrThunk(() => elementnew(generators.colGap(), true, false));\n          colgroupCols.push(element);\n        }\n        grid.push(rowcells(colgroup.element, colgroupCols, 'colgroup', isNew));\n      });\n      for (let rowIndex = 0; rowIndex < warehouse.grid.rows; rowIndex++) {\n        const rowCells = [];\n        for (let columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          const element = Warehouse.getAt(warehouse, rowIndex, columnIndex).map(item => elementnew(item.element, isNew, item.isLocked)).getOrThunk(() => elementnew(generators.gap(), true, false));\n          rowCells.push(element);\n        }\n        const rowDetail = warehouse.all[rowIndex];\n        const row = rowcells(rowDetail.element, rowCells, rowDetail.section, isNew);\n        grid.push(row);\n      }\n      return grid;\n    };\n\n    const fromWarehouse = (warehouse, generators) => toGrid(warehouse, generators, false);\n    const toDetailList = grid => toDetails(grid, eq$1);\n    const findInWarehouse = (warehouse, element) => findMap(warehouse.all, r => find$1(r.cells, e => eq$1(element, e.element)));\n    const extractCells = (warehouse, target, predicate) => {\n      const details = map$1(target.selection, cell$1 => {\n        return cell(cell$1).bind(lc => findInWarehouse(warehouse, lc)).filter(predicate);\n      });\n      const cells = cat(details);\n      return someIf(cells.length > 0, cells);\n    };\n    const run = (operation, extract, adjustment, postAction, genWrappers) => (table, target, generators, behaviours) => {\n      const warehouse = Warehouse.fromTable(table);\n      const tableSection = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.section).getOrThunk(TableSection.fallback);\n      const output = extract(warehouse, target).map(info => {\n        const model = fromWarehouse(warehouse, generators);\n        const result = operation(model, info, eq$1, genWrappers(generators), tableSection);\n        const lockedColumns = getLockedColumnsFromGrid(result.grid);\n        const grid = toDetailList(result.grid);\n        return {\n          info,\n          grid,\n          cursor: result.cursor,\n          lockedColumns\n        };\n      });\n      return output.bind(out => {\n        const newElements = render$1(table, out.grid);\n        const tableSizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.sizing).getOrThunk(() => TableSize.getTableSize(table));\n        const resizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.resize).getOrThunk(preserveTable);\n        adjustment(table, out.grid, out.info, {\n          sizing: tableSizing,\n          resize: resizing,\n          section: tableSection\n        });\n        postAction(table);\n        remove$7(table, LOCKED_COL_ATTR);\n        if (out.lockedColumns.length > 0) {\n          set$2(table, LOCKED_COL_ATTR, out.lockedColumns.join(','));\n        }\n        return Optional.some({\n          cursor: out.cursor,\n          newRows: newElements.newRows,\n          newCells: newElements.newCells\n        });\n      });\n    };\n    const onPaste = (warehouse, target) => cell(target.element).bind(cell => findInWarehouse(warehouse, cell).map(details => {\n      const value = {\n        ...details,\n        generators: target.generators,\n        clipboard: target.clipboard\n      };\n      return value;\n    }));\n    const onPasteByEditor = (warehouse, target) => extractCells(warehouse, target, always).map(cells => ({\n      cells,\n      generators: target.generators,\n      clipboard: target.clipboard\n    }));\n    const onMergable = (_warehouse, target) => target.mergable;\n    const onUnmergable = (_warehouse, target) => target.unmergable;\n    const onCells = (warehouse, target) => extractCells(warehouse, target, always);\n    const onUnlockedCells = (warehouse, target) => extractCells(warehouse, target, detail => !detail.isLocked);\n    const isUnlockedTableCell = (warehouse, cell) => findInWarehouse(warehouse, cell).exists(detail => !detail.isLocked);\n    const allUnlocked = (warehouse, cells) => forall(cells, cell => isUnlockedTableCell(warehouse, cell));\n    const onUnlockedMergable = (warehouse, target) => onMergable(warehouse, target).filter(mergeable => allUnlocked(warehouse, mergeable.cells));\n    const onUnlockedUnmergable = (warehouse, target) => onUnmergable(warehouse, target).filter(cells => allUnlocked(warehouse, cells));\n\n    const merge$2 = (grid, bounds, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      if (rows.length === 0) {\n        return grid;\n      }\n      for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n          const row = rows[i];\n          const isLocked = getCell(row, j).isLocked;\n          mutateCell(row, j, elementnew(substitution(), false, isLocked));\n        }\n      }\n      return grid;\n    };\n    const unmerge = (grid, target, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      let first = true;\n      for (let i = 0; i < rows.length; i++) {\n        for (let j = 0; j < cellLength(rows[0]); j++) {\n          const row = rows[i];\n          const currentCell = getCell(row, j);\n          const currentCellElm = currentCell.element;\n          const isToReplace = comparator(currentCellElm, target);\n          if (isToReplace && !first) {\n            mutateCell(row, j, elementnew(substitution(), true, currentCell.isLocked));\n          } else if (isToReplace) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    const uniqueCells = (row, comparator) => {\n      return foldl(row, (rest, cell) => {\n        return exists(rest, currentCell => {\n          return comparator(currentCell.element, cell.element);\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    const splitCols = (grid, index, comparator, substitution) => {\n      if (index > 0 && index < grid[0].cells.length) {\n        each$2(grid, row => {\n          const prevCell = row.cells[index - 1];\n          let offset = 0;\n          const substitute = substitution();\n          while (row.cells.length > index + offset && comparator(prevCell.element, row.cells[index + offset].element)) {\n            mutateCell(row, index + offset, elementnew(substitute, true, row.cells[index + offset].isLocked));\n            offset++;\n          }\n        });\n      }\n      return grid;\n    };\n    const splitRows = (grid, index, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      if (index > 0 && index < rows.length) {\n        const rowPrevCells = rows[index - 1].cells;\n        const cells = uniqueCells(rowPrevCells, comparator);\n        each$2(cells, cell => {\n          let replacement = Optional.none();\n          for (let i = index; i < rows.length; i++) {\n            for (let j = 0; j < cellLength(rows[0]); j++) {\n              const row = rows[i];\n              const current = getCell(row, j);\n              const isToReplace = comparator(current.element, cell.element);\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Optional.some(substitution());\n                }\n                replacement.each(sub => {\n                  mutateCell(row, j, elementnew(sub, true, current.isLocked));\n                });\n              }\n            }\n          }\n        });\n      }\n      return grid;\n    };\n\n    const value$1 = value => {\n      const applyHelper = fn => fn(value);\n      const constHelper = constant(value);\n      const outputHelper = () => output;\n      const output = {\n        tag: true,\n        inner: value,\n        fold: (_onError, onValue) => onValue(value),\n        isValue: always,\n        isError: never,\n        map: mapper => Result.value(mapper(value)),\n        mapError: outputHelper,\n        bind: applyHelper,\n        exists: applyHelper,\n        forall: applyHelper,\n        getOr: constHelper,\n        or: outputHelper,\n        getOrThunk: constHelper,\n        orThunk: outputHelper,\n        getOrDie: constHelper,\n        each: fn => {\n          fn(value);\n        },\n        toOptional: () => Optional.some(value)\n      };\n      return output;\n    };\n    const error = error => {\n      const outputHelper = () => output;\n      const output = {\n        tag: false,\n        inner: error,\n        fold: (onError, _onValue) => onError(error),\n        isValue: never,\n        isError: always,\n        map: outputHelper,\n        mapError: mapper => Result.error(mapper(error)),\n        bind: outputHelper,\n        exists: never,\n        forall: always,\n        getOr: identity,\n        or: identity,\n        getOrThunk: apply,\n        orThunk: apply,\n        getOrDie: die(String(error)),\n        each: noop,\n        toOptional: Optional.none\n      };\n      return output;\n    };\n    const fromOption = (optional, err) => optional.fold(() => error(err), value$1);\n    const Result = {\n      value: value$1,\n      error,\n      fromOption\n    };\n\n    const measure = (startAddress, gridA, gridB) => {\n      if (startAddress.row >= gridA.length || startAddress.column > cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row + ', column: ' + startAddress.column);\n      }\n      const rowRemainder = gridA.slice(startAddress.row);\n      const colRemainder = rowRemainder[0].cells.slice(startAddress.column);\n      const colRequired = cellLength(gridB[0]);\n      const rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: rowRemainder.length - rowRequired,\n        colDelta: colRemainder.length - colRequired\n      });\n    };\n    const measureWidth = (gridA, gridB) => {\n      const colLengthA = cellLength(gridA[0]);\n      const colLengthB = cellLength(gridB[0]);\n      return {\n        rowDelta: 0,\n        colDelta: colLengthA - colLengthB\n      };\n    };\n    const measureHeight = (gridA, gridB) => {\n      const rowLengthA = gridA.length;\n      const rowLengthB = gridB.length;\n      return {\n        rowDelta: rowLengthA - rowLengthB,\n        colDelta: 0\n      };\n    };\n    const generateElements = (amount, row, generators, isLocked) => {\n      const generator = row.section === 'colgroup' ? generators.col : generators.cell;\n      return range$1(amount, idx => elementnew(generator(), true, isLocked(idx)));\n    };\n    const rowFill = (grid, amount, generators, lockedColumns) => {\n      const exampleRow = grid[grid.length - 1];\n      return grid.concat(range$1(amount, () => {\n        const generator = exampleRow.section === 'colgroup' ? generators.colgroup : generators.row;\n        const row = clone(exampleRow, generator, identity);\n        const elements = generateElements(row.cells.length, row, generators, idx => has$1(lockedColumns, idx.toString()));\n        return setCells(row, elements);\n      }));\n    };\n    const colFill = (grid, amount, generators, startIndex) => map$1(grid, row => {\n      const newChildren = generateElements(amount, row, generators, never);\n      return addCells(row, startIndex, newChildren);\n    });\n    const lockedColFill = (grid, generators, lockedColumns) => map$1(grid, row => {\n      return foldl(lockedColumns, (acc, colNum) => {\n        const newChild = generateElements(1, row, generators, always)[0];\n        return addCell(acc, colNum, newChild);\n      }, row);\n    });\n    const tailor = (gridA, delta, generators) => {\n      const fillCols = delta.colDelta < 0 ? colFill : identity;\n      const fillRows = delta.rowDelta < 0 ? rowFill : identity;\n      const lockedColumns = getLockedColumnsFromGrid(gridA);\n      const gridWidth = cellLength(gridA[0]);\n      const isLastColLocked = exists(lockedColumns, locked => locked === gridWidth - 1);\n      const modifiedCols = fillCols(gridA, Math.abs(delta.colDelta), generators, isLastColLocked ? gridWidth - 1 : gridWidth);\n      const newLockedColumns = getLockedColumnsFromGrid(modifiedCols);\n      return fillRows(modifiedCols, Math.abs(delta.rowDelta), generators, mapToObject(newLockedColumns, always));\n    };\n\n    const isSpanning = (grid, row, col, comparator) => {\n      const candidate = getCell(grid[row], col);\n      const matching = curry(comparator, candidate.element);\n      const currentRow = grid[row];\n      return grid.length > 1 && cellLength(currentRow) > 1 && (col > 0 && matching(getCellElement(currentRow, col - 1)) || col < currentRow.cells.length - 1 && matching(getCellElement(currentRow, col + 1)) || row > 0 && matching(getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(getCellElement(grid[row + 1], col)));\n    };\n    const mergeTables = (startAddress, gridA, gridBRows, generator, comparator, lockedColumns) => {\n      const startRow = startAddress.row;\n      const startCol = startAddress.column;\n      const mergeHeight = gridBRows.length;\n      const mergeWidth = cellLength(gridBRows[0]);\n      const endRow = startRow + mergeHeight;\n      const endCol = startCol + mergeWidth + lockedColumns.length;\n      const lockedColumnObj = mapToObject(lockedColumns, always);\n      for (let r = startRow; r < endRow; r++) {\n        let skippedCol = 0;\n        for (let c = startCol; c < endCol; c++) {\n          if (lockedColumnObj[c]) {\n            skippedCol++;\n            continue;\n          }\n          if (isSpanning(gridA, r, c, comparator)) {\n            unmerge(gridA, getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          const gridBColIndex = c - startCol - skippedCol;\n          const newCell = getCell(gridBRows[r - startRow], gridBColIndex);\n          const newCellElm = newCell.element;\n          const replacement = generator.replace(newCellElm);\n          mutateCell(gridA[r], c, elementnew(replacement, true, newCell.isLocked));\n        }\n      }\n      return gridA;\n    };\n    const getValidStartAddress = (currentStartAddress, grid, lockedColumns) => {\n      const gridColLength = cellLength(grid[0]);\n      const adjustedRowAddress = extractGridDetails(grid).cols.length + currentStartAddress.row;\n      const possibleColAddresses = range$1(gridColLength - currentStartAddress.column, num => num + currentStartAddress.column);\n      const validColAddress = find$1(possibleColAddresses, num => forall(lockedColumns, col => col !== num)).getOr(gridColLength - 1);\n      return {\n        row: adjustedRowAddress,\n        column: validColAddress\n      };\n    };\n    const getLockedColumnsWithinBounds = (startAddress, rows, lockedColumns) => filter$2(lockedColumns, colNum => colNum >= startAddress.column && colNum <= cellLength(rows[0]) + startAddress.column);\n    const merge$1 = (startAddress, gridA, gridB, generator, comparator) => {\n      const lockedColumns = getLockedColumnsFromGrid(gridA);\n      const validStartAddress = getValidStartAddress(startAddress, gridA, lockedColumns);\n      const gridBRows = extractGridDetails(gridB).rows;\n      const lockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, lockedColumns);\n      const result = measure(validStartAddress, gridA, gridBRows);\n      return result.map(diff => {\n        const delta = {\n          ...diff,\n          colDelta: diff.colDelta - lockedColumnsWithinBounds.length\n        };\n        const fittedGrid = tailor(gridA, delta, generator);\n        const newLockedColumns = getLockedColumnsFromGrid(fittedGrid);\n        const newLockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, newLockedColumns);\n        return mergeTables(validStartAddress, fittedGrid, gridBRows, generator, comparator, newLockedColumnsWithinBounds);\n      });\n    };\n    const insertCols = (index, gridA, gridB, generator, comparator) => {\n      splitCols(gridA, index, comparator, generator.cell);\n      const delta = measureHeight(gridB, gridA);\n      const fittedNewGrid = tailor(gridB, delta, generator);\n      const secondDelta = measureHeight(gridA, fittedNewGrid);\n      const fittedOldGrid = tailor(gridA, secondDelta, generator);\n      return map$1(fittedOldGrid, (gridRow, i) => {\n        return addCells(gridRow, index, fittedNewGrid[i].cells);\n      });\n    };\n    const insertRows = (index, gridA, gridB, generator, comparator) => {\n      splitRows(gridA, index, comparator, generator.cell);\n      const locked = getLockedColumnsFromGrid(gridA);\n      const diff = measureWidth(gridA, gridB);\n      const delta = {\n        ...diff,\n        colDelta: diff.colDelta - locked.length\n      };\n      const fittedOldGrid = tailor(gridA, delta, generator);\n      const {\n        cols: oldCols,\n        rows: oldRows\n      } = extractGridDetails(fittedOldGrid);\n      const newLocked = getLockedColumnsFromGrid(fittedOldGrid);\n      const secondDiff = measureWidth(gridB, gridA);\n      const secondDelta = {\n        ...secondDiff,\n        colDelta: secondDiff.colDelta + newLocked.length\n      };\n      const fittedGridB = lockedColFill(gridB, generator, newLocked);\n      const fittedNewGrid = tailor(fittedGridB, secondDelta, generator);\n      return [\n        ...oldCols,\n        ...oldRows.slice(0, index),\n        ...fittedNewGrid,\n        ...oldRows.slice(index, oldRows.length)\n      ];\n    };\n\n    const cloneRow = (row, cloneCell, comparator, substitution) => clone(row, elem => substitution(elem, comparator), cloneCell);\n    const insertRowAt = (grid, index, example, comparator, substitution) => {\n      const {rows, cols} = extractGridDetails(grid);\n      const before = rows.slice(0, index);\n      const after = rows.slice(index);\n      const newRow = cloneRow(rows[example], (ex, c) => {\n        const withinSpan = index > 0 && index < rows.length && comparator(getCellElement(rows[index - 1], c), getCellElement(rows[index], c));\n        const ret = withinSpan ? getCell(rows[index], c) : elementnew(substitution(ex.element, comparator), true, ex.isLocked);\n        return ret;\n      }, comparator, substitution);\n      return [\n        ...cols,\n        ...before,\n        newRow,\n        ...after\n      ];\n    };\n    const getElementFor = (row, column, section, withinSpan, example, comparator, substitution) => {\n      if (section === 'colgroup' || !withinSpan) {\n        const cell = getCell(row, example);\n        return elementnew(substitution(cell.element, comparator), true, false);\n      } else {\n        return getCell(row, column);\n      }\n    };\n    const insertColumnAt = (grid, index, example, comparator, substitution) => map$1(grid, row => {\n      const withinSpan = index > 0 && index < cellLength(row) && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n      const sub = getElementFor(row, index, row.section, withinSpan, example, comparator, substitution);\n      return addCell(row, index, sub);\n    });\n    const deleteColumnsAt = (grid, columns) => bind$2(grid, row => {\n      const existingCells = row.cells;\n      const cells = foldr(columns, (acc, column) => column >= 0 && column < acc.length ? acc.slice(0, column).concat(acc.slice(column + 1)) : acc, existingCells);\n      return cells.length > 0 ? [rowcells(row.element, cells, row.section, row.isNew)] : [];\n    });\n    const deleteRowsAt = (grid, start, finish) => {\n      const {rows, cols} = extractGridDetails(grid);\n      return [\n        ...cols,\n        ...rows.slice(0, start),\n        ...rows.slice(finish + 1)\n      ];\n    };\n\n    const notInStartRow = (grid, rowIndex, colIndex, comparator) => getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(getCellElement(grid[rowIndex - 1], colIndex), getCellElement(grid[rowIndex], colIndex)));\n    const notInStartColumn = (row, index, comparator) => index > 0 && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n    const isDuplicatedCell = (grid, rowIndex, colIndex, comparator) => notInStartRow(grid, rowIndex, colIndex, comparator) || notInStartColumn(grid[rowIndex], colIndex, comparator);\n    const rowReplacerPredicate = (targetRow, columnHeaders) => {\n      const entireTableIsHeader = forall(columnHeaders, identity) && isHeaderCells(targetRow.cells);\n      return entireTableIsHeader ? always : (cell, _rowIndex, colIndex) => {\n        const type = name(cell.element);\n        return !(type === 'th' && columnHeaders[colIndex]);\n      };\n    };\n    const columnReplacePredicate = (targetColumn, rowHeaders) => {\n      const entireTableIsHeader = forall(rowHeaders, identity) && isHeaderCells(targetColumn);\n      return entireTableIsHeader ? always : (cell, rowIndex, _colIndex) => {\n        const type = name(cell.element);\n        return !(type === 'th' && rowHeaders[rowIndex]);\n      };\n    };\n    const determineScope = (applyScope, cell, newScope, isInHeader) => {\n      const hasSpan = scope => scope === 'row' ? hasRowspan(cell) : hasColspan(cell);\n      const getScope = scope => hasSpan(scope) ? `${ scope }group` : scope;\n      if (applyScope) {\n        return isHeaderCell(cell) ? getScope(newScope) : null;\n      } else if (isInHeader && isHeaderCell(cell)) {\n        const oppositeScope = newScope === 'row' ? 'col' : 'row';\n        return getScope(oppositeScope);\n      } else {\n        return null;\n      }\n    };\n    const rowScopeGenerator = (applyScope, columnHeaders) => (cell, rowIndex, columnIndex) => Optional.some(determineScope(applyScope, cell.element, 'col', columnHeaders[columnIndex]));\n    const columnScopeGenerator = (applyScope, rowHeaders) => (cell, rowIndex) => Optional.some(determineScope(applyScope, cell.element, 'row', rowHeaders[rowIndex]));\n    const replace = (cell, comparator, substitute) => elementnew(substitute(cell.element, comparator), true, cell.isLocked);\n    const replaceIn = (grid, targets, comparator, substitute, replacer, genScope, shouldReplace) => {\n      const isTarget = cell => {\n        return exists(targets, target => {\n          return comparator(cell.element, target.element);\n        });\n      };\n      return map$1(grid, (row, rowIndex) => {\n        return mapCells(row, (cell, colIndex) => {\n          if (isTarget(cell)) {\n            const newCell = shouldReplace(cell, rowIndex, colIndex) ? replacer(cell, comparator, substitute) : cell;\n            genScope(newCell, rowIndex, colIndex).each(scope => {\n              setOptions(newCell.element, { scope: Optional.from(scope) });\n            });\n            return newCell;\n          } else {\n            return cell;\n          }\n        });\n      });\n    };\n    const getColumnCells = (rows, columnIndex, comparator) => bind$2(rows, (row, i) => {\n      return isDuplicatedCell(rows, i, columnIndex, comparator) ? [] : [getCell(row, columnIndex)];\n    });\n    const getRowCells = (rows, rowIndex, comparator) => {\n      const targetRow = rows[rowIndex];\n      return bind$2(targetRow.cells, (item, i) => {\n        return isDuplicatedCell(rows, rowIndex, i, comparator) ? [] : [item];\n      });\n    };\n    const replaceColumns = (grid, indexes, applyScope, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      const targets = bind$2(indexes, index => getColumnCells(rows, index, comparator));\n      const rowHeaders = map$1(rows, row => isHeaderCells(row.cells));\n      const shouldReplaceCell = columnReplacePredicate(targets, rowHeaders);\n      const scopeGenerator = columnScopeGenerator(applyScope, rowHeaders);\n      return replaceIn(grid, targets, comparator, substitution, replace, scopeGenerator, shouldReplaceCell);\n    };\n    const replaceRows = (grid, indexes, section, applyScope, comparator, substitution, tableSection) => {\n      const {cols, rows} = extractGridDetails(grid);\n      const targetRow = rows[indexes[0]];\n      const targets = bind$2(indexes, index => getRowCells(rows, index, comparator));\n      const columnHeaders = map$1(targetRow.cells, (_cell, index) => isHeaderCells(getColumnCells(rows, index, comparator)));\n      const newRows = [...rows];\n      each$2(indexes, index => {\n        newRows[index] = tableSection.transformRow(rows[index], section);\n      });\n      const newGrid = [\n        ...cols,\n        ...newRows\n      ];\n      const shouldReplaceCell = rowReplacerPredicate(targetRow, columnHeaders);\n      const scopeGenerator = rowScopeGenerator(applyScope, columnHeaders);\n      return replaceIn(newGrid, targets, comparator, substitution, tableSection.transformCell, scopeGenerator, shouldReplaceCell);\n    };\n    const replaceCells = (grid, details, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      const targetCells = map$1(details, detail => getCell(rows[detail.row], detail.column));\n      return replaceIn(grid, targetCells, comparator, substitution, replace, Optional.none, always);\n    };\n\n    const generate = cases => {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      const constructors = [];\n      const adt = {};\n      each$2(cases, (acase, count) => {\n        const keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        const key = keys$1[0];\n        const value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = (...args) => {\n          const argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          const match = branches => {\n            const branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            const allReqd = forall(constructors, reqKey => {\n              return contains$2(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: (...foldArgs) => {\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              const target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match,\n            log: label => {\n              console.log(label, {\n                constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    const Adt = { generate };\n\n    const adt$6 = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    const ColumnContext = { ...adt$6 };\n\n    const neighbours = (input, index) => {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    const determine = (input, column, step, tableSize, resize) => {\n      const result = input.slice(0);\n      const context = neighbours(input, column);\n      const onNone = constant(map$1(result, constant(0)));\n      const onOnly = index => tableSize.singleColumnWidth(result[index], step);\n      const onLeft = (index, next) => resize.calcLeftEdgeDeltas(result, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      const onMiddle = (prev, index, next) => resize.calcMiddleDeltas(result, prev, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      const onRight = (prev, index) => resize.calcRightEdgeDeltas(result, prev, index, step, tableSize.minCellWidth(), tableSize.isRelative);\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n\n    const total = (start, end, measures) => {\n      let r = 0;\n      for (let i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    const recalculateWidthForCells = (warehouse, widths) => {\n      const all = Warehouse.justCells(warehouse);\n      return map$1(all, cell => {\n        const width = total(cell.column, cell.column + cell.colspan, widths);\n        return {\n          element: cell.element,\n          width,\n          colspan: cell.colspan\n        };\n      });\n    };\n    const recalculateWidthForColumns = (warehouse, widths) => {\n      const groups = Warehouse.justColumns(warehouse);\n      return map$1(groups, (column, index) => ({\n        element: column.element,\n        width: widths[index],\n        colspan: column.colspan\n      }));\n    };\n    const recalculateHeightForCells = (warehouse, heights) => {\n      const all = Warehouse.justCells(warehouse);\n      return map$1(all, cell => {\n        const height = total(cell.row, cell.row + cell.rowspan, heights);\n        return {\n          element: cell.element,\n          height,\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    const matchRowHeight = (warehouse, heights) => {\n      return map$1(warehouse.all, (row, i) => {\n        return {\n          element: row.element,\n          height: heights[i]\n        };\n      });\n    };\n\n    const sumUp = newSize => foldr(newSize, (b, a) => b + a, 0);\n    const recalculate = (warehouse, widths) => {\n      if (Warehouse.hasColumns(warehouse)) {\n        return recalculateWidthForColumns(warehouse, widths);\n      } else {\n        return recalculateWidthForCells(warehouse, widths);\n      }\n    };\n    const recalculateAndApply = (warehouse, widths, tableSize) => {\n      const newSizes = recalculate(warehouse, widths);\n      each$2(newSizes, cell => {\n        tableSize.setElementWidth(cell.element, cell.width);\n      });\n    };\n    const adjustWidth = (table, delta, index, resizing, tableSize) => {\n      const warehouse = Warehouse.fromTable(table);\n      const step = tableSize.getCellDelta(delta);\n      const widths = tableSize.getWidths(warehouse, tableSize);\n      const isLastColumn = index === warehouse.grid.columns - 1;\n      const clampedStep = resizing.clampTableDelta(widths, index, step, tableSize.minCellWidth(), isLastColumn);\n      const deltas = determine(widths, index, clampedStep, tableSize, resizing);\n      const newWidths = map$1(deltas, (dx, i) => dx + widths[i]);\n      recalculateAndApply(warehouse, newWidths, tableSize);\n      resizing.resizeTable(tableSize.adjustTableWidth, clampedStep, isLastColumn);\n    };\n    const adjustHeight = (table, delta, index, direction) => {\n      const warehouse = Warehouse.fromTable(table);\n      const heights = getPixelHeights(warehouse, table, direction);\n      const newHeights = map$1(heights, (dy, i) => index === i ? Math.max(delta + dy, minHeight()) : dy);\n      const newCellSizes = recalculateHeightForCells(warehouse, newHeights);\n      const newRowSizes = matchRowHeight(warehouse, newHeights);\n      each$2(newRowSizes, row => {\n        setHeight(row.element, row.height);\n      });\n      each$2(newCellSizes, cell => {\n        setHeight(cell.element, cell.height);\n      });\n      const total = sumUp(newHeights);\n      setHeight(table, total);\n    };\n    const adjustAndRedistributeWidths$1 = (_table, list, details, tableSize, resizeBehaviour) => {\n      const warehouse = Warehouse.generate(list);\n      const sizes = tableSize.getWidths(warehouse, tableSize);\n      const tablePixelWidth = tableSize.pixelWidth();\n      const {newSizes, delta} = resizeBehaviour.calcRedestributedWidths(sizes, tablePixelWidth, details.pixelDelta, tableSize.isRelative);\n      recalculateAndApply(warehouse, newSizes, tableSize);\n      tableSize.adjustTableWidth(delta);\n    };\n    const adjustWidthTo = (_table, list, _info, tableSize) => {\n      const warehouse = Warehouse.generate(list);\n      const widths = tableSize.getWidths(warehouse, tableSize);\n      recalculateAndApply(warehouse, widths, tableSize);\n    };\n\n    const uniqueColumns = details => {\n      const uniqueCheck = (rest, detail) => {\n        const columnExists = exists(rest, currentDetail => currentDetail.column === detail.column);\n        return columnExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, uniqueCheck, []).sort((detailA, detailB) => detailA.column - detailB.column);\n    };\n\n    const isCol = isTag('col');\n    const isColgroup = isTag('colgroup');\n    const isRow$1 = element => name(element) === 'tr' || isColgroup(element);\n    const elementToData = element => {\n      const colspan = getAttrValue(element, 'colspan', 1);\n      const rowspan = getAttrValue(element, 'rowspan', 1);\n      return {\n        element,\n        colspan,\n        rowspan\n      };\n    };\n    const modification = (generators, toData = elementToData) => {\n      const nuCell = data => isCol(data.element) ? generators.col(data) : generators.cell(data);\n      const nuRow = data => isColgroup(data.element) ? generators.colgroup(data) : generators.row(data);\n      const add = element => {\n        if (isRow$1(element)) {\n          return nuRow({ element });\n        } else {\n          const cell = element;\n          const replacement = nuCell(toData(cell));\n          recent = Optional.some({\n            item: cell,\n            replacement\n          });\n          return replacement;\n        }\n      };\n      let recent = Optional.none();\n      const getOrInit = (element, comparator) => {\n        return recent.fold(() => {\n          return add(element);\n        }, p => {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return { getOrInit };\n    };\n    const transform$1 = tag => {\n      return generators => {\n        const list = [];\n        const find = (element, comparator) => {\n          return find$1(list, x => {\n            return comparator(x.item, element);\n          });\n        };\n        const makeNew = element => {\n          const attrs = tag === 'td' ? { scope: null } : {};\n          const cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          return cell;\n        };\n        const replaceOrInit = (element, comparator) => {\n          if (isRow$1(element) || isCol(element)) {\n            return element;\n          } else {\n            const cell = element;\n            return find(cell, comparator).fold(() => {\n              return makeNew(cell);\n            }, p => {\n              return comparator(element, p.item) ? p.sub : makeNew(cell);\n            });\n          }\n        };\n        return { replaceOrInit };\n      };\n    };\n    const getScopeAttribute = cell => getOpt(cell, 'scope').map(attribute => attribute.substr(0, 3));\n    const merging = generators => {\n      const unmerge = cell => {\n        const scope = getScopeAttribute(cell);\n        scope.each(attribute => set$2(cell, 'scope', attribute));\n        return () => {\n          const raw = generators.cell({\n            element: cell,\n            colspan: 1,\n            rowspan: 1\n          });\n          remove$5(raw, 'width');\n          remove$5(cell, 'width');\n          scope.each(attribute => set$2(raw, 'scope', attribute));\n          return raw;\n        };\n      };\n      const merge = cells => {\n        const getScopeProperty = () => {\n          const stringAttributes = cat(map$1(cells, getScopeAttribute));\n          if (stringAttributes.length === 0) {\n            return Optional.none();\n          } else {\n            const baseScope = stringAttributes[0];\n            const scopes = [\n              'row',\n              'col'\n            ];\n            const isMixed = exists(stringAttributes, attribute => {\n              return attribute !== baseScope && contains$2(scopes, attribute);\n            });\n            return isMixed ? Optional.none() : Optional.from(baseScope);\n          }\n        };\n        remove$5(cells[0], 'width');\n        getScopeProperty().fold(() => remove$7(cells[0], 'scope'), attribute => set$2(cells[0], 'scope', attribute + 'group'));\n        return constant(cells[0]);\n      };\n      return {\n        unmerge,\n        merge\n      };\n    };\n    const Generators = {\n      modification,\n      transform: transform$1,\n      merging\n    };\n\n    const blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    const isList$1 = (universe, item) => {\n      const tagName = universe.property().name(item);\n      return contains$2([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    const isBlock$1 = (universe, item) => {\n      const tagName = universe.property().name(item);\n      return contains$2(blockList, tagName);\n    };\n    const isEmptyTag$1 = (universe, item) => {\n      return contains$2([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n\n    const universe$1 = DomUniverse();\n    const isBlock = element => {\n      return isBlock$1(universe$1, element);\n    };\n    const isList = element => {\n      return isList$1(universe$1, element);\n    };\n    const isEmptyTag = element => {\n      return isEmptyTag$1(universe$1, element);\n    };\n\n    const merge = cells => {\n      const isBr = isTag('br');\n      const advancedBr = children => {\n        return forall(children, c => {\n          return isBr(c) || isText(c) && get$6(c).trim().length === 0;\n        });\n      };\n      const isListItem = el => {\n        return name(el) === 'li' || ancestor$2(el, isList).isSome();\n      };\n      const siblingIsBlock = el => {\n        return nextSibling(el).map(rightSibling => {\n          if (isBlock(rightSibling)) {\n            return true;\n          }\n          if (isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      const markCell = cell => {\n        return last$1(cell).bind(rightEdge => {\n          const rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(parent => {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || isBlock(parent) && !eq$1(cell, parent) ? [] : [SugarElement.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      const markContent = () => {\n        const content = bind$2(cells, cell => {\n          const children = children$2(cell);\n          return advancedBr(children) ? [] : children.concat(markCell(cell));\n        });\n        return content.length === 0 ? [SugarElement.fromTag('br')] : content;\n      };\n      const contents = markContent();\n      empty(cells[0]);\n      append(cells[0], contents);\n    };\n\n    const isEditable = elem => isEditable$1(elem, true);\n    const prune = table => {\n      const cells = cells$1(table);\n      if (cells.length === 0) {\n        remove$6(table);\n      }\n    };\n    const outcome = (grid, cursor) => ({\n      grid,\n      cursor\n    });\n    const findEditableCursorPosition = rows => findMap(rows, row => findMap(row.cells, cell => {\n      const elem = cell.element;\n      return someIf(isEditable(elem), elem);\n    }));\n    const elementFromGrid = (grid, row, column) => {\n      var _a, _b;\n      const rows = extractGridDetails(grid).rows;\n      return Optional.from((_b = (_a = rows[row]) === null || _a === void 0 ? void 0 : _a.cells[column]) === null || _b === void 0 ? void 0 : _b.element).filter(isEditable).orThunk(() => findEditableCursorPosition(rows));\n    };\n    const bundle = (grid, row, column) => {\n      const cursorElement = elementFromGrid(grid, row, column);\n      return outcome(grid, cursorElement);\n    };\n    const uniqueRows = details => {\n      const rowCompilation = (rest, detail) => {\n        const rowExists = exists(rest, currentDetail => currentDetail.row === detail.row);\n        return rowExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, rowCompilation, []).sort((detailA, detailB) => detailA.row - detailB.row);\n    };\n    const opInsertRowsBefore = (grid, details, comparator, genWrappers) => {\n      const targetIndex = details[0].row;\n      const rows = uniqueRows(details);\n      const newGrid = foldr(rows, (acc, row) => {\n        const newG = insertRowAt(acc.grid, targetIndex, row.row + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    const opInsertRowsAfter = (grid, details, comparator, genWrappers) => {\n      const rows = uniqueRows(details);\n      const target = rows[rows.length - 1];\n      const targetIndex = target.row + target.rowspan;\n      const newGrid = foldr(rows, (newG, row) => {\n        return insertRowAt(newG, targetIndex, row.row, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    const opInsertColumnsBefore = (grid, extractDetail, comparator, genWrappers) => {\n      const details = extractDetail.details;\n      const columns = uniqueColumns(details);\n      const targetIndex = columns[0].column;\n      const newGrid = foldr(columns, (acc, col) => {\n        const newG = insertColumnAt(acc.grid, targetIndex, col.column + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    const opInsertColumnsAfter = (grid, extractDetail, comparator, genWrappers) => {\n      const details = extractDetail.details;\n      const target = details[details.length - 1];\n      const targetIndex = target.column + target.colspan;\n      const columns = uniqueColumns(details);\n      const newGrid = foldr(columns, (newG, col) => {\n        return insertColumnAt(newG, targetIndex, col.column, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    const opMakeColumnsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const columns = uniqueColumns(details);\n      const columnIndexes = map$1(columns, detail => detail.column);\n      const newGrid = replaceColumns(initialGrid, columnIndexes, true, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opMakeCellsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opUnmakeColumnsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const columns = uniqueColumns(details);\n      const columnIndexes = map$1(columns, detail => detail.column);\n      const newGrid = replaceColumns(initialGrid, columnIndexes, false, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opUnmakeCellsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const makeRowsSection = (section, applyScope) => (initialGrid, details, comparator, genWrappers, tableSection) => {\n      const rows = uniqueRows(details);\n      const rowIndexes = map$1(rows, detail => detail.row);\n      const newGrid = replaceRows(initialGrid, rowIndexes, section, applyScope, comparator, genWrappers.replaceOrInit, tableSection);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opMakeRowsHeader = makeRowsSection('thead', true);\n    const opMakeRowsBody = makeRowsSection('tbody', false);\n    const opMakeRowsFooter = makeRowsSection('tfoot', false);\n    const opEraseColumns = (grid, extractDetail, _comparator, _genWrappers) => {\n      const columns = uniqueColumns(extractDetail.details);\n      const newGrid = deleteColumnsAt(grid, map$1(columns, column => column.column));\n      const maxColIndex = newGrid.length > 0 ? newGrid[0].cells.length - 1 : 0;\n      return bundle(newGrid, columns[0].row, Math.min(columns[0].column, maxColIndex));\n    };\n    const opEraseRows = (grid, details, _comparator, _genWrappers) => {\n      const rows = uniqueRows(details);\n      const newGrid = deleteRowsAt(grid, rows[0].row, rows[rows.length - 1].row);\n      const maxRowIndex = newGrid.length > 0 ? newGrid.length - 1 : 0;\n      return bundle(newGrid, Math.min(details[0].row, maxRowIndex), details[0].column);\n    };\n    const opMergeCells = (grid, mergable, comparator, genWrappers) => {\n      const cells = mergable.cells;\n      merge(cells);\n      const newGrid = merge$2(grid, mergable.bounds, comparator, genWrappers.merge(cells));\n      return outcome(newGrid, Optional.from(cells[0]));\n    };\n    const opUnmergeCells = (grid, unmergable, comparator, genWrappers) => {\n      const unmerge$1 = (b, cell) => unmerge(b, cell, comparator, genWrappers.unmerge(cell));\n      const newGrid = foldr(unmergable, unmerge$1, grid);\n      return outcome(newGrid, Optional.from(unmergable[0]));\n    };\n    const opPasteCells = (grid, pasteDetails, comparator, _genWrappers) => {\n      const gridify = (table, generators) => {\n        const wh = Warehouse.fromTable(table);\n        return toGrid(wh, generators, true);\n      };\n      const gridB = gridify(pasteDetails.clipboard, pasteDetails.generators);\n      const startAddress = address(pasteDetails.row, pasteDetails.column);\n      const mergedGrid = merge$1(startAddress, grid, gridB, pasteDetails.generators, comparator);\n      return mergedGrid.fold(() => outcome(grid, Optional.some(pasteDetails.element)), newGrid => {\n        return bundle(newGrid, pasteDetails.row, pasteDetails.column);\n      });\n    };\n    const gridifyRows = (rows, generators, context) => {\n      const pasteDetails = fromPastedRows(rows, context.section);\n      const wh = Warehouse.generate(pasteDetails);\n      return toGrid(wh, generators, true);\n    };\n    const opPasteColsBefore = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[0].column;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteColsAfter = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[pasteDetails.cells.length - 1].column + pasteDetails.cells[pasteDetails.cells.length - 1].colspan;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteRowsBefore = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[0].row;\n      const context = rows[index];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteRowsAfter = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[pasteDetails.cells.length - 1].row + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opGetColumnsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minColRange = selectedCells[0].column;\n        const maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        const selectedColumnCells = flatten(map$1(house.all, row => filter$2(row.cells, cell => cell.column >= minColRange && cell.column < maxColRange)));\n        return findCommonCellType(selectedColumnCells);\n      }).getOr('');\n    };\n    const opGetCellsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(findCommonCellType).getOr('');\n    };\n    const opGetRowsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minRowRange = selectedCells[0].row;\n        const maxRowRange = lastSelectedCell.row + lastSelectedCell.rowspan;\n        const selectedRows = house.all.slice(minRowRange, maxRowRange);\n        return findCommonRowType(selectedRows);\n      }).getOr('');\n    };\n    const resize = (table, list, details, behaviours) => adjustWidthTo(table, list, details, behaviours.sizing);\n    const adjustAndRedistributeWidths = (table, list, details, behaviours) => adjustAndRedistributeWidths$1(table, list, details, behaviours.sizing, behaviours.resize);\n    const firstColumnIsLocked = (_warehouse, details) => exists(details, detail => detail.column === 0 && detail.isLocked);\n    const lastColumnIsLocked = (warehouse, details) => exists(details, detail => detail.column + detail.colspan >= warehouse.grid.columns && detail.isLocked);\n    const getColumnsWidth = (warehouse, details) => {\n      const columns$1 = columns(warehouse);\n      const uniqueCols = uniqueColumns(details);\n      return foldl(uniqueCols, (acc, detail) => {\n        const column = columns$1[detail.column];\n        const colWidth = column.map(getOuter$2).getOr(0);\n        return acc + colWidth;\n      }, 0);\n    };\n    const insertColumnsExtractor = before => (warehouse, target) => onCells(warehouse, target).filter(details => {\n      const checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n      return !checkLocked(warehouse, details);\n    }).map(details => ({\n      details,\n      pixelDelta: getColumnsWidth(warehouse, details)\n    }));\n    const eraseColumnsExtractor = (warehouse, target) => onUnlockedCells(warehouse, target).map(details => ({\n      details,\n      pixelDelta: -getColumnsWidth(warehouse, details)\n    }));\n    const pasteColumnsExtractor = before => (warehouse, target) => onPasteByEditor(warehouse, target).filter(details => {\n      const checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n      return !checkLocked(warehouse, details.cells);\n    });\n    const headerCellGenerator = Generators.transform('th');\n    const bodyCellGenerator = Generators.transform('td');\n    const insertRowsBefore = run(opInsertRowsBefore, onCells, noop, noop, Generators.modification);\n    const insertRowsAfter = run(opInsertRowsAfter, onCells, noop, noop, Generators.modification);\n    const insertColumnsBefore = run(opInsertColumnsBefore, insertColumnsExtractor(true), adjustAndRedistributeWidths, noop, Generators.modification);\n    const insertColumnsAfter = run(opInsertColumnsAfter, insertColumnsExtractor(false), adjustAndRedistributeWidths, noop, Generators.modification);\n    const eraseColumns = run(opEraseColumns, eraseColumnsExtractor, adjustAndRedistributeWidths, prune, Generators.modification);\n    const eraseRows = run(opEraseRows, onCells, noop, prune, Generators.modification);\n    const makeColumnsHeader = run(opMakeColumnsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const unmakeColumnsHeader = run(opUnmakeColumnsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeRowsHeader = run(opMakeRowsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const makeRowsBody = run(opMakeRowsBody, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeRowsFooter = run(opMakeRowsFooter, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeCellsHeader = run(opMakeCellsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const unmakeCellsHeader = run(opUnmakeCellsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const mergeCells = run(opMergeCells, onUnlockedMergable, resize, noop, Generators.merging);\n    const unmergeCells = run(opUnmergeCells, onUnlockedUnmergable, resize, noop, Generators.merging);\n    const pasteCells = run(opPasteCells, onPaste, resize, noop, Generators.modification);\n    const pasteColsBefore = run(opPasteColsBefore, pasteColumnsExtractor(true), noop, noop, Generators.modification);\n    const pasteColsAfter = run(opPasteColsAfter, pasteColumnsExtractor(false), noop, noop, Generators.modification);\n    const pasteRowsBefore = run(opPasteRowsBefore, onPasteByEditor, noop, noop, Generators.modification);\n    const pasteRowsAfter = run(opPasteRowsAfter, onPasteByEditor, noop, noop, Generators.modification);\n    const getColumnsType = opGetColumnsType;\n    const getCellsType = opGetCellsType;\n    const getRowsType = opGetRowsType;\n\n    const fireNewRow = (editor, row) => editor.dispatch('NewRow', { node: row });\n    const fireNewCell = (editor, cell) => editor.dispatch('NewCell', { node: cell });\n    const fireTableModified = (editor, table, data) => {\n      editor.dispatch('TableModified', {\n        ...data,\n        table\n      });\n    };\n    const fireTableSelectionChange = (editor, cells, start, finish, otherCells) => {\n      editor.dispatch('TableSelectionChange', {\n        cells,\n        start,\n        finish,\n        otherCells\n      });\n    };\n    const fireTableSelectionClear = editor => {\n      editor.dispatch('TableSelectionClear');\n    };\n    const fireObjectResizeStart = (editor, target, width, height, origin) => {\n      editor.dispatch('ObjectResizeStart', {\n        target,\n        width,\n        height,\n        origin\n      });\n    };\n    const fireObjectResized = (editor, target, width, height, origin) => {\n      editor.dispatch('ObjectResized', {\n        target,\n        width,\n        height,\n        origin\n      });\n    };\n    const styleModified = {\n      structure: false,\n      style: true\n    };\n    const structureModified = {\n      structure: true,\n      style: false\n    };\n    const styleAndStructureModified = {\n      structure: true,\n      style: true\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const defaultWidth = '100%';\n    const getPixelForcedWidth = editor => {\n      var _a;\n      const dom = editor.dom;\n      const parentBlock = (_a = dom.getParent(editor.selection.getStart(), dom.isBlock)) !== null && _a !== void 0 ? _a : editor.getBody();\n      return getInner(SugarElement.fromDom(parentBlock)) + 'px';\n    };\n    const determineDefaultTableStyles = (editor, defaultStyles) => {\n      if (isTableResponsiveForced(editor) || !shouldStyleWithCss(editor)) {\n        return defaultStyles;\n      } else if (isTablePixelsForced(editor)) {\n        return {\n          ...defaultStyles,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultStyles,\n          width: defaultWidth\n        };\n      }\n    };\n    const determineDefaultTableAttributes = (editor, defaultAttributes) => {\n      if (isTableResponsiveForced(editor) || shouldStyleWithCss(editor)) {\n        return defaultAttributes;\n      } else if (isTablePixelsForced(editor)) {\n        return {\n          ...defaultAttributes,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultAttributes,\n          width: defaultWidth\n        };\n      }\n    };\n    const register = editor => {\n      const registerOption = editor.options.register;\n      registerOption('table_clone_elements', { processor: 'string[]' });\n      registerOption('table_use_colgroups', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_header_type', {\n        processor: value => {\n          const valid = contains$2([\n            'section',\n            'cells',\n            'sectionCells',\n            'auto'\n          ], value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be one of: section, cells, sectionCells or auto.'\n          };\n        },\n        default: 'section'\n      });\n      registerOption('table_sizing_mode', {\n        processor: 'string',\n        default: 'auto'\n      });\n      registerOption('table_default_attributes', {\n        processor: 'object',\n        default: { border: '1' }\n      });\n      registerOption('table_default_styles', {\n        processor: 'object',\n        default: { 'border-collapse': 'collapse' }\n      });\n      registerOption('table_column_resizing', {\n        processor: value => {\n          const valid = contains$2([\n            'preservetable',\n            'resizetable'\n          ], value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be preservetable, or resizetable.'\n          };\n        },\n        default: 'preservetable'\n      });\n      registerOption('table_resize_bars', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_style_by_css', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const getTableCloneElements = editor => {\n      return Optional.from(editor.options.get('table_clone_elements'));\n    };\n    const hasTableObjectResizing = editor => {\n      const objectResizing = editor.options.get('object_resizing');\n      return contains$2(objectResizing.split(','), 'table');\n    };\n    const getTableHeaderType = option('table_header_type');\n    const getTableColumnResizingBehaviour = option('table_column_resizing');\n    const isPreserveTableColumnResizing = editor => getTableColumnResizingBehaviour(editor) === 'preservetable';\n    const isResizeTableColumnResizing = editor => getTableColumnResizingBehaviour(editor) === 'resizetable';\n    const getTableSizingMode = option('table_sizing_mode');\n    const isTablePercentagesForced = editor => getTableSizingMode(editor) === 'relative';\n    const isTablePixelsForced = editor => getTableSizingMode(editor) === 'fixed';\n    const isTableResponsiveForced = editor => getTableSizingMode(editor) === 'responsive';\n    const hasTableResizeBars = option('table_resize_bars');\n    const shouldStyleWithCss = option('table_style_by_css');\n    const getTableDefaultAttributes = editor => {\n      const options = editor.options;\n      const defaultAttributes = options.get('table_default_attributes');\n      return options.isSet('table_default_attributes') ? defaultAttributes : determineDefaultTableAttributes(editor, defaultAttributes);\n    };\n    const getTableDefaultStyles = editor => {\n      const options = editor.options;\n      const defaultStyles = options.get('table_default_styles');\n      return options.isSet('table_default_styles') ? defaultStyles : determineDefaultTableStyles(editor, defaultStyles);\n    };\n    const tableUseColumnGroup = option('table_use_colgroups');\n\n    const get$5 = (editor, table) => {\n      if (isTablePercentagesForced(editor)) {\n        return TableSize.percentageSize(table);\n      } else if (isTablePixelsForced(editor)) {\n        return TableSize.pixelSize(table);\n      } else {\n        return TableSize.getTableSize(table);\n      }\n    };\n\n    const TableActions = (editor, resizeHandler, cellSelectionHandler) => {\n      const isTableBody = editor => name(getBody(editor)) === 'table';\n      const lastRowGuard = table => !isTableBody(editor) || getGridSize(table).rows > 1;\n      const lastColumnGuard = table => !isTableBody(editor) || getGridSize(table).columns > 1;\n      const cloneFormats = getTableCloneElements(editor);\n      const colMutationOp = isResizeTableColumnResizing(editor) ? noop : halve;\n      const getTableSectionType = table => {\n        switch (getTableHeaderType(editor)) {\n        case 'section':\n          return TableSection.section();\n        case 'sectionCells':\n          return TableSection.sectionCells();\n        case 'cells':\n          return TableSection.cells();\n        default:\n          return TableSection.getTableSectionType(table, 'section');\n        }\n      };\n      const setSelectionFromAction = (table, result) => result.cursor.fold(() => {\n        const cells = cells$1(table);\n        return head(cells).filter(inBody).map(firstCell => {\n          cellSelectionHandler.clearSelectedCells(table.dom);\n          const rng = editor.dom.createRng();\n          rng.selectNode(firstCell.dom);\n          editor.selection.setRng(rng);\n          set$2(firstCell, 'data-mce-selected', '1');\n          return rng;\n        });\n      }, cell => {\n        const des = freefallRtl(cell);\n        const rng = editor.dom.createRng();\n        rng.setStart(des.element.dom, des.offset);\n        rng.setEnd(des.element.dom, des.offset);\n        editor.selection.setRng(rng);\n        cellSelectionHandler.clearSelectedCells(table.dom);\n        return Optional.some(rng);\n      });\n      const execute = (operation, guard, mutate, effect) => (table, target, noEvents = false) => {\n        removeDataStyle(table);\n        const doc = SugarElement.fromDom(editor.getDoc());\n        const generators = cellOperations(mutate, doc, cloneFormats);\n        const behaviours = {\n          sizing: get$5(editor, table),\n          resize: isResizeTableColumnResizing(editor) ? resizeTable() : preserveTable(),\n          section: getTableSectionType(table)\n        };\n        return guard(table) ? operation(table, target, generators, behaviours).bind(result => {\n          resizeHandler.refresh(table.dom);\n          each$2(result.newRows, row => {\n            fireNewRow(editor, row.dom);\n          });\n          each$2(result.newCells, cell => {\n            fireNewCell(editor, cell.dom);\n          });\n          const range = setSelectionFromAction(table, result);\n          if (inBody(table)) {\n            removeDataStyle(table);\n            if (!noEvents) {\n              fireTableModified(editor, table.dom, effect);\n            }\n          }\n          return range.map(rng => ({\n            rng,\n            effect\n          }));\n        }) : Optional.none();\n      };\n      const deleteRow = execute(eraseRows, lastRowGuard, noop, structureModified);\n      const deleteColumn = execute(eraseColumns, lastColumnGuard, noop, structureModified);\n      const insertRowsBefore$1 = execute(insertRowsBefore, always, noop, structureModified);\n      const insertRowsAfter$1 = execute(insertRowsAfter, always, noop, structureModified);\n      const insertColumnsBefore$1 = execute(insertColumnsBefore, always, colMutationOp, structureModified);\n      const insertColumnsAfter$1 = execute(insertColumnsAfter, always, colMutationOp, structureModified);\n      const mergeCells$1 = execute(mergeCells, always, noop, structureModified);\n      const unmergeCells$1 = execute(unmergeCells, always, noop, structureModified);\n      const pasteColsBefore$1 = execute(pasteColsBefore, always, noop, structureModified);\n      const pasteColsAfter$1 = execute(pasteColsAfter, always, noop, structureModified);\n      const pasteRowsBefore$1 = execute(pasteRowsBefore, always, noop, structureModified);\n      const pasteRowsAfter$1 = execute(pasteRowsAfter, always, noop, structureModified);\n      const pasteCells$1 = execute(pasteCells, always, noop, styleAndStructureModified);\n      const makeCellsHeader$1 = execute(makeCellsHeader, always, noop, structureModified);\n      const unmakeCellsHeader$1 = execute(unmakeCellsHeader, always, noop, structureModified);\n      const makeColumnsHeader$1 = execute(makeColumnsHeader, always, noop, structureModified);\n      const unmakeColumnsHeader$1 = execute(unmakeColumnsHeader, always, noop, structureModified);\n      const makeRowsHeader$1 = execute(makeRowsHeader, always, noop, structureModified);\n      const makeRowsBody$1 = execute(makeRowsBody, always, noop, structureModified);\n      const makeRowsFooter$1 = execute(makeRowsFooter, always, noop, structureModified);\n      const getTableCellType = getCellsType;\n      const getTableColType = getColumnsType;\n      const getTableRowType = getRowsType;\n      return {\n        deleteRow,\n        deleteColumn,\n        insertRowsBefore: insertRowsBefore$1,\n        insertRowsAfter: insertRowsAfter$1,\n        insertColumnsBefore: insertColumnsBefore$1,\n        insertColumnsAfter: insertColumnsAfter$1,\n        mergeCells: mergeCells$1,\n        unmergeCells: unmergeCells$1,\n        pasteColsBefore: pasteColsBefore$1,\n        pasteColsAfter: pasteColsAfter$1,\n        pasteRowsBefore: pasteRowsBefore$1,\n        pasteRowsAfter: pasteRowsAfter$1,\n        pasteCells: pasteCells$1,\n        makeCellsHeader: makeCellsHeader$1,\n        unmakeCellsHeader: unmakeCellsHeader$1,\n        makeColumnsHeader: makeColumnsHeader$1,\n        unmakeColumnsHeader: unmakeColumnsHeader$1,\n        makeRowsHeader: makeRowsHeader$1,\n        makeRowsBody: makeRowsBody$1,\n        makeRowsFooter: makeRowsFooter$1,\n        getTableRowType,\n        getTableCellType,\n        getTableColType\n      };\n    };\n\n    const constrainSpan = (element, property, value) => {\n      const currentColspan = getAttrValue(element, property, 1);\n      if (value === 1 || currentColspan <= 1) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, Math.min(value, currentColspan));\n      }\n    };\n    const isColInRange = (minColRange, maxColRange) => cell => {\n      const endCol = cell.column + cell.colspan - 1;\n      const startCol = cell.column;\n      return endCol >= minColRange && startCol < maxColRange;\n    };\n    const generateColGroup = (house, minColRange, maxColRange) => {\n      if (Warehouse.hasColumns(house)) {\n        const colsToCopy = filter$2(Warehouse.justColumns(house), isColInRange(minColRange, maxColRange));\n        const copiedCols = map$1(colsToCopy, c => {\n          const clonedCol = deep(c.element);\n          constrainSpan(clonedCol, 'span', maxColRange - minColRange);\n          return clonedCol;\n        });\n        const fakeColgroup = SugarElement.fromTag('colgroup');\n        append(fakeColgroup, copiedCols);\n        return [fakeColgroup];\n      } else {\n        return [];\n      }\n    };\n    const generateRows = (house, minColRange, maxColRange) => map$1(house.all, row => {\n      const cellsToCopy = filter$2(row.cells, isColInRange(minColRange, maxColRange));\n      const copiedCells = map$1(cellsToCopy, cell => {\n        const clonedCell = deep(cell.element);\n        constrainSpan(clonedCell, 'colspan', maxColRange - minColRange);\n        return clonedCell;\n      });\n      const fakeTR = SugarElement.fromTag('tr');\n      append(fakeTR, copiedCells);\n      return fakeTR;\n    });\n    const copyCols = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onUnlockedCells(house, target);\n      return details.map(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minColRange = selectedCells[0].column;\n        const maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        const fakeColGroups = generateColGroup(house, minColRange, maxColRange);\n        const fakeRows = generateRows(house, minColRange, maxColRange);\n        return [\n          ...fakeColGroups,\n          ...fakeRows\n        ];\n      });\n    };\n\n    const copyRows = (table, target, generators) => {\n      const warehouse = Warehouse.fromTable(table);\n      const details = onCells(warehouse, target);\n      return details.bind(selectedCells => {\n        const grid = toGrid(warehouse, generators, false);\n        const rows = extractGridDetails(grid).rows;\n        const slicedGrid = rows.slice(selectedCells[0].row, selectedCells[selectedCells.length - 1].row + selectedCells[selectedCells.length - 1].rowspan);\n        const filteredGrid = bind$2(slicedGrid, row => {\n          const newCells = filter$2(row.cells, cell => !cell.isLocked);\n          return newCells.length > 0 ? [{\n              ...row,\n              cells: newCells\n            }] : [];\n        });\n        const slicedDetails = toDetailList(filteredGrid);\n        return someIf(slicedDetails.length > 0, slicedDetails);\n      }).map(slicedDetails => copy(slicedDetails));\n    };\n\n    const adt$5 = Adt.generate([\n      { invalid: ['raw'] },\n      { pixels: ['value'] },\n      { percent: ['value'] }\n    ]);\n    const validateFor = (suffix, type, value) => {\n      const rawAmount = value.substring(0, value.length - suffix.length);\n      const amount = parseFloat(rawAmount);\n      return rawAmount === amount.toString() ? type(amount) : adt$5.invalid(value);\n    };\n    const from = value => {\n      if (endsWith(value, '%')) {\n        return validateFor('%', adt$5.percent, value);\n      }\n      if (endsWith(value, 'px')) {\n        return validateFor('px', adt$5.pixels, value);\n      }\n      return adt$5.invalid(value);\n    };\n    const Size = {\n      ...adt$5,\n      from\n    };\n\n    const redistributeToPercent = (widths, totalWidth) => {\n      return map$1(widths, w => {\n        const colType = Size.from(w);\n        return colType.fold(() => {\n          return w;\n        }, px => {\n          const ratio = px / totalWidth * 100;\n          return ratio + '%';\n        }, pc => {\n          return pc + '%';\n        });\n      });\n    };\n    const redistributeToPx = (widths, totalWidth, newTotalWidth) => {\n      const scale = newTotalWidth / totalWidth;\n      return map$1(widths, w => {\n        const colType = Size.from(w);\n        return colType.fold(() => {\n          return w;\n        }, px => {\n          return px * scale + 'px';\n        }, pc => {\n          return pc / 100 * newTotalWidth + 'px';\n        });\n      });\n    };\n    const redistributeEmpty = (newWidthType, columns) => {\n      const f = newWidthType.fold(() => constant(''), pixels => {\n        const num = pixels / columns;\n        return constant(num + 'px');\n      }, () => {\n        const num = 100 / columns;\n        return constant(num + '%');\n      });\n      return range$1(columns, f);\n    };\n    const redistributeValues = (newWidthType, widths, totalWidth) => {\n      return newWidthType.fold(() => {\n        return widths;\n      }, px => {\n        return redistributeToPx(widths, totalWidth, px);\n      }, _pc => {\n        return redistributeToPercent(widths, totalWidth);\n      });\n    };\n    const redistribute$1 = (widths, totalWidth, newWidth) => {\n      const newType = Size.from(newWidth);\n      const floats = forall(widths, s => {\n        return s === '0px';\n      }) ? redistributeEmpty(newType, widths.length) : redistributeValues(newType, widths, totalWidth);\n      return normalize(floats);\n    };\n    const sum = (values, fallback) => {\n      if (values.length === 0) {\n        return fallback;\n      }\n      return foldr(values, (rest, v) => {\n        return Size.from(v).fold(constant(0), identity, identity) + rest;\n      }, 0);\n    };\n    const roundDown = (num, unit) => {\n      const floored = Math.floor(num);\n      return {\n        value: floored + unit,\n        remainder: num - floored\n      };\n    };\n    const add$3 = (value, amount) => {\n      return Size.from(value).fold(constant(value), px => {\n        return px + amount + 'px';\n      }, pc => {\n        return pc + amount + '%';\n      });\n    };\n    const normalize = values => {\n      if (values.length === 0) {\n        return values;\n      }\n      const scan = foldr(values, (rest, value) => {\n        const info = Size.from(value).fold(() => ({\n          value,\n          remainder: 0\n        }), num => roundDown(num, 'px'), num => ({\n          value: num + '%',\n          remainder: 0\n        }));\n        return {\n          output: [info.value].concat(rest.output),\n          remainder: rest.remainder + info.remainder\n        };\n      }, {\n        output: [],\n        remainder: 0\n      });\n      const r = scan.output;\n      return r.slice(0, r.length - 1).concat([add$3(r[r.length - 1], Math.round(scan.remainder))]);\n    };\n    const validate = Size.from;\n\n    const redistributeToW = (newWidths, cells, unit) => {\n      each$2(cells, cell => {\n        const widths = newWidths.slice(cell.column, cell.colspan + cell.column);\n        const w = sum(widths, minWidth());\n        set$1(cell.element, 'width', w + unit);\n      });\n    };\n    const redistributeToColumns = (newWidths, columns, unit) => {\n      each$2(columns, (column, index) => {\n        const width = sum([newWidths[index]], minWidth());\n        set$1(column.element, 'width', width + unit);\n      });\n    };\n    const redistributeToH = (newHeights, rows, cells, unit) => {\n      each$2(cells, cell => {\n        const heights = newHeights.slice(cell.row, cell.rowspan + cell.row);\n        const h = sum(heights, minHeight());\n        set$1(cell.element, 'height', h + unit);\n      });\n      each$2(rows, (row, i) => {\n        set$1(row.element, 'height', newHeights[i]);\n      });\n    };\n    const getUnit = newSize => {\n      return validate(newSize).fold(constant('px'), constant('px'), constant('%'));\n    };\n    const redistribute = (table, optWidth, optHeight) => {\n      const warehouse = Warehouse.fromTable(table);\n      const rows = warehouse.all;\n      const cells = Warehouse.justCells(warehouse);\n      const columns = Warehouse.justColumns(warehouse);\n      optWidth.each(newWidth => {\n        const widthUnit = getUnit(newWidth);\n        const totalWidth = get$9(table);\n        const oldWidths = getRawWidths(warehouse, table);\n        const nuWidths = redistribute$1(oldWidths, totalWidth, newWidth);\n        if (Warehouse.hasColumns(warehouse)) {\n          redistributeToColumns(nuWidths, columns, widthUnit);\n        } else {\n          redistributeToW(nuWidths, cells, widthUnit);\n        }\n        set$1(table, 'width', newWidth);\n      });\n      optHeight.each(newHeight => {\n        const hUnit = getUnit(newHeight);\n        const totalHeight = get$8(table);\n        const oldHeights = getRawHeights(warehouse, table, height);\n        const nuHeights = redistribute$1(oldHeights, totalHeight, newHeight);\n        redistributeToH(nuHeights, rows, cells, hUnit);\n        set$1(table, 'height', newHeight);\n      });\n    };\n    const isPercentSizing = isPercentSizing$1;\n    const isPixelSizing = isPixelSizing$1;\n    const isNoneSizing = isNoneSizing$1;\n\n    const cleanupLegacyAttributes = element => {\n      remove$7(element, 'width');\n    };\n    const convertToPercentSize = table => {\n      const newWidth = getPercentTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    const convertToPixelSize = table => {\n      const newWidth = getPixelTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    const convertToNoneSize = table => {\n      remove$5(table, 'width');\n      const columns = columns$1(table);\n      const rowElements = columns.length > 0 ? columns : cells$1(table);\n      each$2(rowElements, cell => {\n        remove$5(cell, 'width');\n        cleanupLegacyAttributes(cell);\n      });\n      cleanupLegacyAttributes(table);\n    };\n\n    const DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      colGroups: false\n    };\n    const tableHeaderCell = () => SugarElement.fromTag('th');\n    const tableCell = () => SugarElement.fromTag('td');\n    const tableColumn = () => SugarElement.fromTag('col');\n    const createRow = (columns, rowHeaders, columnHeaders, rowIndex) => {\n      const tr = SugarElement.fromTag('tr');\n      for (let j = 0; j < columns; j++) {\n        const td = rowIndex < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n        if (j < columnHeaders) {\n          set$2(td, 'scope', 'row');\n        }\n        if (rowIndex < rowHeaders) {\n          set$2(td, 'scope', 'col');\n        }\n        append$1(td, SugarElement.fromTag('br'));\n        append$1(tr, td);\n      }\n      return tr;\n    };\n    const createGroupRow = columns => {\n      const columnGroup = SugarElement.fromTag('colgroup');\n      range$1(columns, () => append$1(columnGroup, tableColumn()));\n      return columnGroup;\n    };\n    const createRows = (rows, columns, rowHeaders, columnHeaders) => range$1(rows, r => createRow(columns, rowHeaders, columnHeaders, r));\n    const render = (rows, columns, rowHeaders, columnHeaders, headerType, renderOpts = DefaultRenderOptions) => {\n      const table = SugarElement.fromTag('table');\n      const rowHeadersGoInThead = headerType !== 'cells';\n      setAll(table, renderOpts.styles);\n      setAll$1(table, renderOpts.attributes);\n      if (renderOpts.colGroups) {\n        append$1(table, createGroupRow(columns));\n      }\n      const actualRowHeaders = Math.min(rows, rowHeaders);\n      if (rowHeadersGoInThead && rowHeaders > 0) {\n        const thead = SugarElement.fromTag('thead');\n        append$1(table, thead);\n        const theadRowHeaders = headerType === 'sectionCells' ? actualRowHeaders : 0;\n        const theadRows = createRows(rowHeaders, columns, theadRowHeaders, columnHeaders);\n        append(thead, theadRows);\n      }\n      const tbody = SugarElement.fromTag('tbody');\n      append$1(table, tbody);\n      const numRows = rowHeadersGoInThead ? rows - actualRowHeaders : rows;\n      const numRowHeaders = rowHeadersGoInThead ? 0 : rowHeaders;\n      const tbodyRows = createRows(numRows, columns, numRowHeaders, columnHeaders);\n      append(tbody, tbodyRows);\n      return table;\n    };\n\n    const get$4 = element => element.dom.innerHTML;\n    const getOuter = element => {\n      const container = SugarElement.fromTag('div');\n      const clone = SugarElement.fromDom(element.dom.cloneNode(true));\n      append$1(container, clone);\n      return get$4(container);\n    };\n\n    const placeCaretInCell = (editor, cell) => {\n      editor.selection.select(cell.dom, true);\n      editor.selection.collapse(true);\n    };\n    const selectFirstCellInTable = (editor, tableElm) => {\n      descendant(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    const fireEvents = (editor, table) => {\n      each$2(descendants(table, 'tr'), row => {\n        fireNewRow(editor, row.dom);\n        each$2(descendants(row, 'th,td'), cell => {\n          fireNewCell(editor, cell.dom);\n        });\n      });\n    };\n    const isPercentage = width => isString(width) && width.indexOf('%') !== -1;\n    const insert = (editor, columns, rows, colHeaders, rowHeaders) => {\n      const defaultStyles = getTableDefaultStyles(editor);\n      const options = {\n        styles: defaultStyles,\n        attributes: getTableDefaultAttributes(editor),\n        colGroups: tableUseColumnGroup(editor)\n      };\n      editor.undoManager.ignore(() => {\n        const table = render(rows, columns, rowHeaders, colHeaders, getTableHeaderType(editor), options);\n        set$2(table, 'data-mce-id', '__mce');\n        const html = getOuter(table);\n        editor.insertContent(html);\n        editor.addVisual();\n      });\n      return descendant(getBody(editor), 'table[data-mce-id=\"__mce\"]').map(table => {\n        if (isTablePixelsForced(editor)) {\n          convertToPixelSize(table);\n        } else if (isTableResponsiveForced(editor)) {\n          convertToNoneSize(table);\n        } else if (isTablePercentagesForced(editor) || isPercentage(defaultStyles.width)) {\n          convertToPercentSize(table);\n        }\n        removeDataStyle(table);\n        remove$7(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom;\n      }).getOrNull();\n    };\n    const insertTable = (editor, rows, columns, options = {}) => {\n      const checkInput = val => isNumber(val) && val > 0;\n      if (checkInput(rows) && checkInput(columns)) {\n        const headerRows = options.headerRows || 0;\n        const headerColumns = options.headerColumns || 0;\n        return insert(editor, columns, rows, headerColumns, headerRows);\n      } else {\n        console.error('Invalid values for mceInsertTable - rows and columns values are required to insert a table.');\n        return null;\n      }\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.FakeClipboard');\n\n    const tableTypeBase = 'x-tinymce/dom-table-';\n    const tableTypeRow = tableTypeBase + 'rows';\n    const tableTypeColumn = tableTypeBase + 'columns';\n    const setData = items => {\n      const fakeClipboardItem = global.FakeClipboardItem(items);\n      global.write([fakeClipboardItem]);\n    };\n    const getData = type => {\n      var _a;\n      const items = (_a = global.read()) !== null && _a !== void 0 ? _a : [];\n      return findMap(items, item => Optional.from(item.getType(type)));\n    };\n    const clearData = type => {\n      if (getData(type).isSome()) {\n        global.clear();\n      }\n    };\n    const setRows = rowsOpt => {\n      rowsOpt.fold(clearRows, rows => setData({ [tableTypeRow]: rows }));\n    };\n    const getRows = () => getData(tableTypeRow);\n    const clearRows = () => clearData(tableTypeRow);\n    const setColumns = columnsOpt => {\n      columnsOpt.fold(clearColumns, columns => setData({ [tableTypeColumn]: columns }));\n    };\n    const getColumns = () => getData(tableTypeColumn);\n    const clearColumns = () => clearData(tableTypeColumn);\n\n    const getSelectionStartCellOrCaption = editor => getSelectionCellOrCaption(getSelectionStart(editor), getIsRoot(editor));\n    const getSelectionStartCell = editor => getSelectionCell(getSelectionStart(editor), getIsRoot(editor));\n    const registerCommands = (editor, actions) => {\n      const isRoot = getIsRoot(editor);\n      const eraseTable = () => getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n        table(cellOrCaption, isRoot).filter(not(isRoot)).each(table => {\n          const cursor = SugarElement.fromText('');\n          after$5(table, cursor);\n          remove$6(table);\n          if (editor.dom.isEmpty(editor.getBody())) {\n            editor.setContent('');\n            editor.selection.setCursorLocation();\n          } else {\n            const rng = editor.dom.createRng();\n            rng.setStart(cursor.dom, 0);\n            rng.setEnd(cursor.dom, 0);\n            editor.selection.setRng(rng);\n            editor.nodeChanged();\n          }\n        });\n      });\n      const setSizingMode = sizing => getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n        const isForcedSizing = isTableResponsiveForced(editor) || isTablePixelsForced(editor) || isTablePercentagesForced(editor);\n        if (!isForcedSizing) {\n          table(cellOrCaption, isRoot).each(table => {\n            if (sizing === 'relative' && !isPercentSizing(table)) {\n              convertToPercentSize(table);\n            } else if (sizing === 'fixed' && !isPixelSizing(table)) {\n              convertToPixelSize(table);\n            } else if (sizing === 'responsive' && !isNoneSizing(table)) {\n              convertToNoneSize(table);\n            }\n            removeDataStyle(table);\n            fireTableModified(editor, table.dom, structureModified);\n          });\n        }\n      });\n      const getTableFromCell = cell => table(cell, isRoot);\n      const performActionOnSelection = action => getSelectionStartCell(editor).bind(cell => getTableFromCell(cell).map(table => action(table, cell)));\n      const toggleTableClass = (_ui, clazz) => {\n        performActionOnSelection(table => {\n          editor.formatter.toggle('tableclass', { value: clazz }, table.dom);\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      const toggleTableCellClass = (_ui, clazz) => {\n        performActionOnSelection(table => {\n          const selectedCells = getCellsFromSelection(editor);\n          const allHaveClass = forall(selectedCells, cell => editor.formatter.match('tablecellclass', { value: clazz }, cell.dom));\n          const formatterAction = allHaveClass ? editor.formatter.remove : editor.formatter.apply;\n          each$2(selectedCells, cell => formatterAction('tablecellclass', { value: clazz }, cell.dom));\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      const toggleCaption = () => {\n        getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n          table(cellOrCaption, isRoot).each(table => {\n            child(table, 'caption').fold(() => {\n              const caption = SugarElement.fromTag('caption');\n              append$1(caption, SugarElement.fromText('Caption'));\n              appendAt(table, caption, 0);\n              editor.selection.setCursorLocation(caption.dom, 0);\n            }, caption => {\n              if (isTag('caption')(cellOrCaption)) {\n                one('td', table).each(td => editor.selection.setCursorLocation(td.dom, 0));\n              }\n              remove$6(caption);\n            });\n            fireTableModified(editor, table.dom, structureModified);\n          });\n        });\n      };\n      const postExecute = _data => {\n        editor.focus();\n      };\n      const actOnSelection = (execute, noEvents = false) => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        execute(table, targets, noEvents).each(postExecute);\n      });\n      const copyRowSelection = () => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        const generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), Optional.none());\n        return copyRows(table, targets, generators);\n      });\n      const copyColSelection = () => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        return copyCols(table, targets);\n      });\n      const pasteOnSelection = (execute, getRows) => getRows().each(rows => {\n        const clonedRows = map$1(rows, row => deep(row));\n        performActionOnSelection((table, startCell) => {\n          const generators = paste$1(SugarElement.fromDom(editor.getDoc()));\n          const targets = pasteRows(getCellsFromSelection(editor), startCell, clonedRows, generators);\n          execute(table, targets).each(postExecute);\n        });\n      });\n      const actOnType = getAction => (_ui, args) => get$c(args, 'type').each(type => {\n        actOnSelection(getAction(type), args.no_events);\n      });\n      each$1({\n        mceTableSplitCells: () => actOnSelection(actions.unmergeCells),\n        mceTableMergeCells: () => actOnSelection(actions.mergeCells),\n        mceTableInsertRowBefore: () => actOnSelection(actions.insertRowsBefore),\n        mceTableInsertRowAfter: () => actOnSelection(actions.insertRowsAfter),\n        mceTableInsertColBefore: () => actOnSelection(actions.insertColumnsBefore),\n        mceTableInsertColAfter: () => actOnSelection(actions.insertColumnsAfter),\n        mceTableDeleteCol: () => actOnSelection(actions.deleteColumn),\n        mceTableDeleteRow: () => actOnSelection(actions.deleteRow),\n        mceTableCutCol: () => copyColSelection().each(selection => {\n          setColumns(selection);\n          actOnSelection(actions.deleteColumn);\n        }),\n        mceTableCutRow: () => copyRowSelection().each(selection => {\n          setRows(selection);\n          actOnSelection(actions.deleteRow);\n        }),\n        mceTableCopyCol: () => copyColSelection().each(selection => setColumns(selection)),\n        mceTableCopyRow: () => copyRowSelection().each(selection => setRows(selection)),\n        mceTablePasteColBefore: () => pasteOnSelection(actions.pasteColsBefore, getColumns),\n        mceTablePasteColAfter: () => pasteOnSelection(actions.pasteColsAfter, getColumns),\n        mceTablePasteRowBefore: () => pasteOnSelection(actions.pasteRowsBefore, getRows),\n        mceTablePasteRowAfter: () => pasteOnSelection(actions.pasteRowsAfter, getRows),\n        mceTableDelete: eraseTable,\n        mceTableCellToggleClass: toggleTableCellClass,\n        mceTableToggleClass: toggleTableClass,\n        mceTableToggleCaption: toggleCaption,\n        mceTableSizingMode: (_ui, sizing) => setSizingMode(sizing),\n        mceTableCellType: actOnType(type => type === 'th' ? actions.makeCellsHeader : actions.unmakeCellsHeader),\n        mceTableColType: actOnType(type => type === 'th' ? actions.makeColumnsHeader : actions.unmakeColumnsHeader),\n        mceTableRowType: actOnType(type => {\n          switch (type) {\n          case 'header':\n            return actions.makeRowsHeader;\n          case 'footer':\n            return actions.makeRowsFooter;\n          default:\n            return actions.makeRowsBody;\n          }\n        })\n      }, (func, name) => editor.addCommand(name, func));\n      editor.addCommand('mceInsertTable', (_ui, args) => {\n        insertTable(editor, args.rows, args.columns, args.options);\n      });\n      editor.addCommand('mceTableApplyCellStyle', (_ui, args) => {\n        const getFormatName = style => 'tablecell' + style.toLowerCase().replace('-', '');\n        if (!isObject(args)) {\n          return;\n        }\n        const cells = getCellsFromSelection(editor);\n        if (cells.length === 0) {\n          return;\n        }\n        const validArgs = filter$1(args, (value, style) => editor.formatter.has(getFormatName(style)) && isString(value));\n        if (isEmpty(validArgs)) {\n          return;\n        }\n        each$1(validArgs, (value, style) => {\n          const formatName = getFormatName(style);\n          each$2(cells, cell => {\n            if (value === '') {\n              editor.formatter.remove(formatName, { value: null }, cell.dom, true);\n            } else {\n              editor.formatter.apply(formatName, { value }, cell.dom);\n            }\n          });\n        });\n        getTableFromCell(cells[0]).each(table => fireTableModified(editor, table.dom, styleModified));\n      });\n    };\n\n    const registerQueryCommands = (editor, actions) => {\n      const isRoot = getIsRoot(editor);\n      const lookupOnSelection = action => getSelectionCell(getSelectionStart(editor)).bind(cell => table(cell, isRoot).map(table => {\n        const targets = forMenu(getCellsFromSelection(editor), table, cell);\n        return action(table, targets);\n      })).getOr('');\n      each$1({\n        mceTableRowType: () => lookupOnSelection(actions.getTableRowType),\n        mceTableCellType: () => lookupOnSelection(actions.getTableCellType),\n        mceTableColType: () => lookupOnSelection(actions.getTableColType)\n      }, (func, name) => editor.addQueryValueHandler(name, func));\n    };\n\n    const adt$4 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    const cata$1 = (subject, onBefore, onOn, onAfter) => subject.fold(onBefore, onOn, onAfter);\n    const getStart$1 = situ => situ.fold(identity, identity, identity);\n    const before$2 = adt$4.before;\n    const on = adt$4.on;\n    const after$3 = adt$4.after;\n    const Situ = {\n      before: before$2,\n      on,\n      after: after$3,\n      cata: cata$1,\n      getStart: getStart$1\n    };\n\n    const create$4 = (selection, kill) => ({\n      selection,\n      kill\n    });\n    const Response = { create: create$4 };\n\n    const selectNode = (win, element) => {\n      const rng = win.document.createRange();\n      rng.selectNode(element.dom);\n      return rng;\n    };\n    const selectNodeContents = (win, element) => {\n      const rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    const selectNodeContentsUsing = (rng, element) => rng.selectNodeContents(element.dom);\n    const setStart = (rng, situ) => {\n      situ.fold(e => {\n        rng.setStartBefore(e.dom);\n      }, (e, o) => {\n        rng.setStart(e.dom, o);\n      }, e => {\n        rng.setStartAfter(e.dom);\n      });\n    };\n    const setFinish = (rng, situ) => {\n      situ.fold(e => {\n        rng.setEndBefore(e.dom);\n      }, (e, o) => {\n        rng.setEnd(e.dom, o);\n      }, e => {\n        rng.setEndAfter(e.dom);\n      });\n    };\n    const relativeToNative = (win, startSitu, finishSitu) => {\n      const range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    const exactToNative = (win, start, soffset, finish, foffset) => {\n      const rng = win.document.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const toRect = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n    const getFirstRect$1 = rng => {\n      const rects = rng.getClientRects();\n      const rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    const adt$3 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const fromRange = (win, type, range) => type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    const getRanges = (win, selection) => selection.match({\n      domRange: rng => {\n        return {\n          ltr: constant(rng),\n          rtl: Optional.none\n        };\n      },\n      relative: (startSitu, finishSitu) => {\n        return {\n          ltr: cached(() => relativeToNative(win, startSitu, finishSitu)),\n          rtl: cached(() => Optional.some(relativeToNative(win, finishSitu, startSitu)))\n        };\n      },\n      exact: (start, soffset, finish, foffset) => {\n        return {\n          ltr: cached(() => exactToNative(win, start, soffset, finish, foffset)),\n          rtl: cached(() => Optional.some(exactToNative(win, finish, foffset, start, soffset)))\n        };\n      }\n    });\n    const doDiagnose = (win, ranges) => {\n      const rng = ranges.ltr();\n      if (rng.collapsed) {\n        const reversed = ranges.rtl().filter(rev => rev.collapsed === false);\n        return reversed.map(rev => adt$3.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset)).getOrThunk(() => fromRange(win, adt$3.ltr, rng));\n      } else {\n        return fromRange(win, adt$3.ltr, rng);\n      }\n    };\n    const diagnose = (win, selection) => {\n      const ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    const asLtrRange = (win, selection) => {\n      const diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(start.dom, soffset);\n          rng.setEnd(finish.dom, foffset);\n          return rng;\n        },\n        rtl: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(finish.dom, foffset);\n          rng.setEnd(start.dom, soffset);\n          return rng;\n        }\n      });\n    };\n    adt$3.ltr;\n    adt$3.rtl;\n\n    const create$3 = (start, soffset, finish, foffset) => ({\n      start,\n      soffset,\n      finish,\n      foffset\n    });\n    const SimRange = { create: create$3 };\n\n    const create$2 = (start, soffset, finish, foffset) => {\n      return {\n        start: Situ.on(start, soffset),\n        finish: Situ.on(finish, foffset)\n      };\n    };\n    const Situs = { create: create$2 };\n\n    const convertToRange = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset);\n    };\n    const makeSitus = Situs.create;\n\n    const sync = (container, isRoot, start, soffset, finish, foffset, selectRange) => {\n      if (!(eq$1(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(s => {\n          return closest$1(finish, 'td,th', isRoot).bind(f => {\n            return detect(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const detect = (container, isRoot, start, finish, selectRange) => {\n      if (!eq$1(start, finish)) {\n        return identify(start, finish, isRoot).bind(cellSel => {\n          const boxes = cellSel.boxes.getOr([]);\n          if (boxes.length > 1) {\n            selectRange(container, boxes, cellSel.start, cellSel.finish);\n            return Optional.some(Response.create(Optional.some(makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Optional.none();\n          }\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const update = (rows, columns, container, selected, annotations) => {\n      const updateSelection = newSels => {\n        annotations.clearBeforeUpdate(container);\n        annotations.selectRange(container, newSels.boxes, newSels.start, newSels.finish);\n        return newSels.boxes;\n      };\n      return shiftSelection(selected, rows, columns, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(updateSelection);\n    };\n\n    const traverse = (item, mode) => ({\n      item,\n      mode\n    });\n    const backtrack = (universe, item, _direction, transition = sidestep) => {\n      return universe.property().parent(item).map(p => {\n        return traverse(p, transition);\n      });\n    };\n    const sidestep = (universe, item, direction, transition = advance) => {\n      return direction.sibling(universe, item).map(p => {\n        return traverse(p, transition);\n      });\n    };\n    const advance = (universe, item, direction, transition = advance) => {\n      const children = universe.property().children(item);\n      const result = direction.first(children);\n      return result.map(r => {\n        return traverse(r, transition);\n      });\n    };\n    const successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Optional.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Optional.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Optional.some(sidestep)\n      }\n    ];\n    const go = (universe, item, mode, direction, rules = successors) => {\n      const ruleOpt = find$1(rules, succ => {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(rule => {\n        return rule.current(universe, item, direction, rule.next).orThunk(() => {\n          return rule.fallback.bind(fb => {\n            return go(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    const left$1 = () => {\n      const sibling = (universe, item) => {\n        return universe.query().prevSibling(item);\n      };\n      const first = children => {\n        return children.length > 0 ? Optional.some(children[children.length - 1]) : Optional.none();\n      };\n      return {\n        sibling,\n        first\n      };\n    };\n    const right$1 = () => {\n      const sibling = (universe, item) => {\n        return universe.query().nextSibling(item);\n      };\n      const first = children => {\n        return children.length > 0 ? Optional.some(children[0]) : Optional.none();\n      };\n      return {\n        sibling,\n        first\n      };\n    };\n    const Walkers = {\n      left: left$1,\n      right: right$1\n    };\n\n    const hone = (universe, item, predicate, mode, direction, isRoot) => {\n      const next = go(universe, item, mode, direction);\n      return next.bind(n => {\n        if (isRoot(n.item)) {\n          return Optional.none();\n        } else {\n          return predicate(n.item) ? Optional.some(n.item) : hone(universe, n.item, predicate, n.mode, direction, isRoot);\n        }\n      });\n    };\n    const left = (universe, item, predicate, isRoot) => {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    const right = (universe, item, predicate, isRoot) => {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    const isLeaf = universe => element => universe.property().children(element).length === 0;\n    const before$1 = (universe, item, isRoot) => {\n      return seekLeft$1(universe, item, isLeaf(universe), isRoot);\n    };\n    const after$2 = (universe, item, isRoot) => {\n      return seekRight$1(universe, item, isLeaf(universe), isRoot);\n    };\n    const seekLeft$1 = left;\n    const seekRight$1 = right;\n\n    const universe = DomUniverse();\n    const before = (element, isRoot) => {\n      return before$1(universe, element, isRoot);\n    };\n    const after$1 = (element, isRoot) => {\n      return after$2(universe, element, isRoot);\n    };\n    const seekLeft = (element, predicate, isRoot) => {\n      return seekLeft$1(universe, element, predicate, isRoot);\n    };\n    const seekRight = (element, predicate, isRoot) => {\n      return seekRight$1(universe, element, predicate, isRoot);\n    };\n\n    const ancestor = (scope, predicate, isRoot) => ancestor$2(scope, predicate, isRoot).isSome();\n\n    const adt$2 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    const isOverlapping = (bridge, before, after) => {\n      const beforeBounds = bridge.getRect(before);\n      const afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    const isRow = elem => {\n      return closest$1(elem, 'tr');\n    };\n    const verify = (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) => {\n      return closest$1(after, 'td,th', isRoot).bind(afterCell => {\n        return closest$1(before, 'td,th', isRoot).map(beforeCell => {\n          if (!eq$1(afterCell, beforeCell)) {\n            return sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(() => {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$2.success() : failure(beforeCell);\n            }, _sharedRow => {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq$1(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$2.none('in same cell');\n          }\n        });\n      }).getOr(adt$2.none('default'));\n    };\n    const cata = (subject, onNone, onSuccess, onFailedUp, onFailedDown) => {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    const BeforeAfter = {\n      ...adt$2,\n      verify,\n      cata\n    };\n\n    const inParent = (parent, children, element, index) => ({\n      parent,\n      children,\n      element,\n      index\n    });\n    const indexInParent = element => parent(element).bind(parent => {\n      const children = children$2(parent);\n      return indexOf(children, element).map(index => inParent(parent, children, element, index));\n    });\n    const indexOf = (elements, element) => findIndex(elements, curry(eq$1, element));\n\n    const isBr = isTag('br');\n    const gatherer = (cand, gather, isRoot) => {\n      return gather(cand, isRoot).bind(target => {\n        return isText(target) && get$6(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Optional.some(target);\n      });\n    };\n    const handleBr = (isRoot, element, direction) => {\n      return direction.traverse(element).orThunk(() => {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    const findBr = (element, offset) => {\n      return child$2(element, offset).filter(isBr).orThunk(() => {\n        return child$2(element, offset - 1).filter(isBr);\n      });\n    };\n    const handleParent = (isRoot, element, offset, direction) => {\n      return findBr(element, offset).bind(br => {\n        return direction.traverse(br).fold(() => {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, adjacent => {\n          return indexInParent(adjacent).map(info => {\n            return Situ.on(info.parent, info.index);\n          });\n        });\n      });\n    };\n    const tryBr = (isRoot, element, offset, direction) => {\n      const target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(tgt => {\n        return {\n          start: tgt,\n          finish: tgt\n        };\n      });\n    };\n    const process = analysis => {\n      return BeforeAfter.cata(analysis, _message => {\n        return Optional.none();\n      }, () => {\n        return Optional.none();\n      }, cell => {\n        return Optional.some(point(cell, 0));\n      }, cell => {\n        return Optional.some(point(cell, getEnd(cell)));\n      });\n    };\n\n    const moveDown = (caret, amount) => {\n      return {\n        left: caret.left,\n        top: caret.top + amount,\n        right: caret.right,\n        bottom: caret.bottom + amount\n      };\n    };\n    const moveUp = (caret, amount) => {\n      return {\n        left: caret.left,\n        top: caret.top - amount,\n        right: caret.right,\n        bottom: caret.bottom - amount\n      };\n    };\n    const translate = (caret, xDelta, yDelta) => {\n      return {\n        left: caret.left + xDelta,\n        top: caret.top + yDelta,\n        right: caret.right + xDelta,\n        bottom: caret.bottom + yDelta\n      };\n    };\n    const getTop = caret => {\n      return caret.top;\n    };\n    const getBottom = caret => {\n      return caret.bottom;\n    };\n\n    const getPartialBox = (bridge, element, offset) => {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Optional.none();\n    };\n    const toCaret = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom\n    });\n    const getElemBox = (bridge, element) => {\n      return Optional.some(bridge.getRect(element));\n    };\n    const getBoxAt = (bridge, element, offset) => {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n    const getEntireBox = (bridge, element) => {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n\n    const JUMP_SIZE = 5;\n    const NUM_RETRIES = 100;\n    const adt$1 = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    const isOutside = (caret, box) => {\n      return caret.left < box.left || Math.abs(box.right - caret.left) < 1 || caret.left > box.right;\n    };\n    const inOutsideBlock = (bridge, element, caret) => {\n      return closest$2(element, isBlock).fold(never, cell => {\n        return getEntireBox(bridge, cell).exists(box => {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    const adjustDown = (bridge, element, guessBox, original, caret) => {\n      const lowerCaret = moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom - original.bottom) < 1) {\n        return adt$1.retry(lowerCaret);\n      } else if (guessBox.top > caret.bottom) {\n        return adt$1.retry(lowerCaret);\n      } else if (guessBox.top === caret.bottom) {\n        return adt$1.retry(moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$1.retry(translate(lowerCaret, JUMP_SIZE, 0)) : adt$1.none();\n      }\n    };\n    const adjustUp = (bridge, element, guessBox, original, caret) => {\n      const higherCaret = moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top - original.top) < 1) {\n        return adt$1.retry(higherCaret);\n      } else if (guessBox.bottom < caret.top) {\n        return adt$1.retry(higherCaret);\n      } else if (guessBox.bottom === caret.top) {\n        return adt$1.retry(moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$1.retry(translate(higherCaret, JUMP_SIZE, 0)) : adt$1.none();\n      }\n    };\n    const upMovement = {\n      point: getTop,\n      adjuster: adjustUp,\n      move: moveUp,\n      gather: before\n    };\n    const downMovement = {\n      point: getBottom,\n      adjuster: adjustDown,\n      move: moveDown,\n      gather: after$1\n    };\n    const isAtTable = (bridge, x, y) => {\n      return bridge.elementFromPoint(x, y).filter(elm => {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    const adjustForTable = (bridge, movement, original, caret, numRetries) => {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    const adjustTil = (bridge, movement, original, caret, numRetries) => {\n      if (numRetries === 0) {\n        return Optional.some(caret);\n      }\n      if (isAtTable(bridge, caret.left, movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left, movement.point(caret)).bind(guess => {\n        return guess.start.fold(Optional.none, element => {\n          return getEntireBox(bridge, element).bind(guessBox => {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Optional.none, newCaret => {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(() => {\n            return Optional.some(caret);\n          });\n        }, Optional.none);\n      });\n    };\n    const checkScroll = (movement, adjusted, bridge) => {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Optional.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Optional.some(-movement.point(adjusted));\n      } else {\n        return Optional.none();\n      }\n    };\n    const retry = (movement, bridge, caret) => {\n      const moved = movement.move(caret, JUMP_SIZE);\n      const adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(() => {\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted));\n      }, delta => {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted) - delta);\n      });\n    };\n    const Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    const MAX_RETRIES = 20;\n    const findSpot = (bridge, isRoot, direction) => {\n      return bridge.getSelection().bind(sel => {\n        return tryBr(isRoot, sel.finish, sel.foffset, direction).fold(() => {\n          return Optional.some(point(sel.finish, sel.foffset));\n        }, brNeighbour => {\n          const range = bridge.fromSitus(brNeighbour);\n          const analysis = BeforeAfter.verify(bridge, sel.finish, sel.foffset, range.finish, range.foffset, direction.failure, isRoot);\n          return process(analysis);\n        });\n      });\n    };\n    const scan = (bridge, isRoot, element, offset, direction, numRetries) => {\n      if (numRetries === 0) {\n        return Optional.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(situs => {\n        const range = bridge.fromSitus(situs);\n        const analysis = BeforeAfter.verify(bridge, element, offset, range.finish, range.foffset, direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, () => {\n          return Optional.none();\n        }, () => {\n          return Optional.some(situs);\n        }, cell => {\n          if (eq$1(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, cell => {\n          if (eq$1(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    const tryAgain = (bridge, element, offset, move, direction) => {\n      return getBoxAt(bridge, element, offset).bind(box => {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    const tryAt = (bridge, direction, box) => {\n      const browser = detect$2().browser;\n      if (browser.isChromium() || browser.isSafari() || browser.isFirefox()) {\n        return direction.retry(bridge, box);\n      } else {\n        return Optional.none();\n      }\n    };\n    const tryCursor = (bridge, isRoot, element, offset, direction) => {\n      return getBoxAt(bridge, element, offset).bind(box => {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    const handle$1 = (bridge, isRoot, direction) => {\n      return findSpot(bridge, isRoot, direction).bind(spot => {\n        return scan(bridge, isRoot, spot.element, spot.offset, direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n\n    const inSameTable = (elem, table) => {\n      return ancestor(elem, e => {\n        return parent(e).exists(p => {\n          return eq$1(p, table);\n        });\n      });\n    };\n    const simulate = (bridge, isRoot, direction, initial, anchor) => {\n      return closest$1(initial, 'td,th', isRoot).bind(start => {\n        return closest$1(start, 'table', isRoot).bind(table => {\n          if (!inSameTable(anchor, table)) {\n            return Optional.none();\n          }\n          return handle$1(bridge, isRoot, direction).bind(range => {\n            return closest$1(range.finish, 'td,th', isRoot).map(finish => {\n              return {\n                start,\n                finish,\n                range\n              };\n            });\n          });\n        });\n      });\n    };\n    const navigate = (bridge, isRoot, direction, initial, anchor, precheck) => {\n      return precheck(initial, isRoot).orThunk(() => {\n        return simulate(bridge, isRoot, direction, initial, anchor).map(info => {\n          const range = info.range;\n          return Response.create(Optional.some(makeSitus(range.start, range.soffset, range.finish, range.foffset)), true);\n        });\n      });\n    };\n    const firstUpCheck = (initial, isRoot) => {\n      return closest$1(initial, 'tr', isRoot).bind(startRow => {\n        return closest$1(startRow, 'table', isRoot).bind(table => {\n          const rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[0])) {\n            return seekLeft(table, element => {\n              return last$1(element).isSome();\n            }, isRoot).map(last => {\n              const lastOffset = getEnd(last);\n              return Response.create(Optional.some(makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    const lastDownCheck = (initial, isRoot) => {\n      return closest$1(initial, 'tr', isRoot).bind(startRow => {\n        return closest$1(startRow, 'table', isRoot).bind(table => {\n          const rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[rows.length - 1])) {\n            return seekRight(table, element => {\n              return first(element).isSome();\n            }, isRoot).map(first => {\n              return Response.create(Optional.some(makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    const select = (bridge, container, isRoot, direction, initial, anchor, selectRange) => {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(info => {\n        return detect(container, isRoot, info.start, info.finish, selectRange);\n      });\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const value = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    const findCell = (target, isRoot) => closest$1(target, 'td,th', isRoot);\n    const MouseSelection = (bridge, container, isRoot, annotations) => {\n      const cursor = value();\n      const clearstate = cursor.clear;\n      const applySelection = event => {\n        cursor.on(start => {\n          annotations.clearBeforeUpdate(container);\n          findCell(event.target, isRoot).each(finish => {\n            identify(start, finish, isRoot).each(cellSel => {\n              const boxes = cellSel.boxes.getOr([]);\n              if (boxes.length === 1) {\n                const singleCell = boxes[0];\n                const isNonEditableCell = getRaw(singleCell) === 'false';\n                const isCellClosestContentEditable = is(closest(event.target), singleCell, eq$1);\n                if (isNonEditableCell && isCellClosestContentEditable) {\n                  annotations.selectRange(container, boxes, singleCell, singleCell);\n                  bridge.selectContents(singleCell);\n                }\n              } else if (boxes.length > 1) {\n                annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      const mousedown = event => {\n        annotations.clear(container);\n        findCell(event.target, isRoot).each(cursor.set);\n      };\n      const mouseover = event => {\n        applySelection(event);\n      };\n      const mouseup = event => {\n        applySelection(event);\n        clearstate();\n      };\n      return {\n        clearstate,\n        mousedown,\n        mouseover,\n        mouseup\n      };\n    };\n\n    const down = {\n      traverse: nextSibling,\n      gather: after$1,\n      relative: Situ.before,\n      retry: Retries.tryDown,\n      failure: BeforeAfter.failedDown\n    };\n    const up = {\n      traverse: prevSibling,\n      gather: before,\n      relative: Situ.before,\n      retry: Retries.tryUp,\n      failure: BeforeAfter.failedUp\n    };\n\n    const isKey = key => {\n      return keycode => {\n        return keycode === key;\n      };\n    };\n    const isUp = isKey(38);\n    const isDown = isKey(40);\n    const isNavigation = keycode => {\n      return keycode >= 37 && keycode <= 40;\n    };\n    const ltr = {\n      isBackward: isKey(37),\n      isForward: isKey(39)\n    };\n    const rtl = {\n      isBackward: isKey(39),\n      isForward: isKey(37)\n    };\n\n    const get$3 = _DOC => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n    const by = (x, y, _DOC) => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const win = doc.defaultView;\n      if (win) {\n        win.scrollBy(x, y);\n      }\n    };\n\n    const adt = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const exactFromRange = simRange => adt.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    const getStart = selection => selection.match({\n      domRange: rng => SugarElement.fromDom(rng.startContainer),\n      relative: (startSitu, _finishSitu) => Situ.getStart(startSitu),\n      exact: (start, _soffset, _finish, _foffset) => start\n    });\n    const domRange = adt.domRange;\n    const relative = adt.relative;\n    const exact = adt.exact;\n    const getWin = selection => {\n      const start = getStart(selection);\n      return defaultView(start);\n    };\n    const range = SimRange.create;\n    const SimSelection = {\n      domRange,\n      relative,\n      exact,\n      exactFromRange,\n      getWin,\n      range\n    };\n\n    const caretPositionFromPoint = (doc, x, y) => {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretPositionFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)).bind(pos => {\n        if (pos.offsetNode === null) {\n          return Optional.none();\n        }\n        const r = doc.dom.createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Optional.some(r);\n      });\n    };\n    const caretRangeFromPoint = (doc, x, y) => {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretRangeFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y));\n    };\n    const availableSearch = (() => {\n      if (document.caretPositionFromPoint) {\n        return caretPositionFromPoint;\n      } else if (document.caretRangeFromPoint) {\n        return caretRangeFromPoint;\n      } else {\n        return Optional.none;\n      }\n    })();\n    const fromPoint = (win, x, y) => {\n      const doc = SugarElement.fromDom(win.document);\n      return availableSearch(doc, x, y).map(rng => SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset));\n    };\n\n    const beforeSpecial = (element, offset) => {\n      const name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains$2([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    const preprocessRelative = (startSitu, finishSitu) => {\n      const start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      const finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return SimSelection.relative(start, finish);\n    };\n    const preprocessExact = (start, soffset, finish, foffset) => {\n      const startSitu = beforeSpecial(start, soffset);\n      const finishSitu = beforeSpecial(finish, foffset);\n      return SimSelection.relative(startSitu, finishSitu);\n    };\n\n    const makeRange = (start, soffset, finish, foffset) => {\n      const doc = owner(start);\n      const rng = doc.dom.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const after = (start, soffset, finish, foffset) => {\n      const r = makeRange(start, soffset, finish, foffset);\n      const same = eq$1(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    const getNativeSelection = win => Optional.from(win.getSelection());\n    const doSetNativeRange = (win, rng) => {\n      getNativeSelection(win).each(selection => {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    const doSetRange = (win, start, soffset, finish, foffset) => {\n      const rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    const setLegacyRtlRange = (win, selection, start, soffset, finish, foffset) => {\n      selection.collapse(start.dom, soffset);\n      selection.extend(finish.dom, foffset);\n    };\n    const setRangeFromRelative = (win, relative) => diagnose(win, relative).match({\n      ltr: (start, soffset, finish, foffset) => {\n        doSetRange(win, start, soffset, finish, foffset);\n      },\n      rtl: (start, soffset, finish, foffset) => {\n        getNativeSelection(win).each(selection => {\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom, soffset, finish.dom, foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        });\n      }\n    });\n    const setExact = (win, start, soffset, finish, foffset) => {\n      const relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    const setRelative = (win, startSitu, finishSitu) => {\n      const relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    const readRange = selection => {\n      if (selection.rangeCount > 0) {\n        const firstRng = selection.getRangeAt(0);\n        const lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Optional.none();\n      }\n    };\n    const doGetExact = selection => {\n      if (selection.anchorNode === null || selection.focusNode === null) {\n        return readRange(selection);\n      } else {\n        const anchor = SugarElement.fromDom(selection.anchorNode);\n        const focus = SugarElement.fromDom(selection.focusNode);\n        return after(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n      }\n    };\n    const setToElement = (win, element, selectNodeContents$1 = true) => {\n      const rngGetter = selectNodeContents$1 ? selectNodeContents : selectNode;\n      const rng = rngGetter(win, element);\n      doSetNativeRange(win, rng);\n    };\n    const getExact = win => getNativeSelection(win).filter(sel => sel.rangeCount > 0).bind(doGetExact);\n    const get$2 = win => getExact(win).map(range => SimSelection.exact(range.start, range.soffset, range.finish, range.foffset));\n    const getFirstRect = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getFirstRect$1(rng);\n    };\n    const getAtPoint = (win, x, y) => fromPoint(win, x, y);\n    const clear = win => {\n      getNativeSelection(win).each(selection => selection.removeAllRanges());\n    };\n\n    const WindowBridge = win => {\n      const elementFromPoint = (x, y) => {\n        return SugarElement.fromPoint(SugarElement.fromDom(win.document), x, y);\n      };\n      const getRect = element => {\n        return element.dom.getBoundingClientRect();\n      };\n      const getRangedRect = (start, soffset, finish, foffset) => {\n        const sel = SimSelection.exact(start, soffset, finish, foffset);\n        return getFirstRect(win, sel);\n      };\n      const getSelection = () => {\n        return get$2(win).map(exactAdt => {\n          return convertToRange(win, exactAdt);\n        });\n      };\n      const fromSitus = situs => {\n        const relative = SimSelection.relative(situs.start, situs.finish);\n        return convertToRange(win, relative);\n      };\n      const situsFromPoint = (x, y) => {\n        return getAtPoint(win, x, y).map(exact => {\n          return Situs.create(exact.start, exact.soffset, exact.finish, exact.foffset);\n        });\n      };\n      const clearSelection = () => {\n        clear(win);\n      };\n      const collapseSelection = (toStart = false) => {\n        get$2(win).each(sel => sel.fold(rng => rng.collapse(toStart), (startSitu, finishSitu) => {\n          const situ = toStart ? startSitu : finishSitu;\n          setRelative(win, situ, situ);\n        }, (start, soffset, finish, foffset) => {\n          const node = toStart ? start : finish;\n          const offset = toStart ? soffset : foffset;\n          setExact(win, node, offset, node, offset);\n        }));\n      };\n      const selectNode = element => {\n        setToElement(win, element, false);\n      };\n      const selectContents = element => {\n        setToElement(win, element);\n      };\n      const setSelection = sel => {\n        setExact(win, sel.start, sel.soffset, sel.finish, sel.foffset);\n      };\n      const setRelativeSelection = (start, finish) => {\n        setRelative(win, start, finish);\n      };\n      const getInnerHeight = () => {\n        return win.innerHeight;\n      };\n      const getScrollY = () => {\n        const pos = get$3(SugarElement.fromDom(win.document));\n        return pos.top;\n      };\n      const scrollBy = (x, y) => {\n        by(x, y, SugarElement.fromDom(win.document));\n      };\n      return {\n        elementFromPoint,\n        getRect,\n        getRangedRect,\n        getSelection,\n        fromSitus,\n        situsFromPoint,\n        clearSelection,\n        collapseSelection,\n        setSelection,\n        setRelativeSelection,\n        selectNode,\n        selectContents,\n        getInnerHeight,\n        getScrollY,\n        scrollBy\n      };\n    };\n\n    const rc = (rows, cols) => ({\n      rows,\n      cols\n    });\n    const mouse = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      const handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        clearstate: handlers.clearstate,\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    const keyboard = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      const clearToNavigate = () => {\n        annotations.clear(container);\n        return Optional.none();\n      };\n      const keydown = (event, start, soffset, finish, foffset, direction) => {\n        const realEvent = event.raw;\n        const keycode = realEvent.which;\n        const shiftKey = realEvent.shiftKey === true;\n        const handler = retrieve$1(container, annotations.selectedSelector).fold(() => {\n          if (isNavigation(keycode) && !shiftKey) {\n            annotations.clearBeforeUpdate(container);\n          }\n          if (isDown(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, down, finish, start, annotations.selectRange);\n          } else if (isUp(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, up, finish, start, annotations.selectRange);\n          } else if (isDown(keycode)) {\n            return curry(navigate, bridge, isRoot, down, finish, start, lastDownCheck);\n          } else if (isUp(keycode)) {\n            return curry(navigate, bridge, isRoot, up, finish, start, firstUpCheck);\n          } else {\n            return Optional.none;\n          }\n        }, selected => {\n          const update$1 = attempts => {\n            return () => {\n              const navigation = findMap(attempts, delta => {\n                return update(delta.rows, delta.cols, container, selected, annotations);\n              });\n              return navigation.fold(() => {\n                return getEdges(container, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(edges => {\n                  const relative = isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first, 0), relative(edges.table));\n                  annotations.clear(container);\n                  return Response.create(Optional.none(), true);\n                });\n              }, _ => {\n                return Optional.some(Response.create(Optional.none(), true));\n              });\n            };\n          };\n          if (isDown(keycode) && shiftKey) {\n            return update$1([rc(+1, 0)]);\n          } else if (isUp(keycode) && shiftKey) {\n            return update$1([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (isNavigation(keycode) && !shiftKey) {\n            return clearToNavigate;\n          } else {\n            return Optional.none;\n          }\n        });\n        return handler();\n      };\n      const keyup = (event, start, soffset, finish, foffset) => {\n        return retrieve$1(container, annotations.selectedSelector).fold(() => {\n          const realEvent = event.raw;\n          const keycode = realEvent.which;\n          const shiftKey = realEvent.shiftKey === true;\n          if (!shiftKey) {\n            return Optional.none();\n          }\n          if (isNavigation(keycode)) {\n            return sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Optional.none();\n          }\n        }, Optional.none);\n      };\n      return {\n        keydown,\n        keyup\n      };\n    };\n    const external = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      return (start, finish) => {\n        annotations.clearBeforeUpdate(container);\n        identify(start, finish, isRoot).each(cellSel => {\n          const boxes = cellSel.boxes.getOr([]);\n          annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n          bridge.selectContents(finish);\n          bridge.collapseSelection();\n        });\n      };\n    };\n\n    const read = (element, attr) => {\n      const value = get$b(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$2 = (element, attr, id) => {\n      const old = read(element, attr);\n      const nu = old.concat([id]);\n      set$2(element, attr, nu.join(' '));\n      return true;\n    };\n    const remove$4 = (element, attr, id) => {\n      const nu = filter$2(read(element, attr), v => v !== id);\n      if (nu.length > 0) {\n        set$2(element, attr, nu.join(' '));\n      } else {\n        remove$7(element, attr);\n      }\n      return false;\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n    const get$1 = element => read(element, 'class');\n    const add$1 = (element, clazz) => add$2(element, 'class', clazz);\n    const remove$3 = (element, clazz) => remove$4(element, 'class', clazz);\n\n    const add = (element, clazz) => {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    const cleanClass = element => {\n      const classList = supports(element) ? element.dom.classList : get$1(element);\n      if (classList.length === 0) {\n        remove$7(element, 'class');\n      }\n    };\n    const remove$2 = (element, clazz) => {\n      if (supports(element)) {\n        const classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$3(element, clazz);\n      }\n      cleanClass(element);\n    };\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const remove$1 = (element, classes) => {\n      each$2(classes, x => {\n        remove$2(element, x);\n      });\n    };\n\n    const addClass = clazz => element => {\n      add(element, clazz);\n    };\n    const removeClasses = classes => element => {\n      remove$1(element, classes);\n    };\n\n    const byClass = ephemera => {\n      const addSelectionClass = addClass(ephemera.selected);\n      const removeSelectionClasses = removeClasses([\n        ephemera.selected,\n        ephemera.lastSelected,\n        ephemera.firstSelected\n      ]);\n      const clear = container => {\n        const sels = descendants(container, ephemera.selectedSelector);\n        each$2(sels, removeSelectionClasses);\n      };\n      const selectRange = (container, cells, start, finish) => {\n        clear(container);\n        each$2(cells, addSelectionClass);\n        add(start, ephemera.firstSelected);\n        add(finish, ephemera.lastSelected);\n      };\n      return {\n        clearBeforeUpdate: clear,\n        clear,\n        selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    const byAttr = (ephemera, onSelection, onClear) => {\n      const removeSelectionAttributes = element => {\n        remove$7(element, ephemera.selected);\n        remove$7(element, ephemera.firstSelected);\n        remove$7(element, ephemera.lastSelected);\n      };\n      const addSelectionAttribute = element => {\n        set$2(element, ephemera.selected, '1');\n      };\n      const clear = container => {\n        clearBeforeUpdate(container);\n        onClear();\n      };\n      const clearBeforeUpdate = container => {\n        const sels = descendants(container, `${ ephemera.selectedSelector },${ ephemera.firstSelectedSelector },${ ephemera.lastSelectedSelector }`);\n        each$2(sels, removeSelectionAttributes);\n      };\n      const selectRange = (container, cells, start, finish) => {\n        clear(container);\n        each$2(cells, addSelectionAttribute);\n        set$2(start, ephemera.firstSelected, '1');\n        set$2(finish, ephemera.lastSelected, '1');\n        onSelection(cells, start, finish);\n      };\n      return {\n        clearBeforeUpdate,\n        clear,\n        selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    const SelectionAnnotation = {\n      byClass,\n      byAttr\n    };\n\n    const fold = (subject, onNone, onMultiple, onSingle) => {\n      switch (subject.tag) {\n      case 'none':\n        return onNone();\n      case 'single':\n        return onSingle(subject.element);\n      case 'multiple':\n        return onMultiple(subject.elements);\n      }\n    };\n    const none = () => ({ tag: 'none' });\n    const multiple = elements => ({\n      tag: 'multiple',\n      elements\n    });\n    const single = element => ({\n      tag: 'single',\n      element\n    });\n\n    const Selections = (lazyRoot, getStart, selectedSelector) => {\n      const get = () => retrieve(lazyRoot(), selectedSelector).fold(() => getStart().fold(none, single), multiple);\n      return { get };\n    };\n\n    const getUpOrLeftCells = (grid, selectedCells) => {\n      const upGrid = grid.slice(0, selectedCells[selectedCells.length - 1].row + 1);\n      const upDetails = toDetailList(upGrid);\n      return bind$2(upDetails, detail => {\n        const slicedCells = detail.cells.slice(0, selectedCells[selectedCells.length - 1].column + 1);\n        return map$1(slicedCells, cell => cell.element);\n      });\n    };\n    const getDownOrRightCells = (grid, selectedCells) => {\n      const downGrid = grid.slice(selectedCells[0].row + selectedCells[0].rowspan - 1, grid.length);\n      const downDetails = toDetailList(downGrid);\n      return bind$2(downDetails, detail => {\n        const slicedCells = detail.cells.slice(selectedCells[0].column + selectedCells[0].colspan - 1, detail.cells.length);\n        return map$1(slicedCells, cell => cell.element);\n      });\n    };\n    const getOtherCells = (table, target, generators) => {\n      const warehouse = Warehouse.fromTable(table);\n      const details = onCells(warehouse, target);\n      return details.map(selectedCells => {\n        const grid = toGrid(warehouse, generators, false);\n        const {rows} = extractGridDetails(grid);\n        const upOrLeftCells = getUpOrLeftCells(rows, selectedCells);\n        const downOrRightCells = getDownOrRightCells(rows, selectedCells);\n        return {\n          upOrLeftCells,\n          downOrRightCells\n        };\n      });\n    };\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n      target,\n      x,\n      y,\n      stop,\n      prevent,\n      kill,\n      raw\n    });\n    const fromRawEvent$1 = rawEvent => {\n      const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      const stop = () => rawEvent.stopPropagation();\n      const prevent = () => rawEvent.preventDefault();\n      const kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => rawEvent => {\n      if (filter(rawEvent)) {\n        handler(fromRawEvent$1(rawEvent));\n      }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n      const wrapped = handle(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    const bind$1 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const unbind = (element, event, handler, useCapture) => {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const filter = always;\n    const bind = (element, event, handler) => bind$1(element, event, filter, handler);\n    const fromRawEvent = fromRawEvent$1;\n\n    const hasInternalTarget = e => !has(SugarElement.fromDom(e.target), 'ephox-snooker-resizer-bar');\n    const TableCellSelectionHandler = (editor, resizeHandler) => {\n      const cellSelection = Selections(() => SugarElement.fromDom(editor.getBody()), () => getSelectionCell(getSelectionStart(editor), getIsRoot(editor)), ephemera.selectedSelector);\n      const onSelection = (cells, start, finish) => {\n        const tableOpt = table(start);\n        tableOpt.each(table => {\n          const cloneFormats = getTableCloneElements(editor);\n          const generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), cloneFormats);\n          const selectedCells = getCellsFromSelection(editor);\n          const otherCells = getOtherCells(table, { selection: selectedCells }, generators);\n          fireTableSelectionChange(editor, cells, start, finish, otherCells);\n        });\n      };\n      const onClear = () => fireTableSelectionClear(editor);\n      const annotations = SelectionAnnotation.byAttr(ephemera, onSelection, onClear);\n      editor.on('init', _e => {\n        const win = editor.getWin();\n        const body = getBody(editor);\n        const isRoot = getIsRoot(editor);\n        const syncSelection = () => {\n          const sel = editor.selection;\n          const start = SugarElement.fromDom(sel.getStart());\n          const end = SugarElement.fromDom(sel.getEnd());\n          const shared = sharedOne(table, [\n            start,\n            end\n          ]);\n          shared.fold(() => annotations.clear(body), noop);\n        };\n        const mouseHandlers = mouse(win, body, isRoot, annotations);\n        const keyHandlers = keyboard(win, body, isRoot, annotations);\n        const external$1 = external(win, body, isRoot, annotations);\n        const hasShiftKey = event => event.raw.shiftKey === true;\n        editor.on('TableSelectorChange', e => external$1(e.start, e.finish));\n        const handleResponse = (event, response) => {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill) {\n            event.kill();\n          }\n          response.selection.each(ns => {\n            const relative = SimSelection.relative(ns.start, ns.finish);\n            const rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        const keyup = event => {\n          const wrappedEvent = fromRawEvent(event);\n          if (wrappedEvent.raw.shiftKey && isNavigation(wrappedEvent.raw.which)) {\n            const rng = editor.selection.getRng();\n            const start = SugarElement.fromDom(rng.startContainer);\n            const end = SugarElement.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(response => {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        const keydown = event => {\n          const wrappedEvent = fromRawEvent(event);\n          resizeHandler.hide();\n          const rng = editor.selection.getRng();\n          const start = SugarElement.fromDom(rng.startContainer);\n          const end = SugarElement.fromDom(rng.endContainer);\n          const direction = onDirection(ltr, rtl)(SugarElement.fromDom(editor.selection.getStart()));\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(response => {\n            handleResponse(wrappedEvent, response);\n          });\n          resizeHandler.show();\n        };\n        const isLeftMouse = raw => raw.button === 0;\n        const isLeftButtonPressed = raw => {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        const dragStart = _e => {\n          mouseHandlers.clearstate();\n        };\n        const mouseDown = e => {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(fromRawEvent(e));\n          }\n        };\n        const mouseOver = e => {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(fromRawEvent(e));\n          }\n        };\n        const mouseUp = e => {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(fromRawEvent(e));\n          }\n        };\n        const getDoubleTap = () => {\n          const lastTarget = Cell(SugarElement.fromDom(body));\n          const lastTimeStamp = Cell(0);\n          const touchEnd = t => {\n            const target = SugarElement.fromDom(t.target);\n            if (isTag('td')(target) || isTag('th')(target)) {\n              const lT = lastTarget.get();\n              const lTS = lastTimeStamp.get();\n              if (eq$1(lT, target) && t.timeStamp - lTS < 300) {\n                t.preventDefault();\n                external$1(target, target);\n              }\n            }\n            lastTarget.set(target);\n            lastTimeStamp.set(t.timeStamp);\n          };\n          return { touchEnd };\n        };\n        const doubleTap = getDoubleTap();\n        editor.on('dragstart', dragStart);\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('touchend', doubleTap.touchEnd);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('NodeChange', syncSelection);\n      });\n      editor.on('PreInit', () => {\n        editor.serializer.addTempAttr(ephemera.firstSelected);\n        editor.serializer.addTempAttr(ephemera.lastSelected);\n      });\n      const clearSelectedCells = container => annotations.clear(SugarElement.fromDom(container));\n      const getSelectedCells = () => fold(cellSelection.get(), constant([]), cells => {\n        return map$1(cells, cell => cell.dom);\n      }, cell => [cell.dom]);\n      return {\n        getSelectedCells,\n        clearSelectedCells\n      };\n    };\n\n    const Event = fields => {\n      let handlers = [];\n      const bind = handler => {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      const unbind = handler => {\n        handlers = filter$2(handlers, h => {\n          return h !== handler;\n        });\n      };\n      const trigger = (...args) => {\n        const event = {};\n        each$2(fields, (name, i) => {\n          event[name] = args[i];\n        });\n        each$2(handlers, handler => {\n          handler(event);\n        });\n      };\n      return {\n        bind,\n        unbind,\n        trigger\n      };\n    };\n\n    const create$1 = typeDefs => {\n      const registry = map(typeDefs, event => {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      const trigger = map(typeDefs, event => {\n        return event.trigger;\n      });\n      return {\n        registry,\n        trigger\n      };\n    };\n\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const sort = arr => {\n      return arr.slice(0).sort();\n    };\n    const reqMessage = (required, keys) => {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    const unsuppMessage = unsupported => {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    const validateStrArr = (label, array) => {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each$2(array, a => {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    const invalidTypeMessage = (incorrect, type) => {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    const checkDupes = everything => {\n      const sorted = sort(everything);\n      const dupe = find$1(sorted, (s, i) => {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(d => {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    const base = (handleUnsupported, required) => {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    const baseWith = (handleUnsupported, required, pred) => {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return obj => {\n        const keys$1 = keys(obj);\n        const allReqd = forall(required, req => {\n          return contains$2(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        const invalidKeys = filter$2(required, key => {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    const handleExact = (required, keys) => {\n      const unsupported = filter$2(keys, key => {\n        return !contains$2(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    const exactly = required => base(handleExact, required);\n\n    const DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    const DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    const DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    const InDrag = () => {\n      let previous = Optional.none();\n      const reset = () => {\n        previous = Optional.none();\n      };\n      const update = (mode, nu) => {\n        const result = previous.map(old => {\n          return mode.compare(old, nu);\n        });\n        previous = Optional.some(nu);\n        return result;\n      };\n      const onEvent = (event, mode) => {\n        const dataOption = mode.extract(event);\n        dataOption.each(data => {\n          const offset = update(mode, data);\n          offset.each(d => {\n            events.trigger.move(d);\n          });\n        });\n      };\n      const events = create$1({ move: Event(['info']) });\n      return {\n        onEvent,\n        reset,\n        events: events.registry\n      };\n    };\n\n    const NoDrag = () => {\n      const events = create$1({ move: Event(['info']) });\n      return {\n        onEvent: noop,\n        reset: noop,\n        events: events.registry\n      };\n    };\n\n    const Movement = () => {\n      const noDragState = NoDrag();\n      const inDragState = InDrag();\n      let dragState = noDragState;\n      const on = () => {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      const off = () => {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      const onEvent = (event, mode) => {\n        dragState.onEvent(event, mode);\n      };\n      const isOn = () => {\n        return dragState === inDragState;\n      };\n      return {\n        on,\n        off,\n        isOn,\n        onEvent,\n        events: inDragState.events\n      };\n    };\n\n    const setup = (mutation, mode, settings) => {\n      let active = false;\n      const events = create$1({\n        start: Event([]),\n        stop: Event([])\n      });\n      const movement = Movement();\n      const drop = () => {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      const throttledDrop = last(drop, 200);\n      const go = parent => {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      const mousemove = event => {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(event => {\n        mode.mutate(mutation, event.info);\n      });\n      const on = () => {\n        active = true;\n      };\n      const off = () => {\n        active = false;\n      };\n      const runIfActive = f => {\n        return (...args) => {\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      const sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      const destroy = () => {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go,\n        on,\n        off,\n        destroy,\n        events: events.registry\n      };\n    };\n\n    const css = namespace => {\n      const dashNamespace = namespace.replace(/\\./g, '-');\n      const resolve = str => {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve };\n    };\n\n    const styles$1 = css('ephox-dragster');\n    const resolve$1 = styles$1.resolve;\n\n    const Blocker = options => {\n      const settings = {\n        layerClass: resolve$1('blocker'),\n        ...options\n      };\n      const div = SugarElement.fromTag('div');\n      set$2(div, 'role', 'presentation');\n      setAll(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add(div, resolve$1('blocker'));\n      add(div, settings.layerClass);\n      const element = constant(div);\n      const destroy = () => {\n        remove$6(div);\n      };\n      return {\n        element,\n        destroy\n      };\n    };\n\n    const compare = (old, nu) => {\n      return SugarPosition(nu.left - old.left, nu.top - old.top);\n    };\n    const extract = event => {\n      return Optional.some(SugarPosition(event.x, event.y));\n    };\n    const mutate = (mutation, info) => {\n      mutation.mutate(info.left, info.top);\n    };\n    const sink = (dragApi, settings) => {\n      const blocker = Blocker(settings);\n      const mdown = bind(blocker.element(), 'mousedown', dragApi.forceDrop);\n      const mup = bind(blocker.element(), 'mouseup', dragApi.drop);\n      const mmove = bind(blocker.element(), 'mousemove', dragApi.move);\n      const mout = bind(blocker.element(), 'mouseout', dragApi.delayDrop);\n      const destroy = () => {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      const start = parent => {\n        append$1(parent, blocker.element());\n      };\n      const stop = () => {\n        remove$6(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start,\n        stop,\n        destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare,\n      extract,\n      sink,\n      mutate\n    });\n\n    const transform = (mutation, settings = {}) => {\n      var _a;\n      const mode = (_a = settings.mode) !== null && _a !== void 0 ? _a : MouseDrag;\n      return setup(mutation, mode, settings);\n    };\n\n    const styles = css('ephox-snooker');\n    const resolve = styles.resolve;\n\n    const Mutation = () => {\n      const events = create$1({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      const mutate = (x, y) => {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate,\n        events: events.registry\n      };\n    };\n\n    const BarMutation = () => {\n      const events = create$1({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      let target = Optional.none();\n      const delegate = Mutation();\n      delegate.events.drag.bind(event => {\n        target.each(t => {\n          events.trigger.drag(event.xDelta, event.yDelta, t);\n        });\n      });\n      const assign = t => {\n        target = Optional.some(t);\n      };\n      const get = () => {\n        return target;\n      };\n      return {\n        assign,\n        get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    const col = (column, x, y, w, h) => {\n      const bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n    const row = (r, x, y, w, h) => {\n      const bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n\n    const resizeBar = resolve('resizer-bar');\n    const resizeRowBar = resolve('resizer-rows');\n    const resizeColBar = resolve('resizer-cols');\n    const BAR_THICKNESS = 7;\n    const resizableRows = (warehouse, isResizable) => bind$2(warehouse.all, (row, i) => isResizable(row.element) ? [i] : []);\n    const resizableColumns = (warehouse, isResizable) => {\n      const resizableCols = [];\n      range$1(warehouse.grid.columns, index => {\n        const colElmOpt = Warehouse.getColumnAt(warehouse, index).map(col => col.element);\n        if (colElmOpt.forall(isResizable)) {\n          resizableCols.push(index);\n        }\n      });\n      return filter$2(resizableCols, colIndex => {\n        const columnCells = Warehouse.filterItems(warehouse, cell => cell.column === colIndex);\n        return forall(columnCells, cell => isResizable(cell.element));\n      });\n    };\n    const destroy = wire => {\n      const previous = descendants(wire.parent(), '.' + resizeBar);\n      each$2(previous, remove$6);\n    };\n    const drawBar = (wire, positions, create) => {\n      const origin = wire.origin();\n      each$2(positions, cpOption => {\n        cpOption.each(cp => {\n          const bar = create(origin, cp);\n          add(bar, resizeBar);\n          append$1(wire.parent(), bar);\n        });\n      });\n    };\n    const refreshCol = (wire, colPositions, position, tableHeight) => {\n      drawBar(wire, colPositions, (origin, cp) => {\n        const colBar = col(cp.col, cp.x - origin.left, position.top - origin.top, BAR_THICKNESS, tableHeight);\n        add(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    const refreshRow = (wire, rowPositions, position, tableWidth) => {\n      drawBar(wire, rowPositions, (origin, cp) => {\n        const rowBar = row(cp.row, position.left - origin.left, cp.y - origin.top, tableWidth, BAR_THICKNESS);\n        add(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    const refreshGrid = (warhouse, wire, table, rows, cols) => {\n      const position = absolute(table);\n      const isResizable = wire.isResizable;\n      const rowPositions = rows.length > 0 ? height.positions(rows, table) : [];\n      const resizableRowBars = rowPositions.length > 0 ? resizableRows(warhouse, isResizable) : [];\n      const resizableRowPositions = filter$2(rowPositions, (_pos, i) => exists(resizableRowBars, barIndex => i === barIndex));\n      refreshRow(wire, resizableRowPositions, position, getOuter$2(table));\n      const colPositions = cols.length > 0 ? width.positions(cols, table) : [];\n      const resizableColBars = colPositions.length > 0 ? resizableColumns(warhouse, isResizable) : [];\n      const resizableColPositions = filter$2(colPositions, (_pos, i) => exists(resizableColBars, barIndex => i === barIndex));\n      refreshCol(wire, resizableColPositions, position, getOuter$1(table));\n    };\n    const refresh = (wire, table) => {\n      destroy(wire);\n      if (wire.isResizable(table)) {\n        const warehouse = Warehouse.fromTable(table);\n        const rows$1 = rows(warehouse);\n        const cols = columns(warehouse);\n        refreshGrid(warehouse, wire, table, rows$1, cols);\n      }\n    };\n    const each = (wire, f) => {\n      const bars = descendants(wire.parent(), '.' + resizeBar);\n      each$2(bars, f);\n    };\n    const hide = wire => {\n      each(wire, bar => {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    const show = wire => {\n      each(wire, bar => {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    const isRowBar = element => {\n      return has(element, resizeRowBar);\n    };\n    const isColBar = element => {\n      return has(element, resizeColBar);\n    };\n\n    const resizeBarDragging = resolve('resizer-bar-dragging');\n    const BarManager = wire => {\n      const mutation = BarMutation();\n      const resizing = transform(mutation, {});\n      let hoverTable = Optional.none();\n      const getResizer = (element, type) => {\n        return Optional.from(get$b(element, type));\n      };\n      mutation.events.drag.bind(event => {\n        getResizer(event.target, 'data-row').each(_dataRow => {\n          const currentRow = getCssValue(event.target, 'top');\n          set$1(event.target, 'top', currentRow + event.yDelta + 'px');\n        });\n        getResizer(event.target, 'data-column').each(_dataCol => {\n          const currentCol = getCssValue(event.target, 'left');\n          set$1(event.target, 'left', currentCol + event.xDelta + 'px');\n        });\n      });\n      const getDelta = (target, dir) => {\n        const newX = getCssValue(target, dir);\n        const oldX = getAttrValue(target, 'data-initial-' + dir, 0);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(() => {\n        mutation.get().each(target => {\n          hoverTable.each(table => {\n            getResizer(target, 'data-row').each(row => {\n              const delta = getDelta(target, 'top');\n              remove$7(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(column => {\n              const delta = getDelta(target, 'left');\n              remove$7(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            refresh(wire, table);\n          });\n        });\n      });\n      const handler = (target, dir) => {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set$2(target, 'data-initial-' + dir, getCssValue(target, dir));\n        add(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      const mousedown = bind(wire.parent(), 'mousedown', event => {\n        if (isRowBar(event.target)) {\n          handler(event.target, 'top');\n        }\n        if (isColBar(event.target)) {\n          handler(event.target, 'left');\n        }\n      });\n      const isRoot = e => {\n        return eq$1(e, wire.view());\n      };\n      const findClosestEditableTable = target => closest$1(target, 'table', isRoot).filter(isEditable$1);\n      const mouseover = bind(wire.view(), 'mouseover', event => {\n        findClosestEditableTable(event.target).fold(() => {\n          if (inBody(event.target)) {\n            destroy(wire);\n          }\n        }, table => {\n          hoverTable = Optional.some(table);\n          refresh(wire, table);\n        });\n      });\n      const destroy$1 = () => {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        destroy(wire);\n      };\n      const refresh$1 = tbl => {\n        refresh(wire, tbl);\n      };\n      const events = create$1({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy$1,\n        refresh: refresh$1,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(hide, wire),\n        showBars: curry(show, wire),\n        events: events.registry\n      };\n    };\n\n    const create = (wire, resizing, lazySizing) => {\n      const hdirection = height;\n      const vdirection = width;\n      const manager = BarManager(wire);\n      const events = create$1({\n        beforeResize: Event([\n          'table',\n          'type'\n        ]),\n        afterResize: Event([\n          'table',\n          'type'\n        ]),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(event => {\n        const table = event.table;\n        events.trigger.beforeResize(table, 'row');\n        const delta = hdirection.delta(event.delta, table);\n        adjustHeight(table, delta, event.row, hdirection);\n        events.trigger.afterResize(table, 'row');\n      });\n      manager.events.startAdjust.bind(_event => {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(event => {\n        const table = event.table;\n        events.trigger.beforeResize(table, 'col');\n        const delta = vdirection.delta(event.delta, table);\n        const tableSize = lazySizing(table);\n        adjustWidth(table, delta, event.column, resizing, tableSize);\n        events.trigger.afterResize(table, 'col');\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        refreshBars: manager.refresh,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    const TableResize = { create };\n\n    const only = (element, isResizable) => {\n      const parent = isDocument(element) ? documentElement(element) : element;\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable\n      };\n    };\n    const detached = (editable, chrome, isResizable) => {\n      const origin = () => absolute(chrome);\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin,\n        isResizable\n      };\n    };\n    const body = (editable, chrome, isResizable) => {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable\n      };\n    };\n    const ResizeWire = {\n      only,\n      detached,\n      body\n    };\n\n    const createContainer = () => {\n      const container = SugarElement.fromTag('div');\n      setAll(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append$1(body$1(), container);\n      return container;\n    };\n    const get = (editor, isResizable) => {\n      return editor.inline ? ResizeWire.body(SugarElement.fromDom(editor.getBody()), createContainer(), isResizable) : ResizeWire.only(SugarElement.fromDom(editor.getDoc()), isResizable);\n    };\n    const remove = (editor, wire) => {\n      if (editor.inline) {\n        remove$6(wire.parent());\n      }\n    };\n\n    const isTable = node => isNonNullable(node) && node.nodeName === 'TABLE';\n    const barResizerPrefix = 'bar-';\n    const isResizable = elm => get$b(elm, 'data-mce-resize') !== 'false';\n    const syncPixels = table => {\n      const warehouse = Warehouse.fromTable(table);\n      if (!Warehouse.hasColumns(warehouse)) {\n        each$2(cells$1(table), cell => {\n          const computedWidth = get$a(cell, 'width');\n          set$1(cell, 'width', computedWidth);\n          remove$7(cell, 'width');\n        });\n      }\n    };\n    const TableResizeHandler = editor => {\n      const selectionRng = value();\n      const tableResize = value();\n      const resizeWire = value();\n      let startW;\n      let startRawW;\n      const lazySizing = table => get$5(editor, table);\n      const lazyResizingBehaviour = () => isPreserveTableColumnResizing(editor) ? preserveTable() : resizeTable();\n      const getNumColumns = table => getGridSize(table).columns;\n      const afterCornerResize = (table, origin, width) => {\n        const isRightEdgeResize = endsWith(origin, 'e');\n        if (startRawW === '') {\n          convertToPercentSize(table);\n        }\n        if (width !== startW && startRawW !== '') {\n          set$1(table, 'width', startRawW);\n          const resizing = lazyResizingBehaviour();\n          const tableSize = lazySizing(table);\n          const col = isPreserveTableColumnResizing(editor) || isRightEdgeResize ? getNumColumns(table) - 1 : 0;\n          adjustWidth(table, width - startW, col, resizing, tableSize);\n        } else if (isPercentage$1(startRawW)) {\n          const percentW = parseFloat(startRawW.replace('%', ''));\n          const targetPercentW = width * percentW / startW;\n          set$1(table, 'width', targetPercentW + '%');\n        }\n        if (isPixel(startRawW)) {\n          syncPixels(table);\n        }\n      };\n      const destroy = () => {\n        tableResize.on(sz => {\n          sz.destroy();\n        });\n        resizeWire.on(w => {\n          remove(editor, w);\n        });\n      };\n      editor.on('init', () => {\n        const rawWire = get(editor, isResizable);\n        resizeWire.set(rawWire);\n        if (hasTableObjectResizing(editor) && hasTableResizeBars(editor)) {\n          const resizing = lazyResizingBehaviour();\n          const sz = TableResize.create(rawWire, resizing, lazySizing);\n          sz.on();\n          sz.events.startDrag.bind(_event => {\n            selectionRng.set(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(event => {\n            const rawTable = event.table.dom;\n            fireObjectResizeStart(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n          });\n          sz.events.afterResize.bind(event => {\n            const table = event.table;\n            const rawTable = table.dom;\n            removeDataStyle(table);\n            selectionRng.on(rng => {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n            editor.undoManager.add();\n          });\n          tableResize.set(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', e => {\n        const targetElm = e.target;\n        if (isTable(targetElm)) {\n          const table = SugarElement.fromDom(targetElm);\n          each$2(editor.dom.select('.mce-clonedresizable'), clone => {\n            editor.dom.addClass(clone, 'mce-' + getTableColumnResizingBehaviour(editor) + '-columns');\n          });\n          if (!isPixelSizing(table) && isTablePixelsForced(editor)) {\n            convertToPixelSize(table);\n          } else if (!isPercentSizing(table) && isTablePercentagesForced(editor)) {\n            convertToPercentSize(table);\n          }\n          if (isNoneSizing(table) && startsWith(e.origin, barResizerPrefix)) {\n            convertToPercentSize(table);\n          }\n          startW = e.width;\n          startRawW = isTableResponsiveForced(editor) ? '' : getRawWidth(editor, targetElm).getOr('');\n        }\n      });\n      editor.on('ObjectResized', e => {\n        const targetElm = e.target;\n        if (isTable(targetElm)) {\n          const table = SugarElement.fromDom(targetElm);\n          const origin = e.origin;\n          if (startsWith(origin, 'corner-')) {\n            afterCornerResize(table, origin, e.width);\n          }\n          removeDataStyle(table);\n          fireTableModified(editor, table.dom, styleModified);\n        }\n      });\n      editor.on('SwitchMode', () => {\n        tableResize.on(resize => {\n          if (editor.mode.isReadOnly()) {\n            resize.hideBars();\n          } else {\n            resize.showBars();\n          }\n        });\n      });\n      editor.on('remove', () => {\n        destroy();\n      });\n      const refresh = table => {\n        tableResize.on(resize => resize.refreshBars(SugarElement.fromDom(table)));\n      };\n      const hide = () => {\n        tableResize.on(resize => resize.hideBars());\n      };\n      const show = () => {\n        tableResize.on(resize => resize.showBars());\n      };\n      return {\n        refresh,\n        hide,\n        show\n      };\n    };\n\n    const setupTable = editor => {\n      register(editor);\n      const resizeHandler = TableResizeHandler(editor);\n      const cellSelectionHandler = TableCellSelectionHandler(editor, resizeHandler);\n      const actions = TableActions(editor, resizeHandler, cellSelectionHandler);\n      registerCommands(editor, actions);\n      registerQueryCommands(editor, actions);\n      registerEvents(editor, actions);\n      return {\n        getSelectedCells: cellSelectionHandler.getSelectedCells,\n        clearSelectedCells: cellSelectionHandler.clearSelectedCells\n      };\n    };\n\n    const DomModel = editor => {\n      const table = setupTable(editor);\n      return { table };\n    };\n    var Model = () => {\n      global$1.add('dom', DomModel);\n    };\n\n    Model();\n\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3244,"column":0},"generated":{"line":3246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3245,"column":0},"generated":{"line":3247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3246,"column":0},"generated":{"line":3248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3247,"column":0},"generated":{"line":3249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3248,"column":0},"generated":{"line":3250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3249,"column":0},"generated":{"line":3251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3250,"column":0},"generated":{"line":3252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3251,"column":0},"generated":{"line":3253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3252,"column":0},"generated":{"line":3254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3253,"column":0},"generated":{"line":3255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3254,"column":0},"generated":{"line":3256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3255,"column":0},"generated":{"line":3257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3256,"column":0},"generated":{"line":3258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3257,"column":0},"generated":{"line":3259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3258,"column":0},"generated":{"line":3260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3259,"column":0},"generated":{"line":3261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3260,"column":0},"generated":{"line":3262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3261,"column":0},"generated":{"line":3263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3262,"column":0},"generated":{"line":3264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3263,"column":0},"generated":{"line":3265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3264,"column":0},"generated":{"line":3266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3265,"column":0},"generated":{"line":3267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3266,"column":0},"generated":{"line":3268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3267,"column":0},"generated":{"line":3269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3268,"column":0},"generated":{"line":3270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3269,"column":0},"generated":{"line":3271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3270,"column":0},"generated":{"line":3272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3271,"column":0},"generated":{"line":3273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3272,"column":0},"generated":{"line":3274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3273,"column":0},"generated":{"line":3275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3274,"column":0},"generated":{"line":3276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3275,"column":0},"generated":{"line":3277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3276,"column":0},"generated":{"line":3278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3277,"column":0},"generated":{"line":3279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3278,"column":0},"generated":{"line":3280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3279,"column":0},"generated":{"line":3281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3280,"column":0},"generated":{"line":3282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3281,"column":0},"generated":{"line":3283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3282,"column":0},"generated":{"line":3284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3283,"column":0},"generated":{"line":3285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3284,"column":0},"generated":{"line":3286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3285,"column":0},"generated":{"line":3287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3286,"column":0},"generated":{"line":3288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3287,"column":0},"generated":{"line":3289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3288,"column":0},"generated":{"line":3290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3289,"column":0},"generated":{"line":3291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3290,"column":0},"generated":{"line":3292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3291,"column":0},"generated":{"line":3293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3292,"column":0},"generated":{"line":3294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3293,"column":0},"generated":{"line":3295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3294,"column":0},"generated":{"line":3296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3295,"column":0},"generated":{"line":3297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3296,"column":0},"generated":{"line":3298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3297,"column":0},"generated":{"line":3299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3298,"column":0},"generated":{"line":3300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3299,"column":0},"generated":{"line":3301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3300,"column":0},"generated":{"line":3302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3301,"column":0},"generated":{"line":3303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3302,"column":0},"generated":{"line":3304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3303,"column":0},"generated":{"line":3305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3304,"column":0},"generated":{"line":3306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3305,"column":0},"generated":{"line":3307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3306,"column":0},"generated":{"line":3308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3307,"column":0},"generated":{"line":3309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3308,"column":0},"generated":{"line":3310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3309,"column":0},"generated":{"line":3311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3310,"column":0},"generated":{"line":3312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3311,"column":0},"generated":{"line":3313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3312,"column":0},"generated":{"line":3314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3313,"column":0},"generated":{"line":3315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3314,"column":0},"generated":{"line":3316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3315,"column":0},"generated":{"line":3317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3316,"column":0},"generated":{"line":3318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3317,"column":0},"generated":{"line":3319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3318,"column":0},"generated":{"line":3320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3319,"column":0},"generated":{"line":3321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3320,"column":0},"generated":{"line":3322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3321,"column":0},"generated":{"line":3323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3322,"column":0},"generated":{"line":3324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3323,"column":0},"generated":{"line":3325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3324,"column":0},"generated":{"line":3326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3325,"column":0},"generated":{"line":3327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3326,"column":0},"generated":{"line":3328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3327,"column":0},"generated":{"line":3329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3328,"column":0},"generated":{"line":3330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3329,"column":0},"generated":{"line":3331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3330,"column":0},"generated":{"line":3332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3331,"column":0},"generated":{"line":3333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3332,"column":0},"generated":{"line":3334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3333,"column":0},"generated":{"line":3335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3334,"column":0},"generated":{"line":3336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3335,"column":0},"generated":{"line":3337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3336,"column":0},"generated":{"line":3338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3337,"column":0},"generated":{"line":3339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3338,"column":0},"generated":{"line":3340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3339,"column":0},"generated":{"line":3341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3340,"column":0},"generated":{"line":3342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3341,"column":0},"generated":{"line":3343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3342,"column":0},"generated":{"line":3344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3343,"column":0},"generated":{"line":3345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3344,"column":0},"generated":{"line":3346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3345,"column":0},"generated":{"line":3347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3346,"column":0},"generated":{"line":3348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3347,"column":0},"generated":{"line":3349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3348,"column":0},"generated":{"line":3350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3349,"column":0},"generated":{"line":3351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3350,"column":0},"generated":{"line":3352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3351,"column":0},"generated":{"line":3353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3352,"column":0},"generated":{"line":3354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3353,"column":0},"generated":{"line":3355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3354,"column":0},"generated":{"line":3356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3355,"column":0},"generated":{"line":3357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3356,"column":0},"generated":{"line":3358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3357,"column":0},"generated":{"line":3359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3358,"column":0},"generated":{"line":3360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3359,"column":0},"generated":{"line":3361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3360,"column":0},"generated":{"line":3362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3361,"column":0},"generated":{"line":3363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3362,"column":0},"generated":{"line":3364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3363,"column":0},"generated":{"line":3365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3364,"column":0},"generated":{"line":3366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3365,"column":0},"generated":{"line":3367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3366,"column":0},"generated":{"line":3368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3367,"column":0},"generated":{"line":3369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3368,"column":0},"generated":{"line":3370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3369,"column":0},"generated":{"line":3371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3370,"column":0},"generated":{"line":3372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3371,"column":0},"generated":{"line":3373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3372,"column":0},"generated":{"line":3374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3373,"column":0},"generated":{"line":3375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3374,"column":0},"generated":{"line":3376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3375,"column":0},"generated":{"line":3377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3376,"column":0},"generated":{"line":3378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3377,"column":0},"generated":{"line":3379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3378,"column":0},"generated":{"line":3380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3379,"column":0},"generated":{"line":3381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3380,"column":0},"generated":{"line":3382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3381,"column":0},"generated":{"line":3383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3382,"column":0},"generated":{"line":3384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3383,"column":0},"generated":{"line":3385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3384,"column":0},"generated":{"line":3386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3385,"column":0},"generated":{"line":3387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3386,"column":0},"generated":{"line":3388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3387,"column":0},"generated":{"line":3389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3388,"column":0},"generated":{"line":3390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3389,"column":0},"generated":{"line":3391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3390,"column":0},"generated":{"line":3392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3391,"column":0},"generated":{"line":3393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3392,"column":0},"generated":{"line":3394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3393,"column":0},"generated":{"line":3395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3394,"column":0},"generated":{"line":3396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3395,"column":0},"generated":{"line":3397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3396,"column":0},"generated":{"line":3398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3397,"column":0},"generated":{"line":3399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3398,"column":0},"generated":{"line":3400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3399,"column":0},"generated":{"line":3401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3400,"column":0},"generated":{"line":3402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3401,"column":0},"generated":{"line":3403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3402,"column":0},"generated":{"line":3404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3403,"column":0},"generated":{"line":3405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3404,"column":0},"generated":{"line":3406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3405,"column":0},"generated":{"line":3407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3406,"column":0},"generated":{"line":3408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3407,"column":0},"generated":{"line":3409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3408,"column":0},"generated":{"line":3410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3409,"column":0},"generated":{"line":3411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3410,"column":0},"generated":{"line":3412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3411,"column":0},"generated":{"line":3413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3412,"column":0},"generated":{"line":3414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3413,"column":0},"generated":{"line":3415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3414,"column":0},"generated":{"line":3416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3415,"column":0},"generated":{"line":3417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3416,"column":0},"generated":{"line":3418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3417,"column":0},"generated":{"line":3419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3418,"column":0},"generated":{"line":3420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3419,"column":0},"generated":{"line":3421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3420,"column":0},"generated":{"line":3422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3421,"column":0},"generated":{"line":3423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3422,"column":0},"generated":{"line":3424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3423,"column":0},"generated":{"line":3425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3424,"column":0},"generated":{"line":3426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3425,"column":0},"generated":{"line":3427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3426,"column":0},"generated":{"line":3428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3427,"column":0},"generated":{"line":3429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3428,"column":0},"generated":{"line":3430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3429,"column":0},"generated":{"line":3431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3430,"column":0},"generated":{"line":3432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3431,"column":0},"generated":{"line":3433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3432,"column":0},"generated":{"line":3434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3433,"column":0},"generated":{"line":3435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3434,"column":0},"generated":{"line":3436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3435,"column":0},"generated":{"line":3437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3436,"column":0},"generated":{"line":3438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3437,"column":0},"generated":{"line":3439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3438,"column":0},"generated":{"line":3440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3439,"column":0},"generated":{"line":3441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3440,"column":0},"generated":{"line":3442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3441,"column":0},"generated":{"line":3443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3442,"column":0},"generated":{"line":3444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3443,"column":0},"generated":{"line":3445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3444,"column":0},"generated":{"line":3446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3445,"column":0},"generated":{"line":3447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3446,"column":0},"generated":{"line":3448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3447,"column":0},"generated":{"line":3449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3448,"column":0},"generated":{"line":3450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3449,"column":0},"generated":{"line":3451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3450,"column":0},"generated":{"line":3452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3451,"column":0},"generated":{"line":3453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3452,"column":0},"generated":{"line":3454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3453,"column":0},"generated":{"line":3455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3454,"column":0},"generated":{"line":3456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3455,"column":0},"generated":{"line":3457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3456,"column":0},"generated":{"line":3458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3457,"column":0},"generated":{"line":3459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3458,"column":0},"generated":{"line":3460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3459,"column":0},"generated":{"line":3461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3460,"column":0},"generated":{"line":3462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3461,"column":0},"generated":{"line":3463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3462,"column":0},"generated":{"line":3464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3463,"column":0},"generated":{"line":3465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3464,"column":0},"generated":{"line":3466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3465,"column":0},"generated":{"line":3467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3466,"column":0},"generated":{"line":3468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3467,"column":0},"generated":{"line":3469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3468,"column":0},"generated":{"line":3470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3469,"column":0},"generated":{"line":3471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3470,"column":0},"generated":{"line":3472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3471,"column":0},"generated":{"line":3473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3472,"column":0},"generated":{"line":3474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3473,"column":0},"generated":{"line":3475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3474,"column":0},"generated":{"line":3476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3475,"column":0},"generated":{"line":3477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3476,"column":0},"generated":{"line":3478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3477,"column":0},"generated":{"line":3479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3478,"column":0},"generated":{"line":3480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3479,"column":0},"generated":{"line":3481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3480,"column":0},"generated":{"line":3482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3481,"column":0},"generated":{"line":3483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3482,"column":0},"generated":{"line":3484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3483,"column":0},"generated":{"line":3485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3484,"column":0},"generated":{"line":3486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3485,"column":0},"generated":{"line":3487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3486,"column":0},"generated":{"line":3488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3487,"column":0},"generated":{"line":3489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3488,"column":0},"generated":{"line":3490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3489,"column":0},"generated":{"line":3491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3490,"column":0},"generated":{"line":3492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3491,"column":0},"generated":{"line":3493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3492,"column":0},"generated":{"line":3494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3493,"column":0},"generated":{"line":3495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3494,"column":0},"generated":{"line":3496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3495,"column":0},"generated":{"line":3497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3496,"column":0},"generated":{"line":3498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3497,"column":0},"generated":{"line":3499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3498,"column":0},"generated":{"line":3500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3499,"column":0},"generated":{"line":3501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3500,"column":0},"generated":{"line":3502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3501,"column":0},"generated":{"line":3503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3502,"column":0},"generated":{"line":3504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3503,"column":0},"generated":{"line":3505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3504,"column":0},"generated":{"line":3506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3505,"column":0},"generated":{"line":3507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3506,"column":0},"generated":{"line":3508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3507,"column":0},"generated":{"line":3509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3508,"column":0},"generated":{"line":3510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3509,"column":0},"generated":{"line":3511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3510,"column":0},"generated":{"line":3512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3511,"column":0},"generated":{"line":3513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3512,"column":0},"generated":{"line":3514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3513,"column":0},"generated":{"line":3515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3514,"column":0},"generated":{"line":3516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3515,"column":0},"generated":{"line":3517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3516,"column":0},"generated":{"line":3518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3517,"column":0},"generated":{"line":3519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3518,"column":0},"generated":{"line":3520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3519,"column":0},"generated":{"line":3521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3520,"column":0},"generated":{"line":3522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3521,"column":0},"generated":{"line":3523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3522,"column":0},"generated":{"line":3524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3523,"column":0},"generated":{"line":3525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3524,"column":0},"generated":{"line":3526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3525,"column":0},"generated":{"line":3527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3526,"column":0},"generated":{"line":3528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3527,"column":0},"generated":{"line":3529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3528,"column":0},"generated":{"line":3530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3529,"column":0},"generated":{"line":3531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3530,"column":0},"generated":{"line":3532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3531,"column":0},"generated":{"line":3533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3532,"column":0},"generated":{"line":3534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3533,"column":0},"generated":{"line":3535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3534,"column":0},"generated":{"line":3536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3535,"column":0},"generated":{"line":3537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3536,"column":0},"generated":{"line":3538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3537,"column":0},"generated":{"line":3539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3538,"column":0},"generated":{"line":3540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3539,"column":0},"generated":{"line":3541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3540,"column":0},"generated":{"line":3542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3541,"column":0},"generated":{"line":3543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3542,"column":0},"generated":{"line":3544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3543,"column":0},"generated":{"line":3545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3544,"column":0},"generated":{"line":3546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3545,"column":0},"generated":{"line":3547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3546,"column":0},"generated":{"line":3548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3547,"column":0},"generated":{"line":3549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3548,"column":0},"generated":{"line":3550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3549,"column":0},"generated":{"line":3551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3550,"column":0},"generated":{"line":3552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3551,"column":0},"generated":{"line":3553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3552,"column":0},"generated":{"line":3554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3553,"column":0},"generated":{"line":3555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3554,"column":0},"generated":{"line":3556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3555,"column":0},"generated":{"line":3557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3556,"column":0},"generated":{"line":3558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3557,"column":0},"generated":{"line":3559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3558,"column":0},"generated":{"line":3560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3559,"column":0},"generated":{"line":3561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3560,"column":0},"generated":{"line":3562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3561,"column":0},"generated":{"line":3563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3562,"column":0},"generated":{"line":3564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3563,"column":0},"generated":{"line":3565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3564,"column":0},"generated":{"line":3566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3565,"column":0},"generated":{"line":3567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3566,"column":0},"generated":{"line":3568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3567,"column":0},"generated":{"line":3569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3568,"column":0},"generated":{"line":3570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3569,"column":0},"generated":{"line":3571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3570,"column":0},"generated":{"line":3572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3571,"column":0},"generated":{"line":3573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3572,"column":0},"generated":{"line":3574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3573,"column":0},"generated":{"line":3575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3574,"column":0},"generated":{"line":3576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3575,"column":0},"generated":{"line":3577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3576,"column":0},"generated":{"line":3578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3577,"column":0},"generated":{"line":3579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3578,"column":0},"generated":{"line":3580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3579,"column":0},"generated":{"line":3581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3580,"column":0},"generated":{"line":3582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3581,"column":0},"generated":{"line":3583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3582,"column":0},"generated":{"line":3584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3583,"column":0},"generated":{"line":3585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3584,"column":0},"generated":{"line":3586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3585,"column":0},"generated":{"line":3587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3586,"column":0},"generated":{"line":3588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3587,"column":0},"generated":{"line":3589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3588,"column":0},"generated":{"line":3590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3589,"column":0},"generated":{"line":3591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3590,"column":0},"generated":{"line":3592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3591,"column":0},"generated":{"line":3593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3592,"column":0},"generated":{"line":3594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3593,"column":0},"generated":{"line":3595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3594,"column":0},"generated":{"line":3596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3595,"column":0},"generated":{"line":3597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3596,"column":0},"generated":{"line":3598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3597,"column":0},"generated":{"line":3599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3598,"column":0},"generated":{"line":3600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3599,"column":0},"generated":{"line":3601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3600,"column":0},"generated":{"line":3602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3601,"column":0},"generated":{"line":3603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3602,"column":0},"generated":{"line":3604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3603,"column":0},"generated":{"line":3605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3604,"column":0},"generated":{"line":3606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3605,"column":0},"generated":{"line":3607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3606,"column":0},"generated":{"line":3608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3607,"column":0},"generated":{"line":3609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3608,"column":0},"generated":{"line":3610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3609,"column":0},"generated":{"line":3611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3610,"column":0},"generated":{"line":3612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3611,"column":0},"generated":{"line":3613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3612,"column":0},"generated":{"line":3614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3613,"column":0},"generated":{"line":3615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3614,"column":0},"generated":{"line":3616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3615,"column":0},"generated":{"line":3617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3616,"column":0},"generated":{"line":3618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3617,"column":0},"generated":{"line":3619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3618,"column":0},"generated":{"line":3620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3619,"column":0},"generated":{"line":3621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3620,"column":0},"generated":{"line":3622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3621,"column":0},"generated":{"line":3623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3622,"column":0},"generated":{"line":3624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3623,"column":0},"generated":{"line":3625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3624,"column":0},"generated":{"line":3626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3625,"column":0},"generated":{"line":3627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3626,"column":0},"generated":{"line":3628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3627,"column":0},"generated":{"line":3629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3628,"column":0},"generated":{"line":3630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3629,"column":0},"generated":{"line":3631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3630,"column":0},"generated":{"line":3632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3631,"column":0},"generated":{"line":3633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3632,"column":0},"generated":{"line":3634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3633,"column":0},"generated":{"line":3635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3634,"column":0},"generated":{"line":3636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3635,"column":0},"generated":{"line":3637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3636,"column":0},"generated":{"line":3638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3637,"column":0},"generated":{"line":3639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3638,"column":0},"generated":{"line":3640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3639,"column":0},"generated":{"line":3641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3640,"column":0},"generated":{"line":3642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3641,"column":0},"generated":{"line":3643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3642,"column":0},"generated":{"line":3644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3643,"column":0},"generated":{"line":3645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3644,"column":0},"generated":{"line":3646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3645,"column":0},"generated":{"line":3647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3646,"column":0},"generated":{"line":3648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3647,"column":0},"generated":{"line":3649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3648,"column":0},"generated":{"line":3650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3649,"column":0},"generated":{"line":3651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3650,"column":0},"generated":{"line":3652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3651,"column":0},"generated":{"line":3653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3652,"column":0},"generated":{"line":3654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3653,"column":0},"generated":{"line":3655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3654,"column":0},"generated":{"line":3656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3655,"column":0},"generated":{"line":3657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3656,"column":0},"generated":{"line":3658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3657,"column":0},"generated":{"line":3659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3658,"column":0},"generated":{"line":3660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3659,"column":0},"generated":{"line":3661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3660,"column":0},"generated":{"line":3662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3661,"column":0},"generated":{"line":3663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3662,"column":0},"generated":{"line":3664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3663,"column":0},"generated":{"line":3665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3664,"column":0},"generated":{"line":3666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3665,"column":0},"generated":{"line":3667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3666,"column":0},"generated":{"line":3668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3667,"column":0},"generated":{"line":3669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3668,"column":0},"generated":{"line":3670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3669,"column":0},"generated":{"line":3671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3670,"column":0},"generated":{"line":3672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3671,"column":0},"generated":{"line":3673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3672,"column":0},"generated":{"line":3674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3673,"column":0},"generated":{"line":3675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3674,"column":0},"generated":{"line":3676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3675,"column":0},"generated":{"line":3677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3676,"column":0},"generated":{"line":3678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3677,"column":0},"generated":{"line":3679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3678,"column":0},"generated":{"line":3680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3679,"column":0},"generated":{"line":3681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3680,"column":0},"generated":{"line":3682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3681,"column":0},"generated":{"line":3683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3682,"column":0},"generated":{"line":3684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3683,"column":0},"generated":{"line":3685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3684,"column":0},"generated":{"line":3686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3685,"column":0},"generated":{"line":3687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3686,"column":0},"generated":{"line":3688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3687,"column":0},"generated":{"line":3689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3688,"column":0},"generated":{"line":3690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3689,"column":0},"generated":{"line":3691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3690,"column":0},"generated":{"line":3692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3691,"column":0},"generated":{"line":3693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3692,"column":0},"generated":{"line":3694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3693,"column":0},"generated":{"line":3695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3694,"column":0},"generated":{"line":3696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3695,"column":0},"generated":{"line":3697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3696,"column":0},"generated":{"line":3698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3697,"column":0},"generated":{"line":3699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3698,"column":0},"generated":{"line":3700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3699,"column":0},"generated":{"line":3701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3700,"column":0},"generated":{"line":3702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3701,"column":0},"generated":{"line":3703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3702,"column":0},"generated":{"line":3704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3703,"column":0},"generated":{"line":3705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3704,"column":0},"generated":{"line":3706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3705,"column":0},"generated":{"line":3707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3706,"column":0},"generated":{"line":3708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3707,"column":0},"generated":{"line":3709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3708,"column":0},"generated":{"line":3710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3709,"column":0},"generated":{"line":3711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3710,"column":0},"generated":{"line":3712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3711,"column":0},"generated":{"line":3713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3712,"column":0},"generated":{"line":3714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3713,"column":0},"generated":{"line":3715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3714,"column":0},"generated":{"line":3716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3715,"column":0},"generated":{"line":3717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3716,"column":0},"generated":{"line":3718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3717,"column":0},"generated":{"line":3719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3718,"column":0},"generated":{"line":3720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3719,"column":0},"generated":{"line":3721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3720,"column":0},"generated":{"line":3722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3721,"column":0},"generated":{"line":3723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3722,"column":0},"generated":{"line":3724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3723,"column":0},"generated":{"line":3725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3724,"column":0},"generated":{"line":3726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3725,"column":0},"generated":{"line":3727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3726,"column":0},"generated":{"line":3728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3727,"column":0},"generated":{"line":3729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3728,"column":0},"generated":{"line":3730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3729,"column":0},"generated":{"line":3731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3730,"column":0},"generated":{"line":3732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3731,"column":0},"generated":{"line":3733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3732,"column":0},"generated":{"line":3734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3733,"column":0},"generated":{"line":3735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3734,"column":0},"generated":{"line":3736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3735,"column":0},"generated":{"line":3737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3736,"column":0},"generated":{"line":3738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3737,"column":0},"generated":{"line":3739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3738,"column":0},"generated":{"line":3740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3739,"column":0},"generated":{"line":3741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3740,"column":0},"generated":{"line":3742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3741,"column":0},"generated":{"line":3743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3742,"column":0},"generated":{"line":3744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3743,"column":0},"generated":{"line":3745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3744,"column":0},"generated":{"line":3746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3745,"column":0},"generated":{"line":3747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3746,"column":0},"generated":{"line":3748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3747,"column":0},"generated":{"line":3749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3748,"column":0},"generated":{"line":3750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3749,"column":0},"generated":{"line":3751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3750,"column":0},"generated":{"line":3752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3751,"column":0},"generated":{"line":3753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3752,"column":0},"generated":{"line":3754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3753,"column":0},"generated":{"line":3755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3754,"column":0},"generated":{"line":3756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3755,"column":0},"generated":{"line":3757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3756,"column":0},"generated":{"line":3758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3757,"column":0},"generated":{"line":3759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3758,"column":0},"generated":{"line":3760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3759,"column":0},"generated":{"line":3761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3760,"column":0},"generated":{"line":3762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3761,"column":0},"generated":{"line":3763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3762,"column":0},"generated":{"line":3764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3763,"column":0},"generated":{"line":3765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3764,"column":0},"generated":{"line":3766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3765,"column":0},"generated":{"line":3767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3766,"column":0},"generated":{"line":3768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3767,"column":0},"generated":{"line":3769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3768,"column":0},"generated":{"line":3770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3769,"column":0},"generated":{"line":3771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3770,"column":0},"generated":{"line":3772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3771,"column":0},"generated":{"line":3773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3772,"column":0},"generated":{"line":3774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3773,"column":0},"generated":{"line":3775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3774,"column":0},"generated":{"line":3776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3775,"column":0},"generated":{"line":3777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3776,"column":0},"generated":{"line":3778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3777,"column":0},"generated":{"line":3779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3778,"column":0},"generated":{"line":3780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3779,"column":0},"generated":{"line":3781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3780,"column":0},"generated":{"line":3782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3781,"column":0},"generated":{"line":3783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3782,"column":0},"generated":{"line":3784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3783,"column":0},"generated":{"line":3785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3784,"column":0},"generated":{"line":3786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3785,"column":0},"generated":{"line":3787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3786,"column":0},"generated":{"line":3788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3787,"column":0},"generated":{"line":3789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3788,"column":0},"generated":{"line":3790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3789,"column":0},"generated":{"line":3791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3790,"column":0},"generated":{"line":3792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3791,"column":0},"generated":{"line":3793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3792,"column":0},"generated":{"line":3794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3793,"column":0},"generated":{"line":3795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3794,"column":0},"generated":{"line":3796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3795,"column":0},"generated":{"line":3797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3796,"column":0},"generated":{"line":3798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3797,"column":0},"generated":{"line":3799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3798,"column":0},"generated":{"line":3800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3799,"column":0},"generated":{"line":3801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3800,"column":0},"generated":{"line":3802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3801,"column":0},"generated":{"line":3803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3802,"column":0},"generated":{"line":3804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3803,"column":0},"generated":{"line":3805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3804,"column":0},"generated":{"line":3806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3805,"column":0},"generated":{"line":3807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3806,"column":0},"generated":{"line":3808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3807,"column":0},"generated":{"line":3809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3808,"column":0},"generated":{"line":3810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3809,"column":0},"generated":{"line":3811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3810,"column":0},"generated":{"line":3812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3811,"column":0},"generated":{"line":3813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3812,"column":0},"generated":{"line":3814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3813,"column":0},"generated":{"line":3815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3814,"column":0},"generated":{"line":3816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3815,"column":0},"generated":{"line":3817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3816,"column":0},"generated":{"line":3818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3817,"column":0},"generated":{"line":3819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3818,"column":0},"generated":{"line":3820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3819,"column":0},"generated":{"line":3821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3820,"column":0},"generated":{"line":3822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3821,"column":0},"generated":{"line":3823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3822,"column":0},"generated":{"line":3824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3823,"column":0},"generated":{"line":3825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3824,"column":0},"generated":{"line":3826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3825,"column":0},"generated":{"line":3827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3826,"column":0},"generated":{"line":3828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3827,"column":0},"generated":{"line":3829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3828,"column":0},"generated":{"line":3830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3829,"column":0},"generated":{"line":3831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3830,"column":0},"generated":{"line":3832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3831,"column":0},"generated":{"line":3833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3832,"column":0},"generated":{"line":3834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3833,"column":0},"generated":{"line":3835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3834,"column":0},"generated":{"line":3836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3835,"column":0},"generated":{"line":3837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3836,"column":0},"generated":{"line":3838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3837,"column":0},"generated":{"line":3839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3838,"column":0},"generated":{"line":3840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3839,"column":0},"generated":{"line":3841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3840,"column":0},"generated":{"line":3842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3841,"column":0},"generated":{"line":3843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3842,"column":0},"generated":{"line":3844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3843,"column":0},"generated":{"line":3845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3844,"column":0},"generated":{"line":3846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3845,"column":0},"generated":{"line":3847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3846,"column":0},"generated":{"line":3848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3847,"column":0},"generated":{"line":3849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3848,"column":0},"generated":{"line":3850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3849,"column":0},"generated":{"line":3851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3850,"column":0},"generated":{"line":3852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3851,"column":0},"generated":{"line":3853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3852,"column":0},"generated":{"line":3854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3853,"column":0},"generated":{"line":3855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3854,"column":0},"generated":{"line":3856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3855,"column":0},"generated":{"line":3857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3856,"column":0},"generated":{"line":3858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3857,"column":0},"generated":{"line":3859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3858,"column":0},"generated":{"line":3860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3859,"column":0},"generated":{"line":3861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3860,"column":0},"generated":{"line":3862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3861,"column":0},"generated":{"line":3863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3862,"column":0},"generated":{"line":3864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3863,"column":0},"generated":{"line":3865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3864,"column":0},"generated":{"line":3866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3865,"column":0},"generated":{"line":3867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3866,"column":0},"generated":{"line":3868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3867,"column":0},"generated":{"line":3869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3868,"column":0},"generated":{"line":3870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3869,"column":0},"generated":{"line":3871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3870,"column":0},"generated":{"line":3872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3871,"column":0},"generated":{"line":3873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3872,"column":0},"generated":{"line":3874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3873,"column":0},"generated":{"line":3875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3874,"column":0},"generated":{"line":3876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3875,"column":0},"generated":{"line":3877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3876,"column":0},"generated":{"line":3878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3877,"column":0},"generated":{"line":3879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3878,"column":0},"generated":{"line":3880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3879,"column":0},"generated":{"line":3881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3880,"column":0},"generated":{"line":3882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3881,"column":0},"generated":{"line":3883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3882,"column":0},"generated":{"line":3884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3883,"column":0},"generated":{"line":3885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3884,"column":0},"generated":{"line":3886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3885,"column":0},"generated":{"line":3887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3886,"column":0},"generated":{"line":3888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3887,"column":0},"generated":{"line":3889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3888,"column":0},"generated":{"line":3890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3889,"column":0},"generated":{"line":3891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3890,"column":0},"generated":{"line":3892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3891,"column":0},"generated":{"line":3893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3892,"column":0},"generated":{"line":3894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3893,"column":0},"generated":{"line":3895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3894,"column":0},"generated":{"line":3896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3895,"column":0},"generated":{"line":3897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3896,"column":0},"generated":{"line":3898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3897,"column":0},"generated":{"line":3899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3898,"column":0},"generated":{"line":3900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3899,"column":0},"generated":{"line":3901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3900,"column":0},"generated":{"line":3902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3901,"column":0},"generated":{"line":3903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3902,"column":0},"generated":{"line":3904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3903,"column":0},"generated":{"line":3905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3904,"column":0},"generated":{"line":3906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3905,"column":0},"generated":{"line":3907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3906,"column":0},"generated":{"line":3908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3907,"column":0},"generated":{"line":3909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3908,"column":0},"generated":{"line":3910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3909,"column":0},"generated":{"line":3911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3910,"column":0},"generated":{"line":3912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3911,"column":0},"generated":{"line":3913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3912,"column":0},"generated":{"line":3914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3913,"column":0},"generated":{"line":3915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3914,"column":0},"generated":{"line":3916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3915,"column":0},"generated":{"line":3917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3916,"column":0},"generated":{"line":3918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3917,"column":0},"generated":{"line":3919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3918,"column":0},"generated":{"line":3920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3919,"column":0},"generated":{"line":3921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3920,"column":0},"generated":{"line":3922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3921,"column":0},"generated":{"line":3923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3922,"column":0},"generated":{"line":3924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3923,"column":0},"generated":{"line":3925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3924,"column":0},"generated":{"line":3926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3925,"column":0},"generated":{"line":3927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3926,"column":0},"generated":{"line":3928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3927,"column":0},"generated":{"line":3929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3928,"column":0},"generated":{"line":3930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3929,"column":0},"generated":{"line":3931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3930,"column":0},"generated":{"line":3932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3931,"column":0},"generated":{"line":3933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3932,"column":0},"generated":{"line":3934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3933,"column":0},"generated":{"line":3935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3934,"column":0},"generated":{"line":3936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3935,"column":0},"generated":{"line":3937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3936,"column":0},"generated":{"line":3938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3937,"column":0},"generated":{"line":3939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3938,"column":0},"generated":{"line":3940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3939,"column":0},"generated":{"line":3941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3940,"column":0},"generated":{"line":3942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3941,"column":0},"generated":{"line":3943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3942,"column":0},"generated":{"line":3944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3943,"column":0},"generated":{"line":3945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3944,"column":0},"generated":{"line":3946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3945,"column":0},"generated":{"line":3947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3946,"column":0},"generated":{"line":3948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3947,"column":0},"generated":{"line":3949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3948,"column":0},"generated":{"line":3950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3949,"column":0},"generated":{"line":3951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3950,"column":0},"generated":{"line":3952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3951,"column":0},"generated":{"line":3953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3952,"column":0},"generated":{"line":3954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3953,"column":0},"generated":{"line":3955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3954,"column":0},"generated":{"line":3956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3955,"column":0},"generated":{"line":3957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3956,"column":0},"generated":{"line":3958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3957,"column":0},"generated":{"line":3959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3958,"column":0},"generated":{"line":3960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3959,"column":0},"generated":{"line":3961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3960,"column":0},"generated":{"line":3962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3961,"column":0},"generated":{"line":3963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3962,"column":0},"generated":{"line":3964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3963,"column":0},"generated":{"line":3965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3964,"column":0},"generated":{"line":3966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3965,"column":0},"generated":{"line":3967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3966,"column":0},"generated":{"line":3968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3967,"column":0},"generated":{"line":3969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3968,"column":0},"generated":{"line":3970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3969,"column":0},"generated":{"line":3971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3970,"column":0},"generated":{"line":3972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3971,"column":0},"generated":{"line":3973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3972,"column":0},"generated":{"line":3974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3973,"column":0},"generated":{"line":3975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3974,"column":0},"generated":{"line":3976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3975,"column":0},"generated":{"line":3977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3976,"column":0},"generated":{"line":3978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3977,"column":0},"generated":{"line":3979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3978,"column":0},"generated":{"line":3980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3979,"column":0},"generated":{"line":3981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3980,"column":0},"generated":{"line":3982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3981,"column":0},"generated":{"line":3983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3982,"column":0},"generated":{"line":3984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3983,"column":0},"generated":{"line":3985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3984,"column":0},"generated":{"line":3986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3985,"column":0},"generated":{"line":3987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3986,"column":0},"generated":{"line":3988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3987,"column":0},"generated":{"line":3989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3988,"column":0},"generated":{"line":3990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3989,"column":0},"generated":{"line":3991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3990,"column":0},"generated":{"line":3992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3991,"column":0},"generated":{"line":3993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3992,"column":0},"generated":{"line":3994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3993,"column":0},"generated":{"line":3995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3994,"column":0},"generated":{"line":3996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3995,"column":0},"generated":{"line":3997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3996,"column":0},"generated":{"line":3998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3997,"column":0},"generated":{"line":3999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3998,"column":0},"generated":{"line":4000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":3999,"column":0},"generated":{"line":4001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4000,"column":0},"generated":{"line":4002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4001,"column":0},"generated":{"line":4003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4002,"column":0},"generated":{"line":4004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4003,"column":0},"generated":{"line":4005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4004,"column":0},"generated":{"line":4006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4005,"column":0},"generated":{"line":4007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4006,"column":0},"generated":{"line":4008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4007,"column":0},"generated":{"line":4009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4008,"column":0},"generated":{"line":4010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4009,"column":0},"generated":{"line":4011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4010,"column":0},"generated":{"line":4012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4011,"column":0},"generated":{"line":4013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4012,"column":0},"generated":{"line":4014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4013,"column":0},"generated":{"line":4015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4014,"column":0},"generated":{"line":4016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4015,"column":0},"generated":{"line":4017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4016,"column":0},"generated":{"line":4018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4017,"column":0},"generated":{"line":4019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4018,"column":0},"generated":{"line":4020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4019,"column":0},"generated":{"line":4021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4020,"column":0},"generated":{"line":4022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4021,"column":0},"generated":{"line":4023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4022,"column":0},"generated":{"line":4024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4023,"column":0},"generated":{"line":4025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4024,"column":0},"generated":{"line":4026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4025,"column":0},"generated":{"line":4027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4026,"column":0},"generated":{"line":4028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4027,"column":0},"generated":{"line":4029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4028,"column":0},"generated":{"line":4030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4029,"column":0},"generated":{"line":4031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4030,"column":0},"generated":{"line":4032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4031,"column":0},"generated":{"line":4033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4032,"column":0},"generated":{"line":4034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4033,"column":0},"generated":{"line":4035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4034,"column":0},"generated":{"line":4036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4035,"column":0},"generated":{"line":4037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4036,"column":0},"generated":{"line":4038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4037,"column":0},"generated":{"line":4039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4038,"column":0},"generated":{"line":4040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4039,"column":0},"generated":{"line":4041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4040,"column":0},"generated":{"line":4042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4041,"column":0},"generated":{"line":4043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4042,"column":0},"generated":{"line":4044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4043,"column":0},"generated":{"line":4045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4044,"column":0},"generated":{"line":4046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4045,"column":0},"generated":{"line":4047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4046,"column":0},"generated":{"line":4048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4047,"column":0},"generated":{"line":4049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4048,"column":0},"generated":{"line":4050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4049,"column":0},"generated":{"line":4051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4050,"column":0},"generated":{"line":4052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4051,"column":0},"generated":{"line":4053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4052,"column":0},"generated":{"line":4054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4053,"column":0},"generated":{"line":4055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4054,"column":0},"generated":{"line":4056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4055,"column":0},"generated":{"line":4057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4056,"column":0},"generated":{"line":4058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4057,"column":0},"generated":{"line":4059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4058,"column":0},"generated":{"line":4060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4059,"column":0},"generated":{"line":4061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4060,"column":0},"generated":{"line":4062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4061,"column":0},"generated":{"line":4063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4062,"column":0},"generated":{"line":4064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4063,"column":0},"generated":{"line":4065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4064,"column":0},"generated":{"line":4066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4065,"column":0},"generated":{"line":4067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4066,"column":0},"generated":{"line":4068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4067,"column":0},"generated":{"line":4069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4068,"column":0},"generated":{"line":4070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4069,"column":0},"generated":{"line":4071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4070,"column":0},"generated":{"line":4072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4071,"column":0},"generated":{"line":4073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4072,"column":0},"generated":{"line":4074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4073,"column":0},"generated":{"line":4075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4074,"column":0},"generated":{"line":4076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4075,"column":0},"generated":{"line":4077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4076,"column":0},"generated":{"line":4078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4077,"column":0},"generated":{"line":4079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4078,"column":0},"generated":{"line":4080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4079,"column":0},"generated":{"line":4081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4080,"column":0},"generated":{"line":4082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4081,"column":0},"generated":{"line":4083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4082,"column":0},"generated":{"line":4084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4083,"column":0},"generated":{"line":4085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4084,"column":0},"generated":{"line":4086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4085,"column":0},"generated":{"line":4087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4086,"column":0},"generated":{"line":4088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4087,"column":0},"generated":{"line":4089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4088,"column":0},"generated":{"line":4090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4089,"column":0},"generated":{"line":4091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4090,"column":0},"generated":{"line":4092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4091,"column":0},"generated":{"line":4093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4092,"column":0},"generated":{"line":4094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4093,"column":0},"generated":{"line":4095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4094,"column":0},"generated":{"line":4096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4095,"column":0},"generated":{"line":4097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4096,"column":0},"generated":{"line":4098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4097,"column":0},"generated":{"line":4099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4098,"column":0},"generated":{"line":4100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4099,"column":0},"generated":{"line":4101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4100,"column":0},"generated":{"line":4102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4101,"column":0},"generated":{"line":4103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4102,"column":0},"generated":{"line":4104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4103,"column":0},"generated":{"line":4105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4104,"column":0},"generated":{"line":4106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4105,"column":0},"generated":{"line":4107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4106,"column":0},"generated":{"line":4108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4107,"column":0},"generated":{"line":4109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4108,"column":0},"generated":{"line":4110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4109,"column":0},"generated":{"line":4111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4110,"column":0},"generated":{"line":4112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4111,"column":0},"generated":{"line":4113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4112,"column":0},"generated":{"line":4114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4113,"column":0},"generated":{"line":4115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4114,"column":0},"generated":{"line":4116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4115,"column":0},"generated":{"line":4117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4116,"column":0},"generated":{"line":4118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4117,"column":0},"generated":{"line":4119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4118,"column":0},"generated":{"line":4120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4119,"column":0},"generated":{"line":4121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4120,"column":0},"generated":{"line":4122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4121,"column":0},"generated":{"line":4123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4122,"column":0},"generated":{"line":4124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4123,"column":0},"generated":{"line":4125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4124,"column":0},"generated":{"line":4126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4125,"column":0},"generated":{"line":4127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4126,"column":0},"generated":{"line":4128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4127,"column":0},"generated":{"line":4129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4128,"column":0},"generated":{"line":4130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4129,"column":0},"generated":{"line":4131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4130,"column":0},"generated":{"line":4132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4131,"column":0},"generated":{"line":4133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4132,"column":0},"generated":{"line":4134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4133,"column":0},"generated":{"line":4135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4134,"column":0},"generated":{"line":4136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4135,"column":0},"generated":{"line":4137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4136,"column":0},"generated":{"line":4138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4137,"column":0},"generated":{"line":4139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4138,"column":0},"generated":{"line":4140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4139,"column":0},"generated":{"line":4141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4140,"column":0},"generated":{"line":4142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4141,"column":0},"generated":{"line":4143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4142,"column":0},"generated":{"line":4144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4143,"column":0},"generated":{"line":4145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4144,"column":0},"generated":{"line":4146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4145,"column":0},"generated":{"line":4147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4146,"column":0},"generated":{"line":4148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4147,"column":0},"generated":{"line":4149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4148,"column":0},"generated":{"line":4150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4149,"column":0},"generated":{"line":4151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4150,"column":0},"generated":{"line":4152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4151,"column":0},"generated":{"line":4153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4152,"column":0},"generated":{"line":4154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4153,"column":0},"generated":{"line":4155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4154,"column":0},"generated":{"line":4156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4155,"column":0},"generated":{"line":4157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4156,"column":0},"generated":{"line":4158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4157,"column":0},"generated":{"line":4159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4158,"column":0},"generated":{"line":4160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4159,"column":0},"generated":{"line":4161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4160,"column":0},"generated":{"line":4162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4161,"column":0},"generated":{"line":4163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4162,"column":0},"generated":{"line":4164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4163,"column":0},"generated":{"line":4165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4164,"column":0},"generated":{"line":4166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4165,"column":0},"generated":{"line":4167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4166,"column":0},"generated":{"line":4168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4167,"column":0},"generated":{"line":4169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4168,"column":0},"generated":{"line":4170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4169,"column":0},"generated":{"line":4171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4170,"column":0},"generated":{"line":4172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4171,"column":0},"generated":{"line":4173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4172,"column":0},"generated":{"line":4174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4173,"column":0},"generated":{"line":4175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4174,"column":0},"generated":{"line":4176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4175,"column":0},"generated":{"line":4177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4176,"column":0},"generated":{"line":4178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4177,"column":0},"generated":{"line":4179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4178,"column":0},"generated":{"line":4180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4179,"column":0},"generated":{"line":4181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4180,"column":0},"generated":{"line":4182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4181,"column":0},"generated":{"line":4183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4182,"column":0},"generated":{"line":4184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4183,"column":0},"generated":{"line":4185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4184,"column":0},"generated":{"line":4186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4185,"column":0},"generated":{"line":4187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4186,"column":0},"generated":{"line":4188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4187,"column":0},"generated":{"line":4189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4188,"column":0},"generated":{"line":4190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4189,"column":0},"generated":{"line":4191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4190,"column":0},"generated":{"line":4192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4191,"column":0},"generated":{"line":4193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4192,"column":0},"generated":{"line":4194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4193,"column":0},"generated":{"line":4195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4194,"column":0},"generated":{"line":4196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4195,"column":0},"generated":{"line":4197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4196,"column":0},"generated":{"line":4198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4197,"column":0},"generated":{"line":4199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4198,"column":0},"generated":{"line":4200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4199,"column":0},"generated":{"line":4201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4200,"column":0},"generated":{"line":4202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4201,"column":0},"generated":{"line":4203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4202,"column":0},"generated":{"line":4204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4203,"column":0},"generated":{"line":4205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4204,"column":0},"generated":{"line":4206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4205,"column":0},"generated":{"line":4207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4206,"column":0},"generated":{"line":4208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4207,"column":0},"generated":{"line":4209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4208,"column":0},"generated":{"line":4210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4209,"column":0},"generated":{"line":4211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4210,"column":0},"generated":{"line":4212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4211,"column":0},"generated":{"line":4213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4212,"column":0},"generated":{"line":4214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4213,"column":0},"generated":{"line":4215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4214,"column":0},"generated":{"line":4216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4215,"column":0},"generated":{"line":4217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4216,"column":0},"generated":{"line":4218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4217,"column":0},"generated":{"line":4219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4218,"column":0},"generated":{"line":4220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4219,"column":0},"generated":{"line":4221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4220,"column":0},"generated":{"line":4222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4221,"column":0},"generated":{"line":4223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4222,"column":0},"generated":{"line":4224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4223,"column":0},"generated":{"line":4225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4224,"column":0},"generated":{"line":4226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4225,"column":0},"generated":{"line":4227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4226,"column":0},"generated":{"line":4228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4227,"column":0},"generated":{"line":4229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4228,"column":0},"generated":{"line":4230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4229,"column":0},"generated":{"line":4231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4230,"column":0},"generated":{"line":4232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4231,"column":0},"generated":{"line":4233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4232,"column":0},"generated":{"line":4234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4233,"column":0},"generated":{"line":4235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4234,"column":0},"generated":{"line":4236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4235,"column":0},"generated":{"line":4237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4236,"column":0},"generated":{"line":4238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4237,"column":0},"generated":{"line":4239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4238,"column":0},"generated":{"line":4240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4239,"column":0},"generated":{"line":4241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4240,"column":0},"generated":{"line":4242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4241,"column":0},"generated":{"line":4243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4242,"column":0},"generated":{"line":4244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4243,"column":0},"generated":{"line":4245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4244,"column":0},"generated":{"line":4246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4245,"column":0},"generated":{"line":4247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4246,"column":0},"generated":{"line":4248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4247,"column":0},"generated":{"line":4249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4248,"column":0},"generated":{"line":4250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4249,"column":0},"generated":{"line":4251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4250,"column":0},"generated":{"line":4252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4251,"column":0},"generated":{"line":4253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4252,"column":0},"generated":{"line":4254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4253,"column":0},"generated":{"line":4255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4254,"column":0},"generated":{"line":4256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4255,"column":0},"generated":{"line":4257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4256,"column":0},"generated":{"line":4258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4257,"column":0},"generated":{"line":4259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4258,"column":0},"generated":{"line":4260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4259,"column":0},"generated":{"line":4261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4260,"column":0},"generated":{"line":4262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4261,"column":0},"generated":{"line":4263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4262,"column":0},"generated":{"line":4264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4263,"column":0},"generated":{"line":4265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4264,"column":0},"generated":{"line":4266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4265,"column":0},"generated":{"line":4267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4266,"column":0},"generated":{"line":4268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4267,"column":0},"generated":{"line":4269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4268,"column":0},"generated":{"line":4270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4269,"column":0},"generated":{"line":4271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4270,"column":0},"generated":{"line":4272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4271,"column":0},"generated":{"line":4273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4272,"column":0},"generated":{"line":4274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4273,"column":0},"generated":{"line":4275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4274,"column":0},"generated":{"line":4276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4275,"column":0},"generated":{"line":4277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4276,"column":0},"generated":{"line":4278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4277,"column":0},"generated":{"line":4279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4278,"column":0},"generated":{"line":4280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4279,"column":0},"generated":{"line":4281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4280,"column":0},"generated":{"line":4282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4281,"column":0},"generated":{"line":4283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4282,"column":0},"generated":{"line":4284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4283,"column":0},"generated":{"line":4285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4284,"column":0},"generated":{"line":4286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4285,"column":0},"generated":{"line":4287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4286,"column":0},"generated":{"line":4288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4287,"column":0},"generated":{"line":4289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4288,"column":0},"generated":{"line":4290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4289,"column":0},"generated":{"line":4291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4290,"column":0},"generated":{"line":4292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4291,"column":0},"generated":{"line":4293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4292,"column":0},"generated":{"line":4294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4293,"column":0},"generated":{"line":4295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4294,"column":0},"generated":{"line":4296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4295,"column":0},"generated":{"line":4297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4296,"column":0},"generated":{"line":4298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4297,"column":0},"generated":{"line":4299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4298,"column":0},"generated":{"line":4300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4299,"column":0},"generated":{"line":4301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4300,"column":0},"generated":{"line":4302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4301,"column":0},"generated":{"line":4303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4302,"column":0},"generated":{"line":4304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4303,"column":0},"generated":{"line":4305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4304,"column":0},"generated":{"line":4306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4305,"column":0},"generated":{"line":4307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4306,"column":0},"generated":{"line":4308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4307,"column":0},"generated":{"line":4309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4308,"column":0},"generated":{"line":4310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4309,"column":0},"generated":{"line":4311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4310,"column":0},"generated":{"line":4312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4311,"column":0},"generated":{"line":4313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4312,"column":0},"generated":{"line":4314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4313,"column":0},"generated":{"line":4315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4314,"column":0},"generated":{"line":4316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4315,"column":0},"generated":{"line":4317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4316,"column":0},"generated":{"line":4318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4317,"column":0},"generated":{"line":4319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4318,"column":0},"generated":{"line":4320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4319,"column":0},"generated":{"line":4321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4320,"column":0},"generated":{"line":4322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4321,"column":0},"generated":{"line":4323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4322,"column":0},"generated":{"line":4324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4323,"column":0},"generated":{"line":4325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4324,"column":0},"generated":{"line":4326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4325,"column":0},"generated":{"line":4327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4326,"column":0},"generated":{"line":4328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4327,"column":0},"generated":{"line":4329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4328,"column":0},"generated":{"line":4330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4329,"column":0},"generated":{"line":4331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4330,"column":0},"generated":{"line":4332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4331,"column":0},"generated":{"line":4333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4332,"column":0},"generated":{"line":4334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4333,"column":0},"generated":{"line":4335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4334,"column":0},"generated":{"line":4336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4335,"column":0},"generated":{"line":4337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4336,"column":0},"generated":{"line":4338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4337,"column":0},"generated":{"line":4339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4338,"column":0},"generated":{"line":4340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4339,"column":0},"generated":{"line":4341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4340,"column":0},"generated":{"line":4342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4341,"column":0},"generated":{"line":4343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4342,"column":0},"generated":{"line":4344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4343,"column":0},"generated":{"line":4345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4344,"column":0},"generated":{"line":4346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4345,"column":0},"generated":{"line":4347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4346,"column":0},"generated":{"line":4348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4347,"column":0},"generated":{"line":4349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4348,"column":0},"generated":{"line":4350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4349,"column":0},"generated":{"line":4351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4350,"column":0},"generated":{"line":4352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4351,"column":0},"generated":{"line":4353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4352,"column":0},"generated":{"line":4354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4353,"column":0},"generated":{"line":4355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4354,"column":0},"generated":{"line":4356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4355,"column":0},"generated":{"line":4357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4356,"column":0},"generated":{"line":4358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4357,"column":0},"generated":{"line":4359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4358,"column":0},"generated":{"line":4360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4359,"column":0},"generated":{"line":4361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4360,"column":0},"generated":{"line":4362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4361,"column":0},"generated":{"line":4363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4362,"column":0},"generated":{"line":4364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4363,"column":0},"generated":{"line":4365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4364,"column":0},"generated":{"line":4366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4365,"column":0},"generated":{"line":4367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4366,"column":0},"generated":{"line":4368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4367,"column":0},"generated":{"line":4369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4368,"column":0},"generated":{"line":4370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4369,"column":0},"generated":{"line":4371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4370,"column":0},"generated":{"line":4372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4371,"column":0},"generated":{"line":4373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4372,"column":0},"generated":{"line":4374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4373,"column":0},"generated":{"line":4375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4374,"column":0},"generated":{"line":4376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4375,"column":0},"generated":{"line":4377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4376,"column":0},"generated":{"line":4378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4377,"column":0},"generated":{"line":4379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4378,"column":0},"generated":{"line":4380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4379,"column":0},"generated":{"line":4381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4380,"column":0},"generated":{"line":4382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4381,"column":0},"generated":{"line":4383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4382,"column":0},"generated":{"line":4384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4383,"column":0},"generated":{"line":4385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4384,"column":0},"generated":{"line":4386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4385,"column":0},"generated":{"line":4387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4386,"column":0},"generated":{"line":4388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4387,"column":0},"generated":{"line":4389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4388,"column":0},"generated":{"line":4390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4389,"column":0},"generated":{"line":4391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4390,"column":0},"generated":{"line":4392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4391,"column":0},"generated":{"line":4393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4392,"column":0},"generated":{"line":4394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4393,"column":0},"generated":{"line":4395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4394,"column":0},"generated":{"line":4396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4395,"column":0},"generated":{"line":4397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4396,"column":0},"generated":{"line":4398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4397,"column":0},"generated":{"line":4399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4398,"column":0},"generated":{"line":4400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4399,"column":0},"generated":{"line":4401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4400,"column":0},"generated":{"line":4402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4401,"column":0},"generated":{"line":4403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4402,"column":0},"generated":{"line":4404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4403,"column":0},"generated":{"line":4405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4404,"column":0},"generated":{"line":4406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4405,"column":0},"generated":{"line":4407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4406,"column":0},"generated":{"line":4408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4407,"column":0},"generated":{"line":4409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4408,"column":0},"generated":{"line":4410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4409,"column":0},"generated":{"line":4411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4410,"column":0},"generated":{"line":4412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4411,"column":0},"generated":{"line":4413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4412,"column":0},"generated":{"line":4414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4413,"column":0},"generated":{"line":4415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4414,"column":0},"generated":{"line":4416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4415,"column":0},"generated":{"line":4417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4416,"column":0},"generated":{"line":4418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4417,"column":0},"generated":{"line":4419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4418,"column":0},"generated":{"line":4420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4419,"column":0},"generated":{"line":4421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4420,"column":0},"generated":{"line":4422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4421,"column":0},"generated":{"line":4423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4422,"column":0},"generated":{"line":4424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4423,"column":0},"generated":{"line":4425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4424,"column":0},"generated":{"line":4426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4425,"column":0},"generated":{"line":4427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4426,"column":0},"generated":{"line":4428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4427,"column":0},"generated":{"line":4429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4428,"column":0},"generated":{"line":4430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4429,"column":0},"generated":{"line":4431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4430,"column":0},"generated":{"line":4432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4431,"column":0},"generated":{"line":4433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4432,"column":0},"generated":{"line":4434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4433,"column":0},"generated":{"line":4435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4434,"column":0},"generated":{"line":4436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4435,"column":0},"generated":{"line":4437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4436,"column":0},"generated":{"line":4438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4437,"column":0},"generated":{"line":4439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4438,"column":0},"generated":{"line":4440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4439,"column":0},"generated":{"line":4441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4440,"column":0},"generated":{"line":4442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4441,"column":0},"generated":{"line":4443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4442,"column":0},"generated":{"line":4444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4443,"column":0},"generated":{"line":4445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4444,"column":0},"generated":{"line":4446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4445,"column":0},"generated":{"line":4447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4446,"column":0},"generated":{"line":4448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4447,"column":0},"generated":{"line":4449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4448,"column":0},"generated":{"line":4450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4449,"column":0},"generated":{"line":4451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4450,"column":0},"generated":{"line":4452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4451,"column":0},"generated":{"line":4453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4452,"column":0},"generated":{"line":4454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4453,"column":0},"generated":{"line":4455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4454,"column":0},"generated":{"line":4456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4455,"column":0},"generated":{"line":4457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4456,"column":0},"generated":{"line":4458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4457,"column":0},"generated":{"line":4459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4458,"column":0},"generated":{"line":4460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4459,"column":0},"generated":{"line":4461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4460,"column":0},"generated":{"line":4462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4461,"column":0},"generated":{"line":4463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4462,"column":0},"generated":{"line":4464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4463,"column":0},"generated":{"line":4465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4464,"column":0},"generated":{"line":4466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4465,"column":0},"generated":{"line":4467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4466,"column":0},"generated":{"line":4468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4467,"column":0},"generated":{"line":4469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4468,"column":0},"generated":{"line":4470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4469,"column":0},"generated":{"line":4471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4470,"column":0},"generated":{"line":4472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4471,"column":0},"generated":{"line":4473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4472,"column":0},"generated":{"line":4474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4473,"column":0},"generated":{"line":4475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4474,"column":0},"generated":{"line":4476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4475,"column":0},"generated":{"line":4477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4476,"column":0},"generated":{"line":4478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4477,"column":0},"generated":{"line":4479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4478,"column":0},"generated":{"line":4480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4479,"column":0},"generated":{"line":4481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4480,"column":0},"generated":{"line":4482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4481,"column":0},"generated":{"line":4483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4482,"column":0},"generated":{"line":4484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4483,"column":0},"generated":{"line":4485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4484,"column":0},"generated":{"line":4486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4485,"column":0},"generated":{"line":4487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4486,"column":0},"generated":{"line":4488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4487,"column":0},"generated":{"line":4489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4488,"column":0},"generated":{"line":4490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4489,"column":0},"generated":{"line":4491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4490,"column":0},"generated":{"line":4492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4491,"column":0},"generated":{"line":4493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4492,"column":0},"generated":{"line":4494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4493,"column":0},"generated":{"line":4495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4494,"column":0},"generated":{"line":4496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4495,"column":0},"generated":{"line":4497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4496,"column":0},"generated":{"line":4498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4497,"column":0},"generated":{"line":4499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4498,"column":0},"generated":{"line":4500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4499,"column":0},"generated":{"line":4501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4500,"column":0},"generated":{"line":4502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4501,"column":0},"generated":{"line":4503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4502,"column":0},"generated":{"line":4504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4503,"column":0},"generated":{"line":4505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4504,"column":0},"generated":{"line":4506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4505,"column":0},"generated":{"line":4507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4506,"column":0},"generated":{"line":4508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4507,"column":0},"generated":{"line":4509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4508,"column":0},"generated":{"line":4510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4509,"column":0},"generated":{"line":4511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4510,"column":0},"generated":{"line":4512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4511,"column":0},"generated":{"line":4513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4512,"column":0},"generated":{"line":4514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4513,"column":0},"generated":{"line":4515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4514,"column":0},"generated":{"line":4516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4515,"column":0},"generated":{"line":4517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4516,"column":0},"generated":{"line":4518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4517,"column":0},"generated":{"line":4519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4518,"column":0},"generated":{"line":4520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4519,"column":0},"generated":{"line":4521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4520,"column":0},"generated":{"line":4522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4521,"column":0},"generated":{"line":4523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4522,"column":0},"generated":{"line":4524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4523,"column":0},"generated":{"line":4525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4524,"column":0},"generated":{"line":4526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4525,"column":0},"generated":{"line":4527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4526,"column":0},"generated":{"line":4528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4527,"column":0},"generated":{"line":4529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4528,"column":0},"generated":{"line":4530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4529,"column":0},"generated":{"line":4531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4530,"column":0},"generated":{"line":4532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4531,"column":0},"generated":{"line":4533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4532,"column":0},"generated":{"line":4534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4533,"column":0},"generated":{"line":4535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4534,"column":0},"generated":{"line":4536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4535,"column":0},"generated":{"line":4537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4536,"column":0},"generated":{"line":4538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4537,"column":0},"generated":{"line":4539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4538,"column":0},"generated":{"line":4540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4539,"column":0},"generated":{"line":4541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4540,"column":0},"generated":{"line":4542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4541,"column":0},"generated":{"line":4543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4542,"column":0},"generated":{"line":4544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4543,"column":0},"generated":{"line":4545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4544,"column":0},"generated":{"line":4546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4545,"column":0},"generated":{"line":4547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4546,"column":0},"generated":{"line":4548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4547,"column":0},"generated":{"line":4549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4548,"column":0},"generated":{"line":4550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4549,"column":0},"generated":{"line":4551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4550,"column":0},"generated":{"line":4552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4551,"column":0},"generated":{"line":4553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4552,"column":0},"generated":{"line":4554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4553,"column":0},"generated":{"line":4555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4554,"column":0},"generated":{"line":4556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4555,"column":0},"generated":{"line":4557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4556,"column":0},"generated":{"line":4558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4557,"column":0},"generated":{"line":4559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4558,"column":0},"generated":{"line":4560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4559,"column":0},"generated":{"line":4561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4560,"column":0},"generated":{"line":4562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4561,"column":0},"generated":{"line":4563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4562,"column":0},"generated":{"line":4564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4563,"column":0},"generated":{"line":4565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4564,"column":0},"generated":{"line":4566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4565,"column":0},"generated":{"line":4567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4566,"column":0},"generated":{"line":4568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4567,"column":0},"generated":{"line":4569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4568,"column":0},"generated":{"line":4570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4569,"column":0},"generated":{"line":4571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4570,"column":0},"generated":{"line":4572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4571,"column":0},"generated":{"line":4573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4572,"column":0},"generated":{"line":4574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4573,"column":0},"generated":{"line":4575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4574,"column":0},"generated":{"line":4576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4575,"column":0},"generated":{"line":4577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4576,"column":0},"generated":{"line":4578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4577,"column":0},"generated":{"line":4579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4578,"column":0},"generated":{"line":4580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4579,"column":0},"generated":{"line":4581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4580,"column":0},"generated":{"line":4582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4581,"column":0},"generated":{"line":4583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4582,"column":0},"generated":{"line":4584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4583,"column":0},"generated":{"line":4585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4584,"column":0},"generated":{"line":4586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4585,"column":0},"generated":{"line":4587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4586,"column":0},"generated":{"line":4588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4587,"column":0},"generated":{"line":4589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4588,"column":0},"generated":{"line":4590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4589,"column":0},"generated":{"line":4591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4590,"column":0},"generated":{"line":4592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4591,"column":0},"generated":{"line":4593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4592,"column":0},"generated":{"line":4594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4593,"column":0},"generated":{"line":4595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4594,"column":0},"generated":{"line":4596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4595,"column":0},"generated":{"line":4597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4596,"column":0},"generated":{"line":4598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4597,"column":0},"generated":{"line":4599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4598,"column":0},"generated":{"line":4600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4599,"column":0},"generated":{"line":4601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4600,"column":0},"generated":{"line":4602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4601,"column":0},"generated":{"line":4603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4602,"column":0},"generated":{"line":4604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4603,"column":0},"generated":{"line":4605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4604,"column":0},"generated":{"line":4606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4605,"column":0},"generated":{"line":4607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4606,"column":0},"generated":{"line":4608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4607,"column":0},"generated":{"line":4609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4608,"column":0},"generated":{"line":4610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4609,"column":0},"generated":{"line":4611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4610,"column":0},"generated":{"line":4612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4611,"column":0},"generated":{"line":4613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4612,"column":0},"generated":{"line":4614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4613,"column":0},"generated":{"line":4615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4614,"column":0},"generated":{"line":4616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4615,"column":0},"generated":{"line":4617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4616,"column":0},"generated":{"line":4618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4617,"column":0},"generated":{"line":4619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4618,"column":0},"generated":{"line":4620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4619,"column":0},"generated":{"line":4621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4620,"column":0},"generated":{"line":4622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4621,"column":0},"generated":{"line":4623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4622,"column":0},"generated":{"line":4624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4623,"column":0},"generated":{"line":4625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4624,"column":0},"generated":{"line":4626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4625,"column":0},"generated":{"line":4627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4626,"column":0},"generated":{"line":4628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4627,"column":0},"generated":{"line":4629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4628,"column":0},"generated":{"line":4630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4629,"column":0},"generated":{"line":4631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4630,"column":0},"generated":{"line":4632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4631,"column":0},"generated":{"line":4633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4632,"column":0},"generated":{"line":4634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4633,"column":0},"generated":{"line":4635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4634,"column":0},"generated":{"line":4636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4635,"column":0},"generated":{"line":4637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4636,"column":0},"generated":{"line":4638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4637,"column":0},"generated":{"line":4639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4638,"column":0},"generated":{"line":4640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4639,"column":0},"generated":{"line":4641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4640,"column":0},"generated":{"line":4642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4641,"column":0},"generated":{"line":4643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4642,"column":0},"generated":{"line":4644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4643,"column":0},"generated":{"line":4645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4644,"column":0},"generated":{"line":4646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4645,"column":0},"generated":{"line":4647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4646,"column":0},"generated":{"line":4648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4647,"column":0},"generated":{"line":4649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4648,"column":0},"generated":{"line":4650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4649,"column":0},"generated":{"line":4651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4650,"column":0},"generated":{"line":4652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4651,"column":0},"generated":{"line":4653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4652,"column":0},"generated":{"line":4654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4653,"column":0},"generated":{"line":4655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4654,"column":0},"generated":{"line":4656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4655,"column":0},"generated":{"line":4657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4656,"column":0},"generated":{"line":4658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4657,"column":0},"generated":{"line":4659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4658,"column":0},"generated":{"line":4660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4659,"column":0},"generated":{"line":4661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4660,"column":0},"generated":{"line":4662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4661,"column":0},"generated":{"line":4663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4662,"column":0},"generated":{"line":4664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4663,"column":0},"generated":{"line":4665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4664,"column":0},"generated":{"line":4666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4665,"column":0},"generated":{"line":4667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4666,"column":0},"generated":{"line":4668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4667,"column":0},"generated":{"line":4669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4668,"column":0},"generated":{"line":4670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4669,"column":0},"generated":{"line":4671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4670,"column":0},"generated":{"line":4672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4671,"column":0},"generated":{"line":4673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4672,"column":0},"generated":{"line":4674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4673,"column":0},"generated":{"line":4675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4674,"column":0},"generated":{"line":4676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4675,"column":0},"generated":{"line":4677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4676,"column":0},"generated":{"line":4678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4677,"column":0},"generated":{"line":4679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4678,"column":0},"generated":{"line":4680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4679,"column":0},"generated":{"line":4681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4680,"column":0},"generated":{"line":4682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4681,"column":0},"generated":{"line":4683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4682,"column":0},"generated":{"line":4684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4683,"column":0},"generated":{"line":4685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4684,"column":0},"generated":{"line":4686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4685,"column":0},"generated":{"line":4687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4686,"column":0},"generated":{"line":4688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4687,"column":0},"generated":{"line":4689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4688,"column":0},"generated":{"line":4690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4689,"column":0},"generated":{"line":4691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4690,"column":0},"generated":{"line":4692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4691,"column":0},"generated":{"line":4693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4692,"column":0},"generated":{"line":4694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4693,"column":0},"generated":{"line":4695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4694,"column":0},"generated":{"line":4696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4695,"column":0},"generated":{"line":4697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4696,"column":0},"generated":{"line":4698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4697,"column":0},"generated":{"line":4699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4698,"column":0},"generated":{"line":4700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4699,"column":0},"generated":{"line":4701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4700,"column":0},"generated":{"line":4702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4701,"column":0},"generated":{"line":4703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4702,"column":0},"generated":{"line":4704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4703,"column":0},"generated":{"line":4705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4704,"column":0},"generated":{"line":4706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4705,"column":0},"generated":{"line":4707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4706,"column":0},"generated":{"line":4708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4707,"column":0},"generated":{"line":4709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4708,"column":0},"generated":{"line":4710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4709,"column":0},"generated":{"line":4711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4710,"column":0},"generated":{"line":4712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4711,"column":0},"generated":{"line":4713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4712,"column":0},"generated":{"line":4714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4713,"column":0},"generated":{"line":4715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4714,"column":0},"generated":{"line":4716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4715,"column":0},"generated":{"line":4717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4716,"column":0},"generated":{"line":4718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4717,"column":0},"generated":{"line":4719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4718,"column":0},"generated":{"line":4720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4719,"column":0},"generated":{"line":4721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4720,"column":0},"generated":{"line":4722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4721,"column":0},"generated":{"line":4723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4722,"column":0},"generated":{"line":4724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4723,"column":0},"generated":{"line":4725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4724,"column":0},"generated":{"line":4726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4725,"column":0},"generated":{"line":4727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4726,"column":0},"generated":{"line":4728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4727,"column":0},"generated":{"line":4729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4728,"column":0},"generated":{"line":4730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4729,"column":0},"generated":{"line":4731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4730,"column":0},"generated":{"line":4732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4731,"column":0},"generated":{"line":4733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4732,"column":0},"generated":{"line":4734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4733,"column":0},"generated":{"line":4735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4734,"column":0},"generated":{"line":4736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4735,"column":0},"generated":{"line":4737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4736,"column":0},"generated":{"line":4738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4737,"column":0},"generated":{"line":4739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4738,"column":0},"generated":{"line":4740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4739,"column":0},"generated":{"line":4741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4740,"column":0},"generated":{"line":4742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4741,"column":0},"generated":{"line":4743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4742,"column":0},"generated":{"line":4744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4743,"column":0},"generated":{"line":4745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4744,"column":0},"generated":{"line":4746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4745,"column":0},"generated":{"line":4747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4746,"column":0},"generated":{"line":4748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4747,"column":0},"generated":{"line":4749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4748,"column":0},"generated":{"line":4750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4749,"column":0},"generated":{"line":4751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4750,"column":0},"generated":{"line":4752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4751,"column":0},"generated":{"line":4753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4752,"column":0},"generated":{"line":4754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4753,"column":0},"generated":{"line":4755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4754,"column":0},"generated":{"line":4756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4755,"column":0},"generated":{"line":4757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4756,"column":0},"generated":{"line":4758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4757,"column":0},"generated":{"line":4759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4758,"column":0},"generated":{"line":4760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4759,"column":0},"generated":{"line":4761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4760,"column":0},"generated":{"line":4762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4761,"column":0},"generated":{"line":4763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4762,"column":0},"generated":{"line":4764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4763,"column":0},"generated":{"line":4765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4764,"column":0},"generated":{"line":4766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4765,"column":0},"generated":{"line":4767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4766,"column":0},"generated":{"line":4768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4767,"column":0},"generated":{"line":4769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4768,"column":0},"generated":{"line":4770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4769,"column":0},"generated":{"line":4771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4770,"column":0},"generated":{"line":4772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4771,"column":0},"generated":{"line":4773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4772,"column":0},"generated":{"line":4774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4773,"column":0},"generated":{"line":4775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4774,"column":0},"generated":{"line":4776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4775,"column":0},"generated":{"line":4777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4776,"column":0},"generated":{"line":4778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4777,"column":0},"generated":{"line":4779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4778,"column":0},"generated":{"line":4780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4779,"column":0},"generated":{"line":4781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4780,"column":0},"generated":{"line":4782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4781,"column":0},"generated":{"line":4783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4782,"column":0},"generated":{"line":4784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4783,"column":0},"generated":{"line":4785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4784,"column":0},"generated":{"line":4786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4785,"column":0},"generated":{"line":4787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4786,"column":0},"generated":{"line":4788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4787,"column":0},"generated":{"line":4789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4788,"column":0},"generated":{"line":4790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4789,"column":0},"generated":{"line":4791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4790,"column":0},"generated":{"line":4792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4791,"column":0},"generated":{"line":4793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4792,"column":0},"generated":{"line":4794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4793,"column":0},"generated":{"line":4795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4794,"column":0},"generated":{"line":4796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4795,"column":0},"generated":{"line":4797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4796,"column":0},"generated":{"line":4798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4797,"column":0},"generated":{"line":4799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4798,"column":0},"generated":{"line":4800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4799,"column":0},"generated":{"line":4801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4800,"column":0},"generated":{"line":4802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4801,"column":0},"generated":{"line":4803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4802,"column":0},"generated":{"line":4804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4803,"column":0},"generated":{"line":4805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4804,"column":0},"generated":{"line":4806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4805,"column":0},"generated":{"line":4807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4806,"column":0},"generated":{"line":4808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4807,"column":0},"generated":{"line":4809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4808,"column":0},"generated":{"line":4810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4809,"column":0},"generated":{"line":4811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4810,"column":0},"generated":{"line":4812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4811,"column":0},"generated":{"line":4813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4812,"column":0},"generated":{"line":4814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4813,"column":0},"generated":{"line":4815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4814,"column":0},"generated":{"line":4816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4815,"column":0},"generated":{"line":4817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4816,"column":0},"generated":{"line":4818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4817,"column":0},"generated":{"line":4819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4818,"column":0},"generated":{"line":4820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4819,"column":0},"generated":{"line":4821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4820,"column":0},"generated":{"line":4822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4821,"column":0},"generated":{"line":4823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4822,"column":0},"generated":{"line":4824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4823,"column":0},"generated":{"line":4825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4824,"column":0},"generated":{"line":4826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4825,"column":0},"generated":{"line":4827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4826,"column":0},"generated":{"line":4828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4827,"column":0},"generated":{"line":4829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4828,"column":0},"generated":{"line":4830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4829,"column":0},"generated":{"line":4831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4830,"column":0},"generated":{"line":4832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4831,"column":0},"generated":{"line":4833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4832,"column":0},"generated":{"line":4834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4833,"column":0},"generated":{"line":4835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4834,"column":0},"generated":{"line":4836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4835,"column":0},"generated":{"line":4837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4836,"column":0},"generated":{"line":4838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4837,"column":0},"generated":{"line":4839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4838,"column":0},"generated":{"line":4840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4839,"column":0},"generated":{"line":4841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4840,"column":0},"generated":{"line":4842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4841,"column":0},"generated":{"line":4843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4842,"column":0},"generated":{"line":4844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4843,"column":0},"generated":{"line":4845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4844,"column":0},"generated":{"line":4846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4845,"column":0},"generated":{"line":4847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4846,"column":0},"generated":{"line":4848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4847,"column":0},"generated":{"line":4849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4848,"column":0},"generated":{"line":4850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4849,"column":0},"generated":{"line":4851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4850,"column":0},"generated":{"line":4852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4851,"column":0},"generated":{"line":4853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4852,"column":0},"generated":{"line":4854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4853,"column":0},"generated":{"line":4855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4854,"column":0},"generated":{"line":4856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4855,"column":0},"generated":{"line":4857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4856,"column":0},"generated":{"line":4858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4857,"column":0},"generated":{"line":4859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4858,"column":0},"generated":{"line":4860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4859,"column":0},"generated":{"line":4861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4860,"column":0},"generated":{"line":4862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4861,"column":0},"generated":{"line":4863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4862,"column":0},"generated":{"line":4864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4863,"column":0},"generated":{"line":4865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4864,"column":0},"generated":{"line":4866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4865,"column":0},"generated":{"line":4867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4866,"column":0},"generated":{"line":4868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4867,"column":0},"generated":{"line":4869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4868,"column":0},"generated":{"line":4870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4869,"column":0},"generated":{"line":4871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4870,"column":0},"generated":{"line":4872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4871,"column":0},"generated":{"line":4873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4872,"column":0},"generated":{"line":4874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4873,"column":0},"generated":{"line":4875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4874,"column":0},"generated":{"line":4876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4875,"column":0},"generated":{"line":4877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4876,"column":0},"generated":{"line":4878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4877,"column":0},"generated":{"line":4879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4878,"column":0},"generated":{"line":4880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4879,"column":0},"generated":{"line":4881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4880,"column":0},"generated":{"line":4882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4881,"column":0},"generated":{"line":4883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4882,"column":0},"generated":{"line":4884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4883,"column":0},"generated":{"line":4885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4884,"column":0},"generated":{"line":4886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4885,"column":0},"generated":{"line":4887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4886,"column":0},"generated":{"line":4888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4887,"column":0},"generated":{"line":4889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4888,"column":0},"generated":{"line":4890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4889,"column":0},"generated":{"line":4891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4890,"column":0},"generated":{"line":4892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4891,"column":0},"generated":{"line":4893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4892,"column":0},"generated":{"line":4894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4893,"column":0},"generated":{"line":4895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4894,"column":0},"generated":{"line":4896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4895,"column":0},"generated":{"line":4897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4896,"column":0},"generated":{"line":4898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4897,"column":0},"generated":{"line":4899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4898,"column":0},"generated":{"line":4900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4899,"column":0},"generated":{"line":4901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4900,"column":0},"generated":{"line":4902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4901,"column":0},"generated":{"line":4903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4902,"column":0},"generated":{"line":4904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4903,"column":0},"generated":{"line":4905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4904,"column":0},"generated":{"line":4906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4905,"column":0},"generated":{"line":4907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4906,"column":0},"generated":{"line":4908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4907,"column":0},"generated":{"line":4909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4908,"column":0},"generated":{"line":4910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4909,"column":0},"generated":{"line":4911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4910,"column":0},"generated":{"line":4912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4911,"column":0},"generated":{"line":4913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4912,"column":0},"generated":{"line":4914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4913,"column":0},"generated":{"line":4915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4914,"column":0},"generated":{"line":4916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4915,"column":0},"generated":{"line":4917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4916,"column":0},"generated":{"line":4918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4917,"column":0},"generated":{"line":4919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4918,"column":0},"generated":{"line":4920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4919,"column":0},"generated":{"line":4921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4920,"column":0},"generated":{"line":4922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4921,"column":0},"generated":{"line":4923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4922,"column":0},"generated":{"line":4924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4923,"column":0},"generated":{"line":4925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4924,"column":0},"generated":{"line":4926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4925,"column":0},"generated":{"line":4927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4926,"column":0},"generated":{"line":4928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4927,"column":0},"generated":{"line":4929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4928,"column":0},"generated":{"line":4930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4929,"column":0},"generated":{"line":4931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4930,"column":0},"generated":{"line":4932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4931,"column":0},"generated":{"line":4933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4932,"column":0},"generated":{"line":4934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4933,"column":0},"generated":{"line":4935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4934,"column":0},"generated":{"line":4936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4935,"column":0},"generated":{"line":4937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4936,"column":0},"generated":{"line":4938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4937,"column":0},"generated":{"line":4939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4938,"column":0},"generated":{"line":4940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4939,"column":0},"generated":{"line":4941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4940,"column":0},"generated":{"line":4942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4941,"column":0},"generated":{"line":4943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4942,"column":0},"generated":{"line":4944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4943,"column":0},"generated":{"line":4945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4944,"column":0},"generated":{"line":4946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4945,"column":0},"generated":{"line":4947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4946,"column":0},"generated":{"line":4948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4947,"column":0},"generated":{"line":4949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4948,"column":0},"generated":{"line":4950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4949,"column":0},"generated":{"line":4951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4950,"column":0},"generated":{"line":4952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4951,"column":0},"generated":{"line":4953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4952,"column":0},"generated":{"line":4954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4953,"column":0},"generated":{"line":4955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4954,"column":0},"generated":{"line":4956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4955,"column":0},"generated":{"line":4957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4956,"column":0},"generated":{"line":4958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4957,"column":0},"generated":{"line":4959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4958,"column":0},"generated":{"line":4960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4959,"column":0},"generated":{"line":4961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4960,"column":0},"generated":{"line":4962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4961,"column":0},"generated":{"line":4963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4962,"column":0},"generated":{"line":4964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4963,"column":0},"generated":{"line":4965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4964,"column":0},"generated":{"line":4966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4965,"column":0},"generated":{"line":4967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4966,"column":0},"generated":{"line":4968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4967,"column":0},"generated":{"line":4969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4968,"column":0},"generated":{"line":4970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4969,"column":0},"generated":{"line":4971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4970,"column":0},"generated":{"line":4972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4971,"column":0},"generated":{"line":4973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4972,"column":0},"generated":{"line":4974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4973,"column":0},"generated":{"line":4975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4974,"column":0},"generated":{"line":4976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4975,"column":0},"generated":{"line":4977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4976,"column":0},"generated":{"line":4978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4977,"column":0},"generated":{"line":4979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4978,"column":0},"generated":{"line":4980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4979,"column":0},"generated":{"line":4981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4980,"column":0},"generated":{"line":4982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4981,"column":0},"generated":{"line":4983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4982,"column":0},"generated":{"line":4984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4983,"column":0},"generated":{"line":4985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4984,"column":0},"generated":{"line":4986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4985,"column":0},"generated":{"line":4987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4986,"column":0},"generated":{"line":4988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4987,"column":0},"generated":{"line":4989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4988,"column":0},"generated":{"line":4990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4989,"column":0},"generated":{"line":4991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4990,"column":0},"generated":{"line":4992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4991,"column":0},"generated":{"line":4993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4992,"column":0},"generated":{"line":4994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4993,"column":0},"generated":{"line":4995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4994,"column":0},"generated":{"line":4996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4995,"column":0},"generated":{"line":4997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4996,"column":0},"generated":{"line":4998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4997,"column":0},"generated":{"line":4999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4998,"column":0},"generated":{"line":5000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":4999,"column":0},"generated":{"line":5001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5000,"column":0},"generated":{"line":5002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5001,"column":0},"generated":{"line":5003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5002,"column":0},"generated":{"line":5004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5003,"column":0},"generated":{"line":5005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5004,"column":0},"generated":{"line":5006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5005,"column":0},"generated":{"line":5007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5006,"column":0},"generated":{"line":5008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5007,"column":0},"generated":{"line":5009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5008,"column":0},"generated":{"line":5010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5009,"column":0},"generated":{"line":5011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5010,"column":0},"generated":{"line":5012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5011,"column":0},"generated":{"line":5013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5012,"column":0},"generated":{"line":5014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5013,"column":0},"generated":{"line":5015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5014,"column":0},"generated":{"line":5016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5015,"column":0},"generated":{"line":5017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5016,"column":0},"generated":{"line":5018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5017,"column":0},"generated":{"line":5019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5018,"column":0},"generated":{"line":5020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5019,"column":0},"generated":{"line":5021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5020,"column":0},"generated":{"line":5022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5021,"column":0},"generated":{"line":5023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5022,"column":0},"generated":{"line":5024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5023,"column":0},"generated":{"line":5025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5024,"column":0},"generated":{"line":5026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5025,"column":0},"generated":{"line":5027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5026,"column":0},"generated":{"line":5028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5027,"column":0},"generated":{"line":5029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5028,"column":0},"generated":{"line":5030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5029,"column":0},"generated":{"line":5031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5030,"column":0},"generated":{"line":5032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5031,"column":0},"generated":{"line":5033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5032,"column":0},"generated":{"line":5034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5033,"column":0},"generated":{"line":5035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5034,"column":0},"generated":{"line":5036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5035,"column":0},"generated":{"line":5037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5036,"column":0},"generated":{"line":5038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5037,"column":0},"generated":{"line":5039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5038,"column":0},"generated":{"line":5040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5039,"column":0},"generated":{"line":5041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5040,"column":0},"generated":{"line":5042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5041,"column":0},"generated":{"line":5043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5042,"column":0},"generated":{"line":5044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5043,"column":0},"generated":{"line":5045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5044,"column":0},"generated":{"line":5046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5045,"column":0},"generated":{"line":5047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5046,"column":0},"generated":{"line":5048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5047,"column":0},"generated":{"line":5049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5048,"column":0},"generated":{"line":5050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5049,"column":0},"generated":{"line":5051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5050,"column":0},"generated":{"line":5052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5051,"column":0},"generated":{"line":5053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5052,"column":0},"generated":{"line":5054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5053,"column":0},"generated":{"line":5055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5054,"column":0},"generated":{"line":5056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5055,"column":0},"generated":{"line":5057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5056,"column":0},"generated":{"line":5058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5057,"column":0},"generated":{"line":5059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5058,"column":0},"generated":{"line":5060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5059,"column":0},"generated":{"line":5061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5060,"column":0},"generated":{"line":5062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5061,"column":0},"generated":{"line":5063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5062,"column":0},"generated":{"line":5064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5063,"column":0},"generated":{"line":5065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5064,"column":0},"generated":{"line":5066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5065,"column":0},"generated":{"line":5067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5066,"column":0},"generated":{"line":5068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5067,"column":0},"generated":{"line":5069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5068,"column":0},"generated":{"line":5070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5069,"column":0},"generated":{"line":5071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5070,"column":0},"generated":{"line":5072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5071,"column":0},"generated":{"line":5073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5072,"column":0},"generated":{"line":5074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5073,"column":0},"generated":{"line":5075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5074,"column":0},"generated":{"line":5076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5075,"column":0},"generated":{"line":5077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5076,"column":0},"generated":{"line":5078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5077,"column":0},"generated":{"line":5079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5078,"column":0},"generated":{"line":5080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5079,"column":0},"generated":{"line":5081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5080,"column":0},"generated":{"line":5082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5081,"column":0},"generated":{"line":5083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5082,"column":0},"generated":{"line":5084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5083,"column":0},"generated":{"line":5085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5084,"column":0},"generated":{"line":5086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5085,"column":0},"generated":{"line":5087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5086,"column":0},"generated":{"line":5088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5087,"column":0},"generated":{"line":5089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5088,"column":0},"generated":{"line":5090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5089,"column":0},"generated":{"line":5091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5090,"column":0},"generated":{"line":5092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5091,"column":0},"generated":{"line":5093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5092,"column":0},"generated":{"line":5094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5093,"column":0},"generated":{"line":5095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5094,"column":0},"generated":{"line":5096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5095,"column":0},"generated":{"line":5097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5096,"column":0},"generated":{"line":5098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5097,"column":0},"generated":{"line":5099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5098,"column":0},"generated":{"line":5100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5099,"column":0},"generated":{"line":5101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5100,"column":0},"generated":{"line":5102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5101,"column":0},"generated":{"line":5103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5102,"column":0},"generated":{"line":5104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5103,"column":0},"generated":{"line":5105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5104,"column":0},"generated":{"line":5106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5105,"column":0},"generated":{"line":5107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5106,"column":0},"generated":{"line":5108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5107,"column":0},"generated":{"line":5109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5108,"column":0},"generated":{"line":5110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5109,"column":0},"generated":{"line":5111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5110,"column":0},"generated":{"line":5112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5111,"column":0},"generated":{"line":5113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5112,"column":0},"generated":{"line":5114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5113,"column":0},"generated":{"line":5115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5114,"column":0},"generated":{"line":5116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5115,"column":0},"generated":{"line":5117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5116,"column":0},"generated":{"line":5118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5117,"column":0},"generated":{"line":5119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5118,"column":0},"generated":{"line":5120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5119,"column":0},"generated":{"line":5121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5120,"column":0},"generated":{"line":5122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5121,"column":0},"generated":{"line":5123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5122,"column":0},"generated":{"line":5124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5123,"column":0},"generated":{"line":5125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5124,"column":0},"generated":{"line":5126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5125,"column":0},"generated":{"line":5127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5126,"column":0},"generated":{"line":5128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5127,"column":0},"generated":{"line":5129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5128,"column":0},"generated":{"line":5130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5129,"column":0},"generated":{"line":5131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5130,"column":0},"generated":{"line":5132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5131,"column":0},"generated":{"line":5133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5132,"column":0},"generated":{"line":5134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5133,"column":0},"generated":{"line":5135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5134,"column":0},"generated":{"line":5136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5135,"column":0},"generated":{"line":5137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5136,"column":0},"generated":{"line":5138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5137,"column":0},"generated":{"line":5139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5138,"column":0},"generated":{"line":5140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5139,"column":0},"generated":{"line":5141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5140,"column":0},"generated":{"line":5142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5141,"column":0},"generated":{"line":5143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5142,"column":0},"generated":{"line":5144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5143,"column":0},"generated":{"line":5145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5144,"column":0},"generated":{"line":5146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5145,"column":0},"generated":{"line":5147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5146,"column":0},"generated":{"line":5148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5147,"column":0},"generated":{"line":5149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5148,"column":0},"generated":{"line":5150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5149,"column":0},"generated":{"line":5151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5150,"column":0},"generated":{"line":5152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5151,"column":0},"generated":{"line":5153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5152,"column":0},"generated":{"line":5154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5153,"column":0},"generated":{"line":5155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5154,"column":0},"generated":{"line":5156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5155,"column":0},"generated":{"line":5157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5156,"column":0},"generated":{"line":5158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5157,"column":0},"generated":{"line":5159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5158,"column":0},"generated":{"line":5160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5159,"column":0},"generated":{"line":5161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5160,"column":0},"generated":{"line":5162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5161,"column":0},"generated":{"line":5163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5162,"column":0},"generated":{"line":5164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5163,"column":0},"generated":{"line":5165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5164,"column":0},"generated":{"line":5166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5165,"column":0},"generated":{"line":5167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5166,"column":0},"generated":{"line":5168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5167,"column":0},"generated":{"line":5169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5168,"column":0},"generated":{"line":5170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5169,"column":0},"generated":{"line":5171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5170,"column":0},"generated":{"line":5172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5171,"column":0},"generated":{"line":5173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5172,"column":0},"generated":{"line":5174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5173,"column":0},"generated":{"line":5175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5174,"column":0},"generated":{"line":5176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5175,"column":0},"generated":{"line":5177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5176,"column":0},"generated":{"line":5178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5177,"column":0},"generated":{"line":5179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5178,"column":0},"generated":{"line":5180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5179,"column":0},"generated":{"line":5181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5180,"column":0},"generated":{"line":5182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5181,"column":0},"generated":{"line":5183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5182,"column":0},"generated":{"line":5184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5183,"column":0},"generated":{"line":5185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5184,"column":0},"generated":{"line":5186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5185,"column":0},"generated":{"line":5187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5186,"column":0},"generated":{"line":5188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5187,"column":0},"generated":{"line":5189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5188,"column":0},"generated":{"line":5190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5189,"column":0},"generated":{"line":5191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5190,"column":0},"generated":{"line":5192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5191,"column":0},"generated":{"line":5193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5192,"column":0},"generated":{"line":5194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5193,"column":0},"generated":{"line":5195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5194,"column":0},"generated":{"line":5196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5195,"column":0},"generated":{"line":5197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5196,"column":0},"generated":{"line":5198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5197,"column":0},"generated":{"line":5199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5198,"column":0},"generated":{"line":5200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5199,"column":0},"generated":{"line":5201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5200,"column":0},"generated":{"line":5202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5201,"column":0},"generated":{"line":5203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5202,"column":0},"generated":{"line":5204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5203,"column":0},"generated":{"line":5205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5204,"column":0},"generated":{"line":5206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5205,"column":0},"generated":{"line":5207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5206,"column":0},"generated":{"line":5208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5207,"column":0},"generated":{"line":5209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5208,"column":0},"generated":{"line":5210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5209,"column":0},"generated":{"line":5211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5210,"column":0},"generated":{"line":5212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5211,"column":0},"generated":{"line":5213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5212,"column":0},"generated":{"line":5214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5213,"column":0},"generated":{"line":5215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5214,"column":0},"generated":{"line":5216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5215,"column":0},"generated":{"line":5217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5216,"column":0},"generated":{"line":5218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5217,"column":0},"generated":{"line":5219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5218,"column":0},"generated":{"line":5220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5219,"column":0},"generated":{"line":5221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5220,"column":0},"generated":{"line":5222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5221,"column":0},"generated":{"line":5223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5222,"column":0},"generated":{"line":5224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5223,"column":0},"generated":{"line":5225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5224,"column":0},"generated":{"line":5226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5225,"column":0},"generated":{"line":5227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5226,"column":0},"generated":{"line":5228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5227,"column":0},"generated":{"line":5229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5228,"column":0},"generated":{"line":5230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5229,"column":0},"generated":{"line":5231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5230,"column":0},"generated":{"line":5232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5231,"column":0},"generated":{"line":5233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5232,"column":0},"generated":{"line":5234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5233,"column":0},"generated":{"line":5235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5234,"column":0},"generated":{"line":5236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5235,"column":0},"generated":{"line":5237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5236,"column":0},"generated":{"line":5238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5237,"column":0},"generated":{"line":5239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5238,"column":0},"generated":{"line":5240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5239,"column":0},"generated":{"line":5241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5240,"column":0},"generated":{"line":5242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5241,"column":0},"generated":{"line":5243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5242,"column":0},"generated":{"line":5244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5243,"column":0},"generated":{"line":5245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5244,"column":0},"generated":{"line":5246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5245,"column":0},"generated":{"line":5247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5246,"column":0},"generated":{"line":5248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5247,"column":0},"generated":{"line":5249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5248,"column":0},"generated":{"line":5250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5249,"column":0},"generated":{"line":5251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5250,"column":0},"generated":{"line":5252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5251,"column":0},"generated":{"line":5253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5252,"column":0},"generated":{"line":5254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5253,"column":0},"generated":{"line":5255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5254,"column":0},"generated":{"line":5256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5255,"column":0},"generated":{"line":5257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5256,"column":0},"generated":{"line":5258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5257,"column":0},"generated":{"line":5259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5258,"column":0},"generated":{"line":5260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5259,"column":0},"generated":{"line":5261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5260,"column":0},"generated":{"line":5262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5261,"column":0},"generated":{"line":5263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5262,"column":0},"generated":{"line":5264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5263,"column":0},"generated":{"line":5265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5264,"column":0},"generated":{"line":5266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5265,"column":0},"generated":{"line":5267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5266,"column":0},"generated":{"line":5268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5267,"column":0},"generated":{"line":5269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5268,"column":0},"generated":{"line":5270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5269,"column":0},"generated":{"line":5271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5270,"column":0},"generated":{"line":5272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5271,"column":0},"generated":{"line":5273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5272,"column":0},"generated":{"line":5274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5273,"column":0},"generated":{"line":5275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5274,"column":0},"generated":{"line":5276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5275,"column":0},"generated":{"line":5277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5276,"column":0},"generated":{"line":5278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5277,"column":0},"generated":{"line":5279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5278,"column":0},"generated":{"line":5280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5279,"column":0},"generated":{"line":5281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5280,"column":0},"generated":{"line":5282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5281,"column":0},"generated":{"line":5283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5282,"column":0},"generated":{"line":5284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5283,"column":0},"generated":{"line":5285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5284,"column":0},"generated":{"line":5286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5285,"column":0},"generated":{"line":5287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5286,"column":0},"generated":{"line":5288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5287,"column":0},"generated":{"line":5289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5288,"column":0},"generated":{"line":5290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5289,"column":0},"generated":{"line":5291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5290,"column":0},"generated":{"line":5292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5291,"column":0},"generated":{"line":5293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5292,"column":0},"generated":{"line":5294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5293,"column":0},"generated":{"line":5295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5294,"column":0},"generated":{"line":5296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5295,"column":0},"generated":{"line":5297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5296,"column":0},"generated":{"line":5298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5297,"column":0},"generated":{"line":5299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5298,"column":0},"generated":{"line":5300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5299,"column":0},"generated":{"line":5301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5300,"column":0},"generated":{"line":5302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5301,"column":0},"generated":{"line":5303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5302,"column":0},"generated":{"line":5304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5303,"column":0},"generated":{"line":5305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5304,"column":0},"generated":{"line":5306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5305,"column":0},"generated":{"line":5307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5306,"column":0},"generated":{"line":5308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5307,"column":0},"generated":{"line":5309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5308,"column":0},"generated":{"line":5310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5309,"column":0},"generated":{"line":5311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5310,"column":0},"generated":{"line":5312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5311,"column":0},"generated":{"line":5313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5312,"column":0},"generated":{"line":5314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5313,"column":0},"generated":{"line":5315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5314,"column":0},"generated":{"line":5316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5315,"column":0},"generated":{"line":5317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5316,"column":0},"generated":{"line":5318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5317,"column":0},"generated":{"line":5319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5318,"column":0},"generated":{"line":5320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5319,"column":0},"generated":{"line":5321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5320,"column":0},"generated":{"line":5322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5321,"column":0},"generated":{"line":5323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5322,"column":0},"generated":{"line":5324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5323,"column":0},"generated":{"line":5325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5324,"column":0},"generated":{"line":5326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5325,"column":0},"generated":{"line":5327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5326,"column":0},"generated":{"line":5328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5327,"column":0},"generated":{"line":5329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5328,"column":0},"generated":{"line":5330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5329,"column":0},"generated":{"line":5331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5330,"column":0},"generated":{"line":5332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5331,"column":0},"generated":{"line":5333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5332,"column":0},"generated":{"line":5334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5333,"column":0},"generated":{"line":5335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5334,"column":0},"generated":{"line":5336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5335,"column":0},"generated":{"line":5337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5336,"column":0},"generated":{"line":5338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5337,"column":0},"generated":{"line":5339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5338,"column":0},"generated":{"line":5340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5339,"column":0},"generated":{"line":5341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5340,"column":0},"generated":{"line":5342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5341,"column":0},"generated":{"line":5343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5342,"column":0},"generated":{"line":5344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5343,"column":0},"generated":{"line":5345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5344,"column":0},"generated":{"line":5346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5345,"column":0},"generated":{"line":5347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5346,"column":0},"generated":{"line":5348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5347,"column":0},"generated":{"line":5349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5348,"column":0},"generated":{"line":5350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5349,"column":0},"generated":{"line":5351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5350,"column":0},"generated":{"line":5352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5351,"column":0},"generated":{"line":5353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5352,"column":0},"generated":{"line":5354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5353,"column":0},"generated":{"line":5355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5354,"column":0},"generated":{"line":5356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5355,"column":0},"generated":{"line":5357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5356,"column":0},"generated":{"line":5358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5357,"column":0},"generated":{"line":5359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5358,"column":0},"generated":{"line":5360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5359,"column":0},"generated":{"line":5361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5360,"column":0},"generated":{"line":5362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5361,"column":0},"generated":{"line":5363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5362,"column":0},"generated":{"line":5364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5363,"column":0},"generated":{"line":5365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5364,"column":0},"generated":{"line":5366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5365,"column":0},"generated":{"line":5367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5366,"column":0},"generated":{"line":5368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5367,"column":0},"generated":{"line":5369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5368,"column":0},"generated":{"line":5370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5369,"column":0},"generated":{"line":5371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5370,"column":0},"generated":{"line":5372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5371,"column":0},"generated":{"line":5373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5372,"column":0},"generated":{"line":5374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5373,"column":0},"generated":{"line":5375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5374,"column":0},"generated":{"line":5376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5375,"column":0},"generated":{"line":5377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5376,"column":0},"generated":{"line":5378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5377,"column":0},"generated":{"line":5379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5378,"column":0},"generated":{"line":5380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5379,"column":0},"generated":{"line":5381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5380,"column":0},"generated":{"line":5382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5381,"column":0},"generated":{"line":5383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5382,"column":0},"generated":{"line":5384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5383,"column":0},"generated":{"line":5385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5384,"column":0},"generated":{"line":5386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5385,"column":0},"generated":{"line":5387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5386,"column":0},"generated":{"line":5388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5387,"column":0},"generated":{"line":5389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5388,"column":0},"generated":{"line":5390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5389,"column":0},"generated":{"line":5391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5390,"column":0},"generated":{"line":5392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5391,"column":0},"generated":{"line":5393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5392,"column":0},"generated":{"line":5394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5393,"column":0},"generated":{"line":5395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5394,"column":0},"generated":{"line":5396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5395,"column":0},"generated":{"line":5397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5396,"column":0},"generated":{"line":5398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5397,"column":0},"generated":{"line":5399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5398,"column":0},"generated":{"line":5400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5399,"column":0},"generated":{"line":5401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5400,"column":0},"generated":{"line":5402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5401,"column":0},"generated":{"line":5403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5402,"column":0},"generated":{"line":5404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5403,"column":0},"generated":{"line":5405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5404,"column":0},"generated":{"line":5406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5405,"column":0},"generated":{"line":5407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5406,"column":0},"generated":{"line":5408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5407,"column":0},"generated":{"line":5409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5408,"column":0},"generated":{"line":5410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5409,"column":0},"generated":{"line":5411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5410,"column":0},"generated":{"line":5412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5411,"column":0},"generated":{"line":5413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5412,"column":0},"generated":{"line":5414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5413,"column":0},"generated":{"line":5415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5414,"column":0},"generated":{"line":5416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5415,"column":0},"generated":{"line":5417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5416,"column":0},"generated":{"line":5418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5417,"column":0},"generated":{"line":5419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5418,"column":0},"generated":{"line":5420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5419,"column":0},"generated":{"line":5421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5420,"column":0},"generated":{"line":5422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5421,"column":0},"generated":{"line":5423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5422,"column":0},"generated":{"line":5424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5423,"column":0},"generated":{"line":5425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5424,"column":0},"generated":{"line":5426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5425,"column":0},"generated":{"line":5427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5426,"column":0},"generated":{"line":5428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5427,"column":0},"generated":{"line":5429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5428,"column":0},"generated":{"line":5430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5429,"column":0},"generated":{"line":5431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5430,"column":0},"generated":{"line":5432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5431,"column":0},"generated":{"line":5433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5432,"column":0},"generated":{"line":5434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5433,"column":0},"generated":{"line":5435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5434,"column":0},"generated":{"line":5436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5435,"column":0},"generated":{"line":5437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5436,"column":0},"generated":{"line":5438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5437,"column":0},"generated":{"line":5439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5438,"column":0},"generated":{"line":5440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5439,"column":0},"generated":{"line":5441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5440,"column":0},"generated":{"line":5442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5441,"column":0},"generated":{"line":5443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5442,"column":0},"generated":{"line":5444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5443,"column":0},"generated":{"line":5445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5444,"column":0},"generated":{"line":5446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5445,"column":0},"generated":{"line":5447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5446,"column":0},"generated":{"line":5448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5447,"column":0},"generated":{"line":5449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5448,"column":0},"generated":{"line":5450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5449,"column":0},"generated":{"line":5451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5450,"column":0},"generated":{"line":5452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5451,"column":0},"generated":{"line":5453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5452,"column":0},"generated":{"line":5454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5453,"column":0},"generated":{"line":5455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5454,"column":0},"generated":{"line":5456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5455,"column":0},"generated":{"line":5457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5456,"column":0},"generated":{"line":5458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5457,"column":0},"generated":{"line":5459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5458,"column":0},"generated":{"line":5460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5459,"column":0},"generated":{"line":5461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5460,"column":0},"generated":{"line":5462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5461,"column":0},"generated":{"line":5463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5462,"column":0},"generated":{"line":5464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5463,"column":0},"generated":{"line":5465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5464,"column":0},"generated":{"line":5466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5465,"column":0},"generated":{"line":5467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5466,"column":0},"generated":{"line":5468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5467,"column":0},"generated":{"line":5469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5468,"column":0},"generated":{"line":5470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5469,"column":0},"generated":{"line":5471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5470,"column":0},"generated":{"line":5472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5471,"column":0},"generated":{"line":5473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5472,"column":0},"generated":{"line":5474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5473,"column":0},"generated":{"line":5475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5474,"column":0},"generated":{"line":5476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5475,"column":0},"generated":{"line":5477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5476,"column":0},"generated":{"line":5478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5477,"column":0},"generated":{"line":5479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5478,"column":0},"generated":{"line":5480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5479,"column":0},"generated":{"line":5481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5480,"column":0},"generated":{"line":5482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5481,"column":0},"generated":{"line":5483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5482,"column":0},"generated":{"line":5484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5483,"column":0},"generated":{"line":5485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5484,"column":0},"generated":{"line":5486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5485,"column":0},"generated":{"line":5487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5486,"column":0},"generated":{"line":5488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5487,"column":0},"generated":{"line":5489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5488,"column":0},"generated":{"line":5490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5489,"column":0},"generated":{"line":5491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5490,"column":0},"generated":{"line":5492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5491,"column":0},"generated":{"line":5493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5492,"column":0},"generated":{"line":5494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5493,"column":0},"generated":{"line":5495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5494,"column":0},"generated":{"line":5496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5495,"column":0},"generated":{"line":5497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5496,"column":0},"generated":{"line":5498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5497,"column":0},"generated":{"line":5499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5498,"column":0},"generated":{"line":5500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5499,"column":0},"generated":{"line":5501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5500,"column":0},"generated":{"line":5502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5501,"column":0},"generated":{"line":5503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5502,"column":0},"generated":{"line":5504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5503,"column":0},"generated":{"line":5505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5504,"column":0},"generated":{"line":5506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5505,"column":0},"generated":{"line":5507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5506,"column":0},"generated":{"line":5508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5507,"column":0},"generated":{"line":5509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5508,"column":0},"generated":{"line":5510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5509,"column":0},"generated":{"line":5511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5510,"column":0},"generated":{"line":5512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5511,"column":0},"generated":{"line":5513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5512,"column":0},"generated":{"line":5514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5513,"column":0},"generated":{"line":5515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5514,"column":0},"generated":{"line":5516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5515,"column":0},"generated":{"line":5517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5516,"column":0},"generated":{"line":5518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5517,"column":0},"generated":{"line":5519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5518,"column":0},"generated":{"line":5520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5519,"column":0},"generated":{"line":5521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5520,"column":0},"generated":{"line":5522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5521,"column":0},"generated":{"line":5523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5522,"column":0},"generated":{"line":5524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5523,"column":0},"generated":{"line":5525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5524,"column":0},"generated":{"line":5526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5525,"column":0},"generated":{"line":5527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5526,"column":0},"generated":{"line":5528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5527,"column":0},"generated":{"line":5529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5528,"column":0},"generated":{"line":5530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5529,"column":0},"generated":{"line":5531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5530,"column":0},"generated":{"line":5532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5531,"column":0},"generated":{"line":5533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5532,"column":0},"generated":{"line":5534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5533,"column":0},"generated":{"line":5535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5534,"column":0},"generated":{"line":5536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5535,"column":0},"generated":{"line":5537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5536,"column":0},"generated":{"line":5538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5537,"column":0},"generated":{"line":5539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5538,"column":0},"generated":{"line":5540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5539,"column":0},"generated":{"line":5541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5540,"column":0},"generated":{"line":5542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5541,"column":0},"generated":{"line":5543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5542,"column":0},"generated":{"line":5544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5543,"column":0},"generated":{"line":5545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5544,"column":0},"generated":{"line":5546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5545,"column":0},"generated":{"line":5547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5546,"column":0},"generated":{"line":5548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5547,"column":0},"generated":{"line":5549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5548,"column":0},"generated":{"line":5550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5549,"column":0},"generated":{"line":5551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5550,"column":0},"generated":{"line":5552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5551,"column":0},"generated":{"line":5553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5552,"column":0},"generated":{"line":5554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5553,"column":0},"generated":{"line":5555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5554,"column":0},"generated":{"line":5556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5555,"column":0},"generated":{"line":5557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5556,"column":0},"generated":{"line":5558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5557,"column":0},"generated":{"line":5559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5558,"column":0},"generated":{"line":5560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5559,"column":0},"generated":{"line":5561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5560,"column":0},"generated":{"line":5562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5561,"column":0},"generated":{"line":5563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5562,"column":0},"generated":{"line":5564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5563,"column":0},"generated":{"line":5565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5564,"column":0},"generated":{"line":5566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5565,"column":0},"generated":{"line":5567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5566,"column":0},"generated":{"line":5568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5567,"column":0},"generated":{"line":5569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5568,"column":0},"generated":{"line":5570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5569,"column":0},"generated":{"line":5571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5570,"column":0},"generated":{"line":5572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5571,"column":0},"generated":{"line":5573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5572,"column":0},"generated":{"line":5574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5573,"column":0},"generated":{"line":5575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5574,"column":0},"generated":{"line":5576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5575,"column":0},"generated":{"line":5577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5576,"column":0},"generated":{"line":5578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5577,"column":0},"generated":{"line":5579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5578,"column":0},"generated":{"line":5580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5579,"column":0},"generated":{"line":5581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5580,"column":0},"generated":{"line":5582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5581,"column":0},"generated":{"line":5583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5582,"column":0},"generated":{"line":5584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5583,"column":0},"generated":{"line":5585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5584,"column":0},"generated":{"line":5586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5585,"column":0},"generated":{"line":5587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5586,"column":0},"generated":{"line":5588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5587,"column":0},"generated":{"line":5589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5588,"column":0},"generated":{"line":5590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5589,"column":0},"generated":{"line":5591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5590,"column":0},"generated":{"line":5592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5591,"column":0},"generated":{"line":5593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5592,"column":0},"generated":{"line":5594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5593,"column":0},"generated":{"line":5595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5594,"column":0},"generated":{"line":5596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5595,"column":0},"generated":{"line":5597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5596,"column":0},"generated":{"line":5598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5597,"column":0},"generated":{"line":5599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5598,"column":0},"generated":{"line":5600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5599,"column":0},"generated":{"line":5601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5600,"column":0},"generated":{"line":5602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5601,"column":0},"generated":{"line":5603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5602,"column":0},"generated":{"line":5604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5603,"column":0},"generated":{"line":5605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5604,"column":0},"generated":{"line":5606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5605,"column":0},"generated":{"line":5607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5606,"column":0},"generated":{"line":5608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5607,"column":0},"generated":{"line":5609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5608,"column":0},"generated":{"line":5610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5609,"column":0},"generated":{"line":5611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5610,"column":0},"generated":{"line":5612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5611,"column":0},"generated":{"line":5613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5612,"column":0},"generated":{"line":5614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5613,"column":0},"generated":{"line":5615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5614,"column":0},"generated":{"line":5616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5615,"column":0},"generated":{"line":5617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5616,"column":0},"generated":{"line":5618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5617,"column":0},"generated":{"line":5619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5618,"column":0},"generated":{"line":5620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5619,"column":0},"generated":{"line":5621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5620,"column":0},"generated":{"line":5622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5621,"column":0},"generated":{"line":5623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5622,"column":0},"generated":{"line":5624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5623,"column":0},"generated":{"line":5625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5624,"column":0},"generated":{"line":5626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5625,"column":0},"generated":{"line":5627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5626,"column":0},"generated":{"line":5628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5627,"column":0},"generated":{"line":5629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5628,"column":0},"generated":{"line":5630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5629,"column":0},"generated":{"line":5631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5630,"column":0},"generated":{"line":5632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5631,"column":0},"generated":{"line":5633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5632,"column":0},"generated":{"line":5634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5633,"column":0},"generated":{"line":5635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5634,"column":0},"generated":{"line":5636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5635,"column":0},"generated":{"line":5637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5636,"column":0},"generated":{"line":5638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5637,"column":0},"generated":{"line":5639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5638,"column":0},"generated":{"line":5640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5639,"column":0},"generated":{"line":5641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5640,"column":0},"generated":{"line":5642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5641,"column":0},"generated":{"line":5643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5642,"column":0},"generated":{"line":5644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5643,"column":0},"generated":{"line":5645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5644,"column":0},"generated":{"line":5646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5645,"column":0},"generated":{"line":5647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5646,"column":0},"generated":{"line":5648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5647,"column":0},"generated":{"line":5649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5648,"column":0},"generated":{"line":5650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5649,"column":0},"generated":{"line":5651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5650,"column":0},"generated":{"line":5652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5651,"column":0},"generated":{"line":5653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5652,"column":0},"generated":{"line":5654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5653,"column":0},"generated":{"line":5655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5654,"column":0},"generated":{"line":5656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5655,"column":0},"generated":{"line":5657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5656,"column":0},"generated":{"line":5658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5657,"column":0},"generated":{"line":5659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5658,"column":0},"generated":{"line":5660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5659,"column":0},"generated":{"line":5661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5660,"column":0},"generated":{"line":5662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5661,"column":0},"generated":{"line":5663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5662,"column":0},"generated":{"line":5664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5663,"column":0},"generated":{"line":5665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5664,"column":0},"generated":{"line":5666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5665,"column":0},"generated":{"line":5667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5666,"column":0},"generated":{"line":5668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5667,"column":0},"generated":{"line":5669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5668,"column":0},"generated":{"line":5670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5669,"column":0},"generated":{"line":5671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5670,"column":0},"generated":{"line":5672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5671,"column":0},"generated":{"line":5673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5672,"column":0},"generated":{"line":5674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5673,"column":0},"generated":{"line":5675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5674,"column":0},"generated":{"line":5676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5675,"column":0},"generated":{"line":5677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5676,"column":0},"generated":{"line":5678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5677,"column":0},"generated":{"line":5679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5678,"column":0},"generated":{"line":5680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5679,"column":0},"generated":{"line":5681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5680,"column":0},"generated":{"line":5682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5681,"column":0},"generated":{"line":5683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5682,"column":0},"generated":{"line":5684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5683,"column":0},"generated":{"line":5685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5684,"column":0},"generated":{"line":5686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5685,"column":0},"generated":{"line":5687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5686,"column":0},"generated":{"line":5688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5687,"column":0},"generated":{"line":5689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5688,"column":0},"generated":{"line":5690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5689,"column":0},"generated":{"line":5691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5690,"column":0},"generated":{"line":5692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5691,"column":0},"generated":{"line":5693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5692,"column":0},"generated":{"line":5694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5693,"column":0},"generated":{"line":5695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5694,"column":0},"generated":{"line":5696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5695,"column":0},"generated":{"line":5697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5696,"column":0},"generated":{"line":5698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5697,"column":0},"generated":{"line":5699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5698,"column":0},"generated":{"line":5700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5699,"column":0},"generated":{"line":5701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5700,"column":0},"generated":{"line":5702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5701,"column":0},"generated":{"line":5703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5702,"column":0},"generated":{"line":5704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5703,"column":0},"generated":{"line":5705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5704,"column":0},"generated":{"line":5706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5705,"column":0},"generated":{"line":5707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5706,"column":0},"generated":{"line":5708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5707,"column":0},"generated":{"line":5709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5708,"column":0},"generated":{"line":5710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5709,"column":0},"generated":{"line":5711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5710,"column":0},"generated":{"line":5712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5711,"column":0},"generated":{"line":5713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5712,"column":0},"generated":{"line":5714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5713,"column":0},"generated":{"line":5715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5714,"column":0},"generated":{"line":5716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5715,"column":0},"generated":{"line":5717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5716,"column":0},"generated":{"line":5718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5717,"column":0},"generated":{"line":5719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5718,"column":0},"generated":{"line":5720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5719,"column":0},"generated":{"line":5721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5720,"column":0},"generated":{"line":5722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5721,"column":0},"generated":{"line":5723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5722,"column":0},"generated":{"line":5724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5723,"column":0},"generated":{"line":5725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5724,"column":0},"generated":{"line":5726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5725,"column":0},"generated":{"line":5727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5726,"column":0},"generated":{"line":5728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5727,"column":0},"generated":{"line":5729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5728,"column":0},"generated":{"line":5730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5729,"column":0},"generated":{"line":5731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5730,"column":0},"generated":{"line":5732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5731,"column":0},"generated":{"line":5733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5732,"column":0},"generated":{"line":5734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5733,"column":0},"generated":{"line":5735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5734,"column":0},"generated":{"line":5736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5735,"column":0},"generated":{"line":5737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5736,"column":0},"generated":{"line":5738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5737,"column":0},"generated":{"line":5739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5738,"column":0},"generated":{"line":5740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5739,"column":0},"generated":{"line":5741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5740,"column":0},"generated":{"line":5742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5741,"column":0},"generated":{"line":5743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5742,"column":0},"generated":{"line":5744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5743,"column":0},"generated":{"line":5745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5744,"column":0},"generated":{"line":5746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5745,"column":0},"generated":{"line":5747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5746,"column":0},"generated":{"line":5748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5747,"column":0},"generated":{"line":5749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5748,"column":0},"generated":{"line":5750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5749,"column":0},"generated":{"line":5751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5750,"column":0},"generated":{"line":5752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5751,"column":0},"generated":{"line":5753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5752,"column":0},"generated":{"line":5754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5753,"column":0},"generated":{"line":5755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5754,"column":0},"generated":{"line":5756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5755,"column":0},"generated":{"line":5757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5756,"column":0},"generated":{"line":5758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5757,"column":0},"generated":{"line":5759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5758,"column":0},"generated":{"line":5760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5759,"column":0},"generated":{"line":5761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5760,"column":0},"generated":{"line":5762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5761,"column":0},"generated":{"line":5763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5762,"column":0},"generated":{"line":5764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5763,"column":0},"generated":{"line":5765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5764,"column":0},"generated":{"line":5766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5765,"column":0},"generated":{"line":5767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5766,"column":0},"generated":{"line":5768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5767,"column":0},"generated":{"line":5769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5768,"column":0},"generated":{"line":5770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5769,"column":0},"generated":{"line":5771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5770,"column":0},"generated":{"line":5772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5771,"column":0},"generated":{"line":5773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5772,"column":0},"generated":{"line":5774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5773,"column":0},"generated":{"line":5775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5774,"column":0},"generated":{"line":5776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5775,"column":0},"generated":{"line":5777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5776,"column":0},"generated":{"line":5778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5777,"column":0},"generated":{"line":5779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5778,"column":0},"generated":{"line":5780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5779,"column":0},"generated":{"line":5781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5780,"column":0},"generated":{"line":5782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5781,"column":0},"generated":{"line":5783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5782,"column":0},"generated":{"line":5784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5783,"column":0},"generated":{"line":5785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5784,"column":0},"generated":{"line":5786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5785,"column":0},"generated":{"line":5787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5786,"column":0},"generated":{"line":5788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5787,"column":0},"generated":{"line":5789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5788,"column":0},"generated":{"line":5790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5789,"column":0},"generated":{"line":5791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5790,"column":0},"generated":{"line":5792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5791,"column":0},"generated":{"line":5793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5792,"column":0},"generated":{"line":5794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5793,"column":0},"generated":{"line":5795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5794,"column":0},"generated":{"line":5796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5795,"column":0},"generated":{"line":5797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5796,"column":0},"generated":{"line":5798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5797,"column":0},"generated":{"line":5799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5798,"column":0},"generated":{"line":5800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5799,"column":0},"generated":{"line":5801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5800,"column":0},"generated":{"line":5802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5801,"column":0},"generated":{"line":5803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5802,"column":0},"generated":{"line":5804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5803,"column":0},"generated":{"line":5805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5804,"column":0},"generated":{"line":5806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5805,"column":0},"generated":{"line":5807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5806,"column":0},"generated":{"line":5808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5807,"column":0},"generated":{"line":5809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5808,"column":0},"generated":{"line":5810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5809,"column":0},"generated":{"line":5811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5810,"column":0},"generated":{"line":5812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5811,"column":0},"generated":{"line":5813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5812,"column":0},"generated":{"line":5814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5813,"column":0},"generated":{"line":5815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5814,"column":0},"generated":{"line":5816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5815,"column":0},"generated":{"line":5817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5816,"column":0},"generated":{"line":5818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5817,"column":0},"generated":{"line":5819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5818,"column":0},"generated":{"line":5820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5819,"column":0},"generated":{"line":5821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5820,"column":0},"generated":{"line":5822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5821,"column":0},"generated":{"line":5823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5822,"column":0},"generated":{"line":5824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5823,"column":0},"generated":{"line":5825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5824,"column":0},"generated":{"line":5826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5825,"column":0},"generated":{"line":5827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5826,"column":0},"generated":{"line":5828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5827,"column":0},"generated":{"line":5829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5828,"column":0},"generated":{"line":5830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5829,"column":0},"generated":{"line":5831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5830,"column":0},"generated":{"line":5832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5831,"column":0},"generated":{"line":5833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5832,"column":0},"generated":{"line":5834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5833,"column":0},"generated":{"line":5835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5834,"column":0},"generated":{"line":5836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5835,"column":0},"generated":{"line":5837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5836,"column":0},"generated":{"line":5838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5837,"column":0},"generated":{"line":5839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5838,"column":0},"generated":{"line":5840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5839,"column":0},"generated":{"line":5841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5840,"column":0},"generated":{"line":5842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5841,"column":0},"generated":{"line":5843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5842,"column":0},"generated":{"line":5844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5843,"column":0},"generated":{"line":5845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5844,"column":0},"generated":{"line":5846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5845,"column":0},"generated":{"line":5847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5846,"column":0},"generated":{"line":5848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5847,"column":0},"generated":{"line":5849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5848,"column":0},"generated":{"line":5850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5849,"column":0},"generated":{"line":5851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5850,"column":0},"generated":{"line":5852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5851,"column":0},"generated":{"line":5853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5852,"column":0},"generated":{"line":5854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5853,"column":0},"generated":{"line":5855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5854,"column":0},"generated":{"line":5856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5855,"column":0},"generated":{"line":5857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5856,"column":0},"generated":{"line":5858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5857,"column":0},"generated":{"line":5859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5858,"column":0},"generated":{"line":5860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5859,"column":0},"generated":{"line":5861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5860,"column":0},"generated":{"line":5862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5861,"column":0},"generated":{"line":5863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5862,"column":0},"generated":{"line":5864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5863,"column":0},"generated":{"line":5865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5864,"column":0},"generated":{"line":5866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5865,"column":0},"generated":{"line":5867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5866,"column":0},"generated":{"line":5868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5867,"column":0},"generated":{"line":5869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5868,"column":0},"generated":{"line":5870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5869,"column":0},"generated":{"line":5871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5870,"column":0},"generated":{"line":5872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5871,"column":0},"generated":{"line":5873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5872,"column":0},"generated":{"line":5874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5873,"column":0},"generated":{"line":5875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5874,"column":0},"generated":{"line":5876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5875,"column":0},"generated":{"line":5877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5876,"column":0},"generated":{"line":5878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5877,"column":0},"generated":{"line":5879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5878,"column":0},"generated":{"line":5880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5879,"column":0},"generated":{"line":5881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5880,"column":0},"generated":{"line":5882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5881,"column":0},"generated":{"line":5883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5882,"column":0},"generated":{"line":5884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5883,"column":0},"generated":{"line":5885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5884,"column":0},"generated":{"line":5886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5885,"column":0},"generated":{"line":5887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5886,"column":0},"generated":{"line":5888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5887,"column":0},"generated":{"line":5889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5888,"column":0},"generated":{"line":5890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5889,"column":0},"generated":{"line":5891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5890,"column":0},"generated":{"line":5892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5891,"column":0},"generated":{"line":5893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5892,"column":0},"generated":{"line":5894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5893,"column":0},"generated":{"line":5895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5894,"column":0},"generated":{"line":5896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5895,"column":0},"generated":{"line":5897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5896,"column":0},"generated":{"line":5898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5897,"column":0},"generated":{"line":5899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5898,"column":0},"generated":{"line":5900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5899,"column":0},"generated":{"line":5901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5900,"column":0},"generated":{"line":5902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5901,"column":0},"generated":{"line":5903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5902,"column":0},"generated":{"line":5904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5903,"column":0},"generated":{"line":5905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5904,"column":0},"generated":{"line":5906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5905,"column":0},"generated":{"line":5907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5906,"column":0},"generated":{"line":5908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5907,"column":0},"generated":{"line":5909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5908,"column":0},"generated":{"line":5910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5909,"column":0},"generated":{"line":5911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5910,"column":0},"generated":{"line":5912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5911,"column":0},"generated":{"line":5913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5912,"column":0},"generated":{"line":5914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5913,"column":0},"generated":{"line":5915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5914,"column":0},"generated":{"line":5916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5915,"column":0},"generated":{"line":5917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5916,"column":0},"generated":{"line":5918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5917,"column":0},"generated":{"line":5919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5918,"column":0},"generated":{"line":5920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5919,"column":0},"generated":{"line":5921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5920,"column":0},"generated":{"line":5922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5921,"column":0},"generated":{"line":5923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5922,"column":0},"generated":{"line":5924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5923,"column":0},"generated":{"line":5925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5924,"column":0},"generated":{"line":5926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5925,"column":0},"generated":{"line":5927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5926,"column":0},"generated":{"line":5928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5927,"column":0},"generated":{"line":5929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5928,"column":0},"generated":{"line":5930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5929,"column":0},"generated":{"line":5931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5930,"column":0},"generated":{"line":5932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5931,"column":0},"generated":{"line":5933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5932,"column":0},"generated":{"line":5934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5933,"column":0},"generated":{"line":5935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5934,"column":0},"generated":{"line":5936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5935,"column":0},"generated":{"line":5937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5936,"column":0},"generated":{"line":5938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5937,"column":0},"generated":{"line":5939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5938,"column":0},"generated":{"line":5940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5939,"column":0},"generated":{"line":5941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5940,"column":0},"generated":{"line":5942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5941,"column":0},"generated":{"line":5943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5942,"column":0},"generated":{"line":5944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5943,"column":0},"generated":{"line":5945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5944,"column":0},"generated":{"line":5946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5945,"column":0},"generated":{"line":5947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5946,"column":0},"generated":{"line":5948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5947,"column":0},"generated":{"line":5949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5948,"column":0},"generated":{"line":5950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5949,"column":0},"generated":{"line":5951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5950,"column":0},"generated":{"line":5952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5951,"column":0},"generated":{"line":5953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5952,"column":0},"generated":{"line":5954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5953,"column":0},"generated":{"line":5955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5954,"column":0},"generated":{"line":5956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5955,"column":0},"generated":{"line":5957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5956,"column":0},"generated":{"line":5958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5957,"column":0},"generated":{"line":5959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5958,"column":0},"generated":{"line":5960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5959,"column":0},"generated":{"line":5961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5960,"column":0},"generated":{"line":5962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5961,"column":0},"generated":{"line":5963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5962,"column":0},"generated":{"line":5964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5963,"column":0},"generated":{"line":5965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5964,"column":0},"generated":{"line":5966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5965,"column":0},"generated":{"line":5967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5966,"column":0},"generated":{"line":5968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5967,"column":0},"generated":{"line":5969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5968,"column":0},"generated":{"line":5970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5969,"column":0},"generated":{"line":5971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5970,"column":0},"generated":{"line":5972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5971,"column":0},"generated":{"line":5973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5972,"column":0},"generated":{"line":5974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5973,"column":0},"generated":{"line":5975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5974,"column":0},"generated":{"line":5976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5975,"column":0},"generated":{"line":5977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5976,"column":0},"generated":{"line":5978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5977,"column":0},"generated":{"line":5979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5978,"column":0},"generated":{"line":5980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5979,"column":0},"generated":{"line":5981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5980,"column":0},"generated":{"line":5982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5981,"column":0},"generated":{"line":5983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5982,"column":0},"generated":{"line":5984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5983,"column":0},"generated":{"line":5985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5984,"column":0},"generated":{"line":5986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5985,"column":0},"generated":{"line":5987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5986,"column":0},"generated":{"line":5988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5987,"column":0},"generated":{"line":5989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5988,"column":0},"generated":{"line":5990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5989,"column":0},"generated":{"line":5991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5990,"column":0},"generated":{"line":5992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5991,"column":0},"generated":{"line":5993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5992,"column":0},"generated":{"line":5994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5993,"column":0},"generated":{"line":5995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5994,"column":0},"generated":{"line":5996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5995,"column":0},"generated":{"line":5997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5996,"column":0},"generated":{"line":5998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5997,"column":0},"generated":{"line":5999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5998,"column":0},"generated":{"line":6000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":5999,"column":0},"generated":{"line":6001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6000,"column":0},"generated":{"line":6002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6001,"column":0},"generated":{"line":6003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6002,"column":0},"generated":{"line":6004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6003,"column":0},"generated":{"line":6005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6004,"column":0},"generated":{"line":6006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6005,"column":0},"generated":{"line":6007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6006,"column":0},"generated":{"line":6008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6007,"column":0},"generated":{"line":6009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6008,"column":0},"generated":{"line":6010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6009,"column":0},"generated":{"line":6011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6010,"column":0},"generated":{"line":6012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6011,"column":0},"generated":{"line":6013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6012,"column":0},"generated":{"line":6014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6013,"column":0},"generated":{"line":6015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6014,"column":0},"generated":{"line":6016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6015,"column":0},"generated":{"line":6017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6016,"column":0},"generated":{"line":6018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6017,"column":0},"generated":{"line":6019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6018,"column":0},"generated":{"line":6020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6019,"column":0},"generated":{"line":6021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6020,"column":0},"generated":{"line":6022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6021,"column":0},"generated":{"line":6023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6022,"column":0},"generated":{"line":6024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6023,"column":0},"generated":{"line":6025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6024,"column":0},"generated":{"line":6026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6025,"column":0},"generated":{"line":6027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6026,"column":0},"generated":{"line":6028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6027,"column":0},"generated":{"line":6029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6028,"column":0},"generated":{"line":6030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6029,"column":0},"generated":{"line":6031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6030,"column":0},"generated":{"line":6032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6031,"column":0},"generated":{"line":6033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6032,"column":0},"generated":{"line":6034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6033,"column":0},"generated":{"line":6035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6034,"column":0},"generated":{"line":6036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6035,"column":0},"generated":{"line":6037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6036,"column":0},"generated":{"line":6038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6037,"column":0},"generated":{"line":6039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6038,"column":0},"generated":{"line":6040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6039,"column":0},"generated":{"line":6041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6040,"column":0},"generated":{"line":6042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6041,"column":0},"generated":{"line":6043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6042,"column":0},"generated":{"line":6044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6043,"column":0},"generated":{"line":6045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6044,"column":0},"generated":{"line":6046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6045,"column":0},"generated":{"line":6047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6046,"column":0},"generated":{"line":6048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6047,"column":0},"generated":{"line":6049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6048,"column":0},"generated":{"line":6050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6049,"column":0},"generated":{"line":6051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6050,"column":0},"generated":{"line":6052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6051,"column":0},"generated":{"line":6053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6052,"column":0},"generated":{"line":6054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6053,"column":0},"generated":{"line":6055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6054,"column":0},"generated":{"line":6056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6055,"column":0},"generated":{"line":6057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6056,"column":0},"generated":{"line":6058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6057,"column":0},"generated":{"line":6059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6058,"column":0},"generated":{"line":6060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6059,"column":0},"generated":{"line":6061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6060,"column":0},"generated":{"line":6062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6061,"column":0},"generated":{"line":6063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6062,"column":0},"generated":{"line":6064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6063,"column":0},"generated":{"line":6065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6064,"column":0},"generated":{"line":6066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6065,"column":0},"generated":{"line":6067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6066,"column":0},"generated":{"line":6068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6067,"column":0},"generated":{"line":6069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6068,"column":0},"generated":{"line":6070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6069,"column":0},"generated":{"line":6071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6070,"column":0},"generated":{"line":6072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6071,"column":0},"generated":{"line":6073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6072,"column":0},"generated":{"line":6074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6073,"column":0},"generated":{"line":6075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6074,"column":0},"generated":{"line":6076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6075,"column":0},"generated":{"line":6077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6076,"column":0},"generated":{"line":6078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6077,"column":0},"generated":{"line":6079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6078,"column":0},"generated":{"line":6080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6079,"column":0},"generated":{"line":6081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6080,"column":0},"generated":{"line":6082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6081,"column":0},"generated":{"line":6083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6082,"column":0},"generated":{"line":6084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6083,"column":0},"generated":{"line":6085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6084,"column":0},"generated":{"line":6086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6085,"column":0},"generated":{"line":6087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6086,"column":0},"generated":{"line":6088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6087,"column":0},"generated":{"line":6089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6088,"column":0},"generated":{"line":6090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6089,"column":0},"generated":{"line":6091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6090,"column":0},"generated":{"line":6092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6091,"column":0},"generated":{"line":6093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6092,"column":0},"generated":{"line":6094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6093,"column":0},"generated":{"line":6095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6094,"column":0},"generated":{"line":6096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6095,"column":0},"generated":{"line":6097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6096,"column":0},"generated":{"line":6098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6097,"column":0},"generated":{"line":6099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6098,"column":0},"generated":{"line":6100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6099,"column":0},"generated":{"line":6101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6100,"column":0},"generated":{"line":6102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6101,"column":0},"generated":{"line":6103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6102,"column":0},"generated":{"line":6104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6103,"column":0},"generated":{"line":6105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6104,"column":0},"generated":{"line":6106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6105,"column":0},"generated":{"line":6107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6106,"column":0},"generated":{"line":6108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6107,"column":0},"generated":{"line":6109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6108,"column":0},"generated":{"line":6110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6109,"column":0},"generated":{"line":6111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6110,"column":0},"generated":{"line":6112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6111,"column":0},"generated":{"line":6113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6112,"column":0},"generated":{"line":6114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6113,"column":0},"generated":{"line":6115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6114,"column":0},"generated":{"line":6116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6115,"column":0},"generated":{"line":6117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6116,"column":0},"generated":{"line":6118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6117,"column":0},"generated":{"line":6119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6118,"column":0},"generated":{"line":6120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6119,"column":0},"generated":{"line":6121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6120,"column":0},"generated":{"line":6122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6121,"column":0},"generated":{"line":6123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6122,"column":0},"generated":{"line":6124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6123,"column":0},"generated":{"line":6125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6124,"column":0},"generated":{"line":6126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6125,"column":0},"generated":{"line":6127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6126,"column":0},"generated":{"line":6128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6127,"column":0},"generated":{"line":6129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6128,"column":0},"generated":{"line":6130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6129,"column":0},"generated":{"line":6131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6130,"column":0},"generated":{"line":6132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6131,"column":0},"generated":{"line":6133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6132,"column":0},"generated":{"line":6134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6133,"column":0},"generated":{"line":6135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6134,"column":0},"generated":{"line":6136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6135,"column":0},"generated":{"line":6137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6136,"column":0},"generated":{"line":6138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6137,"column":0},"generated":{"line":6139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6138,"column":0},"generated":{"line":6140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6139,"column":0},"generated":{"line":6141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6140,"column":0},"generated":{"line":6142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6141,"column":0},"generated":{"line":6143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6142,"column":0},"generated":{"line":6144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6143,"column":0},"generated":{"line":6145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6144,"column":0},"generated":{"line":6146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6145,"column":0},"generated":{"line":6147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6146,"column":0},"generated":{"line":6148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6147,"column":0},"generated":{"line":6149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6148,"column":0},"generated":{"line":6150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6149,"column":0},"generated":{"line":6151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6150,"column":0},"generated":{"line":6152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6151,"column":0},"generated":{"line":6153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6152,"column":0},"generated":{"line":6154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6153,"column":0},"generated":{"line":6155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6154,"column":0},"generated":{"line":6156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6155,"column":0},"generated":{"line":6157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6156,"column":0},"generated":{"line":6158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6157,"column":0},"generated":{"line":6159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6158,"column":0},"generated":{"line":6160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6159,"column":0},"generated":{"line":6161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6160,"column":0},"generated":{"line":6162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6161,"column":0},"generated":{"line":6163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6162,"column":0},"generated":{"line":6164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6163,"column":0},"generated":{"line":6165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6164,"column":0},"generated":{"line":6166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6165,"column":0},"generated":{"line":6167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6166,"column":0},"generated":{"line":6168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6167,"column":0},"generated":{"line":6169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6168,"column":0},"generated":{"line":6170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6169,"column":0},"generated":{"line":6171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6170,"column":0},"generated":{"line":6172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6171,"column":0},"generated":{"line":6173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6172,"column":0},"generated":{"line":6174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6173,"column":0},"generated":{"line":6175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6174,"column":0},"generated":{"line":6176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6175,"column":0},"generated":{"line":6177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6176,"column":0},"generated":{"line":6178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6177,"column":0},"generated":{"line":6179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6178,"column":0},"generated":{"line":6180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6179,"column":0},"generated":{"line":6181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6180,"column":0},"generated":{"line":6182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6181,"column":0},"generated":{"line":6183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6182,"column":0},"generated":{"line":6184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6183,"column":0},"generated":{"line":6185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6184,"column":0},"generated":{"line":6186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6185,"column":0},"generated":{"line":6187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6186,"column":0},"generated":{"line":6188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6187,"column":0},"generated":{"line":6189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6188,"column":0},"generated":{"line":6190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6189,"column":0},"generated":{"line":6191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6190,"column":0},"generated":{"line":6192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6191,"column":0},"generated":{"line":6193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6192,"column":0},"generated":{"line":6194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6193,"column":0},"generated":{"line":6195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6194,"column":0},"generated":{"line":6196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6195,"column":0},"generated":{"line":6197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6196,"column":0},"generated":{"line":6198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6197,"column":0},"generated":{"line":6199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6198,"column":0},"generated":{"line":6200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6199,"column":0},"generated":{"line":6201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6200,"column":0},"generated":{"line":6202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6201,"column":0},"generated":{"line":6203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6202,"column":0},"generated":{"line":6204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6203,"column":0},"generated":{"line":6205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6204,"column":0},"generated":{"line":6206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6205,"column":0},"generated":{"line":6207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6206,"column":0},"generated":{"line":6208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6207,"column":0},"generated":{"line":6209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6208,"column":0},"generated":{"line":6210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6209,"column":0},"generated":{"line":6211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6210,"column":0},"generated":{"line":6212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6211,"column":0},"generated":{"line":6213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6212,"column":0},"generated":{"line":6214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6213,"column":0},"generated":{"line":6215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6214,"column":0},"generated":{"line":6216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6215,"column":0},"generated":{"line":6217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6216,"column":0},"generated":{"line":6218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6217,"column":0},"generated":{"line":6219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6218,"column":0},"generated":{"line":6220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6219,"column":0},"generated":{"line":6221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6220,"column":0},"generated":{"line":6222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6221,"column":0},"generated":{"line":6223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6222,"column":0},"generated":{"line":6224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6223,"column":0},"generated":{"line":6225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6224,"column":0},"generated":{"line":6226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6225,"column":0},"generated":{"line":6227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6226,"column":0},"generated":{"line":6228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6227,"column":0},"generated":{"line":6229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6228,"column":0},"generated":{"line":6230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6229,"column":0},"generated":{"line":6231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6230,"column":0},"generated":{"line":6232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6231,"column":0},"generated":{"line":6233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6232,"column":0},"generated":{"line":6234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6233,"column":0},"generated":{"line":6235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6234,"column":0},"generated":{"line":6236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6235,"column":0},"generated":{"line":6237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6236,"column":0},"generated":{"line":6238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6237,"column":0},"generated":{"line":6239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6238,"column":0},"generated":{"line":6240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6239,"column":0},"generated":{"line":6241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6240,"column":0},"generated":{"line":6242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6241,"column":0},"generated":{"line":6243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6242,"column":0},"generated":{"line":6244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6243,"column":0},"generated":{"line":6245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6244,"column":0},"generated":{"line":6246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6245,"column":0},"generated":{"line":6247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6246,"column":0},"generated":{"line":6248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6247,"column":0},"generated":{"line":6249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6248,"column":0},"generated":{"line":6250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6249,"column":0},"generated":{"line":6251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6250,"column":0},"generated":{"line":6252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6251,"column":0},"generated":{"line":6253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6252,"column":0},"generated":{"line":6254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6253,"column":0},"generated":{"line":6255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6254,"column":0},"generated":{"line":6256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6255,"column":0},"generated":{"line":6257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6256,"column":0},"generated":{"line":6258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6257,"column":0},"generated":{"line":6259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6258,"column":0},"generated":{"line":6260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6259,"column":0},"generated":{"line":6261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6260,"column":0},"generated":{"line":6262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6261,"column":0},"generated":{"line":6263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6262,"column":0},"generated":{"line":6264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6263,"column":0},"generated":{"line":6265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6264,"column":0},"generated":{"line":6266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6265,"column":0},"generated":{"line":6267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6266,"column":0},"generated":{"line":6268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6267,"column":0},"generated":{"line":6269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6268,"column":0},"generated":{"line":6270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6269,"column":0},"generated":{"line":6271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6270,"column":0},"generated":{"line":6272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6271,"column":0},"generated":{"line":6273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6272,"column":0},"generated":{"line":6274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6273,"column":0},"generated":{"line":6275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6274,"column":0},"generated":{"line":6276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6275,"column":0},"generated":{"line":6277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6276,"column":0},"generated":{"line":6278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6277,"column":0},"generated":{"line":6279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6278,"column":0},"generated":{"line":6280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6279,"column":0},"generated":{"line":6281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6280,"column":0},"generated":{"line":6282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6281,"column":0},"generated":{"line":6283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6282,"column":0},"generated":{"line":6284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6283,"column":0},"generated":{"line":6285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6284,"column":0},"generated":{"line":6286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6285,"column":0},"generated":{"line":6287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6286,"column":0},"generated":{"line":6288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6287,"column":0},"generated":{"line":6289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6288,"column":0},"generated":{"line":6290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6289,"column":0},"generated":{"line":6291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6290,"column":0},"generated":{"line":6292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6291,"column":0},"generated":{"line":6293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6292,"column":0},"generated":{"line":6294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6293,"column":0},"generated":{"line":6295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6294,"column":0},"generated":{"line":6296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6295,"column":0},"generated":{"line":6297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6296,"column":0},"generated":{"line":6298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6297,"column":0},"generated":{"line":6299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6298,"column":0},"generated":{"line":6300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6299,"column":0},"generated":{"line":6301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6300,"column":0},"generated":{"line":6302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6301,"column":0},"generated":{"line":6303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6302,"column":0},"generated":{"line":6304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6303,"column":0},"generated":{"line":6305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6304,"column":0},"generated":{"line":6306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6305,"column":0},"generated":{"line":6307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6306,"column":0},"generated":{"line":6308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6307,"column":0},"generated":{"line":6309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6308,"column":0},"generated":{"line":6310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6309,"column":0},"generated":{"line":6311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6310,"column":0},"generated":{"line":6312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6311,"column":0},"generated":{"line":6313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6312,"column":0},"generated":{"line":6314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6313,"column":0},"generated":{"line":6315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6314,"column":0},"generated":{"line":6316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6315,"column":0},"generated":{"line":6317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6316,"column":0},"generated":{"line":6318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6317,"column":0},"generated":{"line":6319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6318,"column":0},"generated":{"line":6320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6319,"column":0},"generated":{"line":6321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6320,"column":0},"generated":{"line":6322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6321,"column":0},"generated":{"line":6323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6322,"column":0},"generated":{"line":6324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6323,"column":0},"generated":{"line":6325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6324,"column":0},"generated":{"line":6326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6325,"column":0},"generated":{"line":6327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6326,"column":0},"generated":{"line":6328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6327,"column":0},"generated":{"line":6329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6328,"column":0},"generated":{"line":6330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6329,"column":0},"generated":{"line":6331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6330,"column":0},"generated":{"line":6332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6331,"column":0},"generated":{"line":6333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6332,"column":0},"generated":{"line":6334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6333,"column":0},"generated":{"line":6335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6334,"column":0},"generated":{"line":6336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6335,"column":0},"generated":{"line":6337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6336,"column":0},"generated":{"line":6338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6337,"column":0},"generated":{"line":6339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6338,"column":0},"generated":{"line":6340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6339,"column":0},"generated":{"line":6341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6340,"column":0},"generated":{"line":6342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6341,"column":0},"generated":{"line":6343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6342,"column":0},"generated":{"line":6344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6343,"column":0},"generated":{"line":6345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6344,"column":0},"generated":{"line":6346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6345,"column":0},"generated":{"line":6347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6346,"column":0},"generated":{"line":6348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6347,"column":0},"generated":{"line":6349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6348,"column":0},"generated":{"line":6350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6349,"column":0},"generated":{"line":6351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6350,"column":0},"generated":{"line":6352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6351,"column":0},"generated":{"line":6353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6352,"column":0},"generated":{"line":6354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6353,"column":0},"generated":{"line":6355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6354,"column":0},"generated":{"line":6356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6355,"column":0},"generated":{"line":6357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6356,"column":0},"generated":{"line":6358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6357,"column":0},"generated":{"line":6359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6358,"column":0},"generated":{"line":6360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6359,"column":0},"generated":{"line":6361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6360,"column":0},"generated":{"line":6362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6361,"column":0},"generated":{"line":6363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6362,"column":0},"generated":{"line":6364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6363,"column":0},"generated":{"line":6365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6364,"column":0},"generated":{"line":6366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6365,"column":0},"generated":{"line":6367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6366,"column":0},"generated":{"line":6368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6367,"column":0},"generated":{"line":6369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6368,"column":0},"generated":{"line":6370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6369,"column":0},"generated":{"line":6371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6370,"column":0},"generated":{"line":6372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6371,"column":0},"generated":{"line":6373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6372,"column":0},"generated":{"line":6374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6373,"column":0},"generated":{"line":6375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6374,"column":0},"generated":{"line":6376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6375,"column":0},"generated":{"line":6377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6376,"column":0},"generated":{"line":6378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6377,"column":0},"generated":{"line":6379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6378,"column":0},"generated":{"line":6380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6379,"column":0},"generated":{"line":6381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6380,"column":0},"generated":{"line":6382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6381,"column":0},"generated":{"line":6383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6382,"column":0},"generated":{"line":6384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6383,"column":0},"generated":{"line":6385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6384,"column":0},"generated":{"line":6386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6385,"column":0},"generated":{"line":6387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6386,"column":0},"generated":{"line":6388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6387,"column":0},"generated":{"line":6389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6388,"column":0},"generated":{"line":6390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6389,"column":0},"generated":{"line":6391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6390,"column":0},"generated":{"line":6392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6391,"column":0},"generated":{"line":6393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6392,"column":0},"generated":{"line":6394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6393,"column":0},"generated":{"line":6395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6394,"column":0},"generated":{"line":6396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6395,"column":0},"generated":{"line":6397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6396,"column":0},"generated":{"line":6398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6397,"column":0},"generated":{"line":6399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6398,"column":0},"generated":{"line":6400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6399,"column":0},"generated":{"line":6401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6400,"column":0},"generated":{"line":6402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6401,"column":0},"generated":{"line":6403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6402,"column":0},"generated":{"line":6404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6403,"column":0},"generated":{"line":6405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6404,"column":0},"generated":{"line":6406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6405,"column":0},"generated":{"line":6407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6406,"column":0},"generated":{"line":6408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6407,"column":0},"generated":{"line":6409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6408,"column":0},"generated":{"line":6410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6409,"column":0},"generated":{"line":6411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6410,"column":0},"generated":{"line":6412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6411,"column":0},"generated":{"line":6413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6412,"column":0},"generated":{"line":6414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6413,"column":0},"generated":{"line":6415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6414,"column":0},"generated":{"line":6416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6415,"column":0},"generated":{"line":6417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6416,"column":0},"generated":{"line":6418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6417,"column":0},"generated":{"line":6419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6418,"column":0},"generated":{"line":6420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6419,"column":0},"generated":{"line":6421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6420,"column":0},"generated":{"line":6422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6421,"column":0},"generated":{"line":6423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6422,"column":0},"generated":{"line":6424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6423,"column":0},"generated":{"line":6425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6424,"column":0},"generated":{"line":6426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6425,"column":0},"generated":{"line":6427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6426,"column":0},"generated":{"line":6428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6427,"column":0},"generated":{"line":6429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6428,"column":0},"generated":{"line":6430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6429,"column":0},"generated":{"line":6431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6430,"column":0},"generated":{"line":6432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6431,"column":0},"generated":{"line":6433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6432,"column":0},"generated":{"line":6434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6433,"column":0},"generated":{"line":6435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6434,"column":0},"generated":{"line":6436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6435,"column":0},"generated":{"line":6437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6436,"column":0},"generated":{"line":6438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6437,"column":0},"generated":{"line":6439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6438,"column":0},"generated":{"line":6440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6439,"column":0},"generated":{"line":6441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6440,"column":0},"generated":{"line":6442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6441,"column":0},"generated":{"line":6443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6442,"column":0},"generated":{"line":6444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6443,"column":0},"generated":{"line":6445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6444,"column":0},"generated":{"line":6446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6445,"column":0},"generated":{"line":6447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6446,"column":0},"generated":{"line":6448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6447,"column":0},"generated":{"line":6449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6448,"column":0},"generated":{"line":6450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6449,"column":0},"generated":{"line":6451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6450,"column":0},"generated":{"line":6452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6451,"column":0},"generated":{"line":6453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6452,"column":0},"generated":{"line":6454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6453,"column":0},"generated":{"line":6455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6454,"column":0},"generated":{"line":6456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6455,"column":0},"generated":{"line":6457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6456,"column":0},"generated":{"line":6458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6457,"column":0},"generated":{"line":6459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6458,"column":0},"generated":{"line":6460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6459,"column":0},"generated":{"line":6461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6460,"column":0},"generated":{"line":6462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6461,"column":0},"generated":{"line":6463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6462,"column":0},"generated":{"line":6464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6463,"column":0},"generated":{"line":6465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6464,"column":0},"generated":{"line":6466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6465,"column":0},"generated":{"line":6467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6466,"column":0},"generated":{"line":6468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6467,"column":0},"generated":{"line":6469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6468,"column":0},"generated":{"line":6470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6469,"column":0},"generated":{"line":6471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6470,"column":0},"generated":{"line":6472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6471,"column":0},"generated":{"line":6473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6472,"column":0},"generated":{"line":6474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6473,"column":0},"generated":{"line":6475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6474,"column":0},"generated":{"line":6476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6475,"column":0},"generated":{"line":6477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6476,"column":0},"generated":{"line":6478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6477,"column":0},"generated":{"line":6479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6478,"column":0},"generated":{"line":6480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6479,"column":0},"generated":{"line":6481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6480,"column":0},"generated":{"line":6482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6481,"column":0},"generated":{"line":6483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6482,"column":0},"generated":{"line":6484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6483,"column":0},"generated":{"line":6485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6484,"column":0},"generated":{"line":6486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6485,"column":0},"generated":{"line":6487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6486,"column":0},"generated":{"line":6488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6487,"column":0},"generated":{"line":6489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6488,"column":0},"generated":{"line":6490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6489,"column":0},"generated":{"line":6491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6490,"column":0},"generated":{"line":6492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6491,"column":0},"generated":{"line":6493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6492,"column":0},"generated":{"line":6494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6493,"column":0},"generated":{"line":6495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6494,"column":0},"generated":{"line":6496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6495,"column":0},"generated":{"line":6497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6496,"column":0},"generated":{"line":6498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6497,"column":0},"generated":{"line":6499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6498,"column":0},"generated":{"line":6500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6499,"column":0},"generated":{"line":6501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6500,"column":0},"generated":{"line":6502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6501,"column":0},"generated":{"line":6503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6502,"column":0},"generated":{"line":6504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6503,"column":0},"generated":{"line":6505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6504,"column":0},"generated":{"line":6506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6505,"column":0},"generated":{"line":6507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6506,"column":0},"generated":{"line":6508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6507,"column":0},"generated":{"line":6509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6508,"column":0},"generated":{"line":6510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6509,"column":0},"generated":{"line":6511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6510,"column":0},"generated":{"line":6512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6511,"column":0},"generated":{"line":6513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6512,"column":0},"generated":{"line":6514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6513,"column":0},"generated":{"line":6515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6514,"column":0},"generated":{"line":6516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6515,"column":0},"generated":{"line":6517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6516,"column":0},"generated":{"line":6518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6517,"column":0},"generated":{"line":6519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6518,"column":0},"generated":{"line":6520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6519,"column":0},"generated":{"line":6521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6520,"column":0},"generated":{"line":6522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6521,"column":0},"generated":{"line":6523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6522,"column":0},"generated":{"line":6524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6523,"column":0},"generated":{"line":6525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6524,"column":0},"generated":{"line":6526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6525,"column":0},"generated":{"line":6527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6526,"column":0},"generated":{"line":6528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6527,"column":0},"generated":{"line":6529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6528,"column":0},"generated":{"line":6530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6529,"column":0},"generated":{"line":6531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6530,"column":0},"generated":{"line":6532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6531,"column":0},"generated":{"line":6533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6532,"column":0},"generated":{"line":6534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6533,"column":0},"generated":{"line":6535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6534,"column":0},"generated":{"line":6536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6535,"column":0},"generated":{"line":6537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6536,"column":0},"generated":{"line":6538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6537,"column":0},"generated":{"line":6539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6538,"column":0},"generated":{"line":6540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6539,"column":0},"generated":{"line":6541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6540,"column":0},"generated":{"line":6542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6541,"column":0},"generated":{"line":6543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6542,"column":0},"generated":{"line":6544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6543,"column":0},"generated":{"line":6545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6544,"column":0},"generated":{"line":6546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6545,"column":0},"generated":{"line":6547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6546,"column":0},"generated":{"line":6548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6547,"column":0},"generated":{"line":6549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6548,"column":0},"generated":{"line":6550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6549,"column":0},"generated":{"line":6551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6550,"column":0},"generated":{"line":6552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6551,"column":0},"generated":{"line":6553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6552,"column":0},"generated":{"line":6554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6553,"column":0},"generated":{"line":6555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6554,"column":0},"generated":{"line":6556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6555,"column":0},"generated":{"line":6557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6556,"column":0},"generated":{"line":6558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6557,"column":0},"generated":{"line":6559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6558,"column":0},"generated":{"line":6560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6559,"column":0},"generated":{"line":6561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6560,"column":0},"generated":{"line":6562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6561,"column":0},"generated":{"line":6563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6562,"column":0},"generated":{"line":6564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6563,"column":0},"generated":{"line":6565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6564,"column":0},"generated":{"line":6566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6565,"column":0},"generated":{"line":6567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6566,"column":0},"generated":{"line":6568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6567,"column":0},"generated":{"line":6569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6568,"column":0},"generated":{"line":6570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6569,"column":0},"generated":{"line":6571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6570,"column":0},"generated":{"line":6572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6571,"column":0},"generated":{"line":6573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6572,"column":0},"generated":{"line":6574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6573,"column":0},"generated":{"line":6575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6574,"column":0},"generated":{"line":6576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6575,"column":0},"generated":{"line":6577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6576,"column":0},"generated":{"line":6578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6577,"column":0},"generated":{"line":6579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6578,"column":0},"generated":{"line":6580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6579,"column":0},"generated":{"line":6581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6580,"column":0},"generated":{"line":6582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6581,"column":0},"generated":{"line":6583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6582,"column":0},"generated":{"line":6584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6583,"column":0},"generated":{"line":6585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6584,"column":0},"generated":{"line":6586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6585,"column":0},"generated":{"line":6587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6586,"column":0},"generated":{"line":6588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6587,"column":0},"generated":{"line":6589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6588,"column":0},"generated":{"line":6590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6589,"column":0},"generated":{"line":6591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6590,"column":0},"generated":{"line":6592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6591,"column":0},"generated":{"line":6593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6592,"column":0},"generated":{"line":6594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6593,"column":0},"generated":{"line":6595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6594,"column":0},"generated":{"line":6596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6595,"column":0},"generated":{"line":6597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6596,"column":0},"generated":{"line":6598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6597,"column":0},"generated":{"line":6599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6598,"column":0},"generated":{"line":6600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6599,"column":0},"generated":{"line":6601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6600,"column":0},"generated":{"line":6602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6601,"column":0},"generated":{"line":6603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6602,"column":0},"generated":{"line":6604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6603,"column":0},"generated":{"line":6605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6604,"column":0},"generated":{"line":6606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6605,"column":0},"generated":{"line":6607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6606,"column":0},"generated":{"line":6608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6607,"column":0},"generated":{"line":6609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6608,"column":0},"generated":{"line":6610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6609,"column":0},"generated":{"line":6611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6610,"column":0},"generated":{"line":6612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6611,"column":0},"generated":{"line":6613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6612,"column":0},"generated":{"line":6614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6613,"column":0},"generated":{"line":6615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6614,"column":0},"generated":{"line":6616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6615,"column":0},"generated":{"line":6617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6616,"column":0},"generated":{"line":6618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6617,"column":0},"generated":{"line":6619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6618,"column":0},"generated":{"line":6620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6619,"column":0},"generated":{"line":6621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6620,"column":0},"generated":{"line":6622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6621,"column":0},"generated":{"line":6623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6622,"column":0},"generated":{"line":6624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6623,"column":0},"generated":{"line":6625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6624,"column":0},"generated":{"line":6626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6625,"column":0},"generated":{"line":6627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6626,"column":0},"generated":{"line":6628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6627,"column":0},"generated":{"line":6629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6628,"column":0},"generated":{"line":6630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6629,"column":0},"generated":{"line":6631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6630,"column":0},"generated":{"line":6632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6631,"column":0},"generated":{"line":6633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6632,"column":0},"generated":{"line":6634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6633,"column":0},"generated":{"line":6635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6634,"column":0},"generated":{"line":6636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6635,"column":0},"generated":{"line":6637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6636,"column":0},"generated":{"line":6638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6637,"column":0},"generated":{"line":6639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6638,"column":0},"generated":{"line":6640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6639,"column":0},"generated":{"line":6641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6640,"column":0},"generated":{"line":6642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6641,"column":0},"generated":{"line":6643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6642,"column":0},"generated":{"line":6644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6643,"column":0},"generated":{"line":6645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6644,"column":0},"generated":{"line":6646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6645,"column":0},"generated":{"line":6647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6646,"column":0},"generated":{"line":6648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6647,"column":0},"generated":{"line":6649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6648,"column":0},"generated":{"line":6650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6649,"column":0},"generated":{"line":6651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6650,"column":0},"generated":{"line":6652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6651,"column":0},"generated":{"line":6653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6652,"column":0},"generated":{"line":6654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6653,"column":0},"generated":{"line":6655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6654,"column":0},"generated":{"line":6656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6655,"column":0},"generated":{"line":6657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6656,"column":0},"generated":{"line":6658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6657,"column":0},"generated":{"line":6659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6658,"column":0},"generated":{"line":6660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6659,"column":0},"generated":{"line":6661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6660,"column":0},"generated":{"line":6662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6661,"column":0},"generated":{"line":6663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6662,"column":0},"generated":{"line":6664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6663,"column":0},"generated":{"line":6665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6664,"column":0},"generated":{"line":6666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6665,"column":0},"generated":{"line":6667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6666,"column":0},"generated":{"line":6668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6667,"column":0},"generated":{"line":6669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6668,"column":0},"generated":{"line":6670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6669,"column":0},"generated":{"line":6671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6670,"column":0},"generated":{"line":6672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6671,"column":0},"generated":{"line":6673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6672,"column":0},"generated":{"line":6674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6673,"column":0},"generated":{"line":6675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6674,"column":0},"generated":{"line":6676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6675,"column":0},"generated":{"line":6677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6676,"column":0},"generated":{"line":6678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6677,"column":0},"generated":{"line":6679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6678,"column":0},"generated":{"line":6680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6679,"column":0},"generated":{"line":6681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6680,"column":0},"generated":{"line":6682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6681,"column":0},"generated":{"line":6683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6682,"column":0},"generated":{"line":6684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6683,"column":0},"generated":{"line":6685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6684,"column":0},"generated":{"line":6686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6685,"column":0},"generated":{"line":6687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6686,"column":0},"generated":{"line":6688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6687,"column":0},"generated":{"line":6689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6688,"column":0},"generated":{"line":6690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6689,"column":0},"generated":{"line":6691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6690,"column":0},"generated":{"line":6692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6691,"column":0},"generated":{"line":6693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6692,"column":0},"generated":{"line":6694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6693,"column":0},"generated":{"line":6695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6694,"column":0},"generated":{"line":6696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6695,"column":0},"generated":{"line":6697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6696,"column":0},"generated":{"line":6698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6697,"column":0},"generated":{"line":6699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6698,"column":0},"generated":{"line":6700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6699,"column":0},"generated":{"line":6701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6700,"column":0},"generated":{"line":6702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6701,"column":0},"generated":{"line":6703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6702,"column":0},"generated":{"line":6704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6703,"column":0},"generated":{"line":6705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6704,"column":0},"generated":{"line":6706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6705,"column":0},"generated":{"line":6707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6706,"column":0},"generated":{"line":6708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6707,"column":0},"generated":{"line":6709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6708,"column":0},"generated":{"line":6710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6709,"column":0},"generated":{"line":6711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6710,"column":0},"generated":{"line":6712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6711,"column":0},"generated":{"line":6713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6712,"column":0},"generated":{"line":6714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6713,"column":0},"generated":{"line":6715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6714,"column":0},"generated":{"line":6716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6715,"column":0},"generated":{"line":6717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6716,"column":0},"generated":{"line":6718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6717,"column":0},"generated":{"line":6719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6718,"column":0},"generated":{"line":6720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6719,"column":0},"generated":{"line":6721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6720,"column":0},"generated":{"line":6722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6721,"column":0},"generated":{"line":6723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6722,"column":0},"generated":{"line":6724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6723,"column":0},"generated":{"line":6725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6724,"column":0},"generated":{"line":6726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6725,"column":0},"generated":{"line":6727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6726,"column":0},"generated":{"line":6728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6727,"column":0},"generated":{"line":6729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6728,"column":0},"generated":{"line":6730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6729,"column":0},"generated":{"line":6731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6730,"column":0},"generated":{"line":6732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6731,"column":0},"generated":{"line":6733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6732,"column":0},"generated":{"line":6734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6733,"column":0},"generated":{"line":6735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6734,"column":0},"generated":{"line":6736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6735,"column":0},"generated":{"line":6737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6736,"column":0},"generated":{"line":6738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6737,"column":0},"generated":{"line":6739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6738,"column":0},"generated":{"line":6740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6739,"column":0},"generated":{"line":6741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6740,"column":0},"generated":{"line":6742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6741,"column":0},"generated":{"line":6743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6742,"column":0},"generated":{"line":6744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6743,"column":0},"generated":{"line":6745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6744,"column":0},"generated":{"line":6746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6745,"column":0},"generated":{"line":6747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6746,"column":0},"generated":{"line":6748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6747,"column":0},"generated":{"line":6749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6748,"column":0},"generated":{"line":6750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6749,"column":0},"generated":{"line":6751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6750,"column":0},"generated":{"line":6752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6751,"column":0},"generated":{"line":6753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6752,"column":0},"generated":{"line":6754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6753,"column":0},"generated":{"line":6755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6754,"column":0},"generated":{"line":6756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6755,"column":0},"generated":{"line":6757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6756,"column":0},"generated":{"line":6758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6757,"column":0},"generated":{"line":6759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6758,"column":0},"generated":{"line":6760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6759,"column":0},"generated":{"line":6761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6760,"column":0},"generated":{"line":6762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6761,"column":0},"generated":{"line":6763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6762,"column":0},"generated":{"line":6764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6763,"column":0},"generated":{"line":6765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6764,"column":0},"generated":{"line":6766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6765,"column":0},"generated":{"line":6767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6766,"column":0},"generated":{"line":6768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6767,"column":0},"generated":{"line":6769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6768,"column":0},"generated":{"line":6770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6769,"column":0},"generated":{"line":6771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6770,"column":0},"generated":{"line":6772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6771,"column":0},"generated":{"line":6773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6772,"column":0},"generated":{"line":6774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6773,"column":0},"generated":{"line":6775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6774,"column":0},"generated":{"line":6776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6775,"column":0},"generated":{"line":6777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6776,"column":0},"generated":{"line":6778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6777,"column":0},"generated":{"line":6779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6778,"column":0},"generated":{"line":6780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6779,"column":0},"generated":{"line":6781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6780,"column":0},"generated":{"line":6782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6781,"column":0},"generated":{"line":6783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6782,"column":0},"generated":{"line":6784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6783,"column":0},"generated":{"line":6785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6784,"column":0},"generated":{"line":6786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6785,"column":0},"generated":{"line":6787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6786,"column":0},"generated":{"line":6788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6787,"column":0},"generated":{"line":6789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6788,"column":0},"generated":{"line":6790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6789,"column":0},"generated":{"line":6791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6790,"column":0},"generated":{"line":6792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6791,"column":0},"generated":{"line":6793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6792,"column":0},"generated":{"line":6794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6793,"column":0},"generated":{"line":6795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6794,"column":0},"generated":{"line":6796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6795,"column":0},"generated":{"line":6797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6796,"column":0},"generated":{"line":6798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6797,"column":0},"generated":{"line":6799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6798,"column":0},"generated":{"line":6800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6799,"column":0},"generated":{"line":6801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6800,"column":0},"generated":{"line":6802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6801,"column":0},"generated":{"line":6803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6802,"column":0},"generated":{"line":6804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6803,"column":0},"generated":{"line":6805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6804,"column":0},"generated":{"line":6806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6805,"column":0},"generated":{"line":6807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6806,"column":0},"generated":{"line":6808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6807,"column":0},"generated":{"line":6809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6808,"column":0},"generated":{"line":6810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6809,"column":0},"generated":{"line":6811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6810,"column":0},"generated":{"line":6812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6811,"column":0},"generated":{"line":6813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6812,"column":0},"generated":{"line":6814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6813,"column":0},"generated":{"line":6815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6814,"column":0},"generated":{"line":6816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6815,"column":0},"generated":{"line":6817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6816,"column":0},"generated":{"line":6818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6817,"column":0},"generated":{"line":6819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6818,"column":0},"generated":{"line":6820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6819,"column":0},"generated":{"line":6821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6820,"column":0},"generated":{"line":6822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6821,"column":0},"generated":{"line":6823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6822,"column":0},"generated":{"line":6824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6823,"column":0},"generated":{"line":6825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6824,"column":0},"generated":{"line":6826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6825,"column":0},"generated":{"line":6827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6826,"column":0},"generated":{"line":6828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6827,"column":0},"generated":{"line":6829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6828,"column":0},"generated":{"line":6830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6829,"column":0},"generated":{"line":6831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6830,"column":0},"generated":{"line":6832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6831,"column":0},"generated":{"line":6833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6832,"column":0},"generated":{"line":6834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6833,"column":0},"generated":{"line":6835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6834,"column":0},"generated":{"line":6836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6835,"column":0},"generated":{"line":6837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6836,"column":0},"generated":{"line":6838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6837,"column":0},"generated":{"line":6839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6838,"column":0},"generated":{"line":6840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6839,"column":0},"generated":{"line":6841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6840,"column":0},"generated":{"line":6842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6841,"column":0},"generated":{"line":6843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6842,"column":0},"generated":{"line":6844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6843,"column":0},"generated":{"line":6845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6844,"column":0},"generated":{"line":6846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6845,"column":0},"generated":{"line":6847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6846,"column":0},"generated":{"line":6848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6847,"column":0},"generated":{"line":6849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6848,"column":0},"generated":{"line":6850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6849,"column":0},"generated":{"line":6851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6850,"column":0},"generated":{"line":6852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6851,"column":0},"generated":{"line":6853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6852,"column":0},"generated":{"line":6854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6853,"column":0},"generated":{"line":6855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6854,"column":0},"generated":{"line":6856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6855,"column":0},"generated":{"line":6857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6856,"column":0},"generated":{"line":6858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6857,"column":0},"generated":{"line":6859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6858,"column":0},"generated":{"line":6860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6859,"column":0},"generated":{"line":6861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6860,"column":0},"generated":{"line":6862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6861,"column":0},"generated":{"line":6863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6862,"column":0},"generated":{"line":6864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6863,"column":0},"generated":{"line":6865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6864,"column":0},"generated":{"line":6866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6865,"column":0},"generated":{"line":6867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6866,"column":0},"generated":{"line":6868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6867,"column":0},"generated":{"line":6869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6868,"column":0},"generated":{"line":6870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6869,"column":0},"generated":{"line":6871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6870,"column":0},"generated":{"line":6872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6871,"column":0},"generated":{"line":6873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6872,"column":0},"generated":{"line":6874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6873,"column":0},"generated":{"line":6875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6874,"column":0},"generated":{"line":6876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6875,"column":0},"generated":{"line":6877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6876,"column":0},"generated":{"line":6878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6877,"column":0},"generated":{"line":6879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6878,"column":0},"generated":{"line":6880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6879,"column":0},"generated":{"line":6881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6880,"column":0},"generated":{"line":6882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6881,"column":0},"generated":{"line":6883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6882,"column":0},"generated":{"line":6884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6883,"column":0},"generated":{"line":6885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6884,"column":0},"generated":{"line":6886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6885,"column":0},"generated":{"line":6887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6886,"column":0},"generated":{"line":6888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6887,"column":0},"generated":{"line":6889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6888,"column":0},"generated":{"line":6890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6889,"column":0},"generated":{"line":6891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6890,"column":0},"generated":{"line":6892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6891,"column":0},"generated":{"line":6893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6892,"column":0},"generated":{"line":6894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6893,"column":0},"generated":{"line":6895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6894,"column":0},"generated":{"line":6896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6895,"column":0},"generated":{"line":6897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6896,"column":0},"generated":{"line":6898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6897,"column":0},"generated":{"line":6899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6898,"column":0},"generated":{"line":6900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6899,"column":0},"generated":{"line":6901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6900,"column":0},"generated":{"line":6902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6901,"column":0},"generated":{"line":6903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6902,"column":0},"generated":{"line":6904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6903,"column":0},"generated":{"line":6905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6904,"column":0},"generated":{"line":6906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6905,"column":0},"generated":{"line":6907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6906,"column":0},"generated":{"line":6908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6907,"column":0},"generated":{"line":6909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6908,"column":0},"generated":{"line":6910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6909,"column":0},"generated":{"line":6911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6910,"column":0},"generated":{"line":6912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6911,"column":0},"generated":{"line":6913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6912,"column":0},"generated":{"line":6914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6913,"column":0},"generated":{"line":6915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6914,"column":0},"generated":{"line":6916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6915,"column":0},"generated":{"line":6917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6916,"column":0},"generated":{"line":6918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6917,"column":0},"generated":{"line":6919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6918,"column":0},"generated":{"line":6920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6919,"column":0},"generated":{"line":6921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6920,"column":0},"generated":{"line":6922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6921,"column":0},"generated":{"line":6923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6922,"column":0},"generated":{"line":6924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6923,"column":0},"generated":{"line":6925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6924,"column":0},"generated":{"line":6926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6925,"column":0},"generated":{"line":6927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6926,"column":0},"generated":{"line":6928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6927,"column":0},"generated":{"line":6929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6928,"column":0},"generated":{"line":6930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6929,"column":0},"generated":{"line":6931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6930,"column":0},"generated":{"line":6932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6931,"column":0},"generated":{"line":6933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6932,"column":0},"generated":{"line":6934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6933,"column":0},"generated":{"line":6935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6934,"column":0},"generated":{"line":6936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6935,"column":0},"generated":{"line":6937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6936,"column":0},"generated":{"line":6938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6937,"column":0},"generated":{"line":6939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6938,"column":0},"generated":{"line":6940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6939,"column":0},"generated":{"line":6941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6940,"column":0},"generated":{"line":6942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6941,"column":0},"generated":{"line":6943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6942,"column":0},"generated":{"line":6944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6943,"column":0},"generated":{"line":6945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6944,"column":0},"generated":{"line":6946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6945,"column":0},"generated":{"line":6947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6946,"column":0},"generated":{"line":6948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6947,"column":0},"generated":{"line":6949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6948,"column":0},"generated":{"line":6950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6949,"column":0},"generated":{"line":6951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6950,"column":0},"generated":{"line":6952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6951,"column":0},"generated":{"line":6953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6952,"column":0},"generated":{"line":6954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6953,"column":0},"generated":{"line":6955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6954,"column":0},"generated":{"line":6956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6955,"column":0},"generated":{"line":6957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6956,"column":0},"generated":{"line":6958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6957,"column":0},"generated":{"line":6959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6958,"column":0},"generated":{"line":6960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6959,"column":0},"generated":{"line":6961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6960,"column":0},"generated":{"line":6962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6961,"column":0},"generated":{"line":6963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6962,"column":0},"generated":{"line":6964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6963,"column":0},"generated":{"line":6965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6964,"column":0},"generated":{"line":6966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6965,"column":0},"generated":{"line":6967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6966,"column":0},"generated":{"line":6968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6967,"column":0},"generated":{"line":6969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6968,"column":0},"generated":{"line":6970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6969,"column":0},"generated":{"line":6971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6970,"column":0},"generated":{"line":6972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6971,"column":0},"generated":{"line":6973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6972,"column":0},"generated":{"line":6974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6973,"column":0},"generated":{"line":6975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6974,"column":0},"generated":{"line":6976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6975,"column":0},"generated":{"line":6977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6976,"column":0},"generated":{"line":6978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6977,"column":0},"generated":{"line":6979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6978,"column":0},"generated":{"line":6980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6979,"column":0},"generated":{"line":6981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6980,"column":0},"generated":{"line":6982,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6981,"column":0},"generated":{"line":6983,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6982,"column":0},"generated":{"line":6984,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6983,"column":0},"generated":{"line":6985,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6984,"column":0},"generated":{"line":6986,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6985,"column":0},"generated":{"line":6987,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6986,"column":0},"generated":{"line":6988,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6987,"column":0},"generated":{"line":6989,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6988,"column":0},"generated":{"line":6990,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6989,"column":0},"generated":{"line":6991,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6990,"column":0},"generated":{"line":6992,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6991,"column":0},"generated":{"line":6993,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6992,"column":0},"generated":{"line":6994,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6993,"column":0},"generated":{"line":6995,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6994,"column":0},"generated":{"line":6996,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6995,"column":0},"generated":{"line":6997,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6996,"column":0},"generated":{"line":6998,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6997,"column":0},"generated":{"line":6999,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6998,"column":0},"generated":{"line":7000,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":6999,"column":0},"generated":{"line":7001,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7000,"column":0},"generated":{"line":7002,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7001,"column":0},"generated":{"line":7003,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7002,"column":0},"generated":{"line":7004,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7003,"column":0},"generated":{"line":7005,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7004,"column":0},"generated":{"line":7006,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7005,"column":0},"generated":{"line":7007,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7006,"column":0},"generated":{"line":7008,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7007,"column":0},"generated":{"line":7009,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7008,"column":0},"generated":{"line":7010,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7009,"column":0},"generated":{"line":7011,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7010,"column":0},"generated":{"line":7012,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7011,"column":0},"generated":{"line":7013,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7012,"column":0},"generated":{"line":7014,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7013,"column":0},"generated":{"line":7015,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7014,"column":0},"generated":{"line":7016,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7015,"column":0},"generated":{"line":7017,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7016,"column":0},"generated":{"line":7018,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7017,"column":0},"generated":{"line":7019,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7018,"column":0},"generated":{"line":7020,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7019,"column":0},"generated":{"line":7021,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7020,"column":0},"generated":{"line":7022,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7021,"column":0},"generated":{"line":7023,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7022,"column":0},"generated":{"line":7024,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7023,"column":0},"generated":{"line":7025,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7024,"column":0},"generated":{"line":7026,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7025,"column":0},"generated":{"line":7027,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7026,"column":0},"generated":{"line":7028,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7027,"column":0},"generated":{"line":7029,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7028,"column":0},"generated":{"line":7030,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7029,"column":0},"generated":{"line":7031,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7030,"column":0},"generated":{"line":7032,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7031,"column":0},"generated":{"line":7033,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7032,"column":0},"generated":{"line":7034,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7033,"column":0},"generated":{"line":7035,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7034,"column":0},"generated":{"line":7036,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7035,"column":0},"generated":{"line":7037,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7036,"column":0},"generated":{"line":7038,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7037,"column":0},"generated":{"line":7039,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7038,"column":0},"generated":{"line":7040,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7039,"column":0},"generated":{"line":7041,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7040,"column":0},"generated":{"line":7042,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7041,"column":0},"generated":{"line":7043,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7042,"column":0},"generated":{"line":7044,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7043,"column":0},"generated":{"line":7045,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7044,"column":0},"generated":{"line":7046,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7045,"column":0},"generated":{"line":7047,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7046,"column":0},"generated":{"line":7048,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7047,"column":0},"generated":{"line":7049,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7048,"column":0},"generated":{"line":7050,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7049,"column":0},"generated":{"line":7051,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7050,"column":0},"generated":{"line":7052,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7051,"column":0},"generated":{"line":7053,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7052,"column":0},"generated":{"line":7054,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7053,"column":0},"generated":{"line":7055,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7054,"column":0},"generated":{"line":7056,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7055,"column":0},"generated":{"line":7057,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7056,"column":0},"generated":{"line":7058,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7057,"column":0},"generated":{"line":7059,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7058,"column":0},"generated":{"line":7060,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7059,"column":0},"generated":{"line":7061,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7060,"column":0},"generated":{"line":7062,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7061,"column":0},"generated":{"line":7063,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7062,"column":0},"generated":{"line":7064,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7063,"column":0},"generated":{"line":7065,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7064,"column":0},"generated":{"line":7066,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7065,"column":0},"generated":{"line":7067,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7066,"column":0},"generated":{"line":7068,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7067,"column":0},"generated":{"line":7069,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7068,"column":0},"generated":{"line":7070,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7069,"column":0},"generated":{"line":7071,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7070,"column":0},"generated":{"line":7072,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7071,"column":0},"generated":{"line":7073,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7072,"column":0},"generated":{"line":7074,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7073,"column":0},"generated":{"line":7075,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7074,"column":0},"generated":{"line":7076,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7075,"column":0},"generated":{"line":7077,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7076,"column":0},"generated":{"line":7078,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7077,"column":0},"generated":{"line":7079,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7078,"column":0},"generated":{"line":7080,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7079,"column":0},"generated":{"line":7081,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7080,"column":0},"generated":{"line":7082,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7081,"column":0},"generated":{"line":7083,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7082,"column":0},"generated":{"line":7084,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7083,"column":0},"generated":{"line":7085,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7084,"column":0},"generated":{"line":7086,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7085,"column":0},"generated":{"line":7087,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7086,"column":0},"generated":{"line":7088,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7087,"column":0},"generated":{"line":7089,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7088,"column":0},"generated":{"line":7090,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7089,"column":0},"generated":{"line":7091,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7090,"column":0},"generated":{"line":7092,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7091,"column":0},"generated":{"line":7093,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7092,"column":0},"generated":{"line":7094,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7093,"column":0},"generated":{"line":7095,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7094,"column":0},"generated":{"line":7096,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7095,"column":0},"generated":{"line":7097,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7096,"column":0},"generated":{"line":7098,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7097,"column":0},"generated":{"line":7099,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7098,"column":0},"generated":{"line":7100,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7099,"column":0},"generated":{"line":7101,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7100,"column":0},"generated":{"line":7102,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7101,"column":0},"generated":{"line":7103,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7102,"column":0},"generated":{"line":7104,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7103,"column":0},"generated":{"line":7105,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7104,"column":0},"generated":{"line":7106,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7105,"column":0},"generated":{"line":7107,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7106,"column":0},"generated":{"line":7108,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7107,"column":0},"generated":{"line":7109,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7108,"column":0},"generated":{"line":7110,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7109,"column":0},"generated":{"line":7111,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7110,"column":0},"generated":{"line":7112,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7111,"column":0},"generated":{"line":7113,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7112,"column":0},"generated":{"line":7114,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7113,"column":0},"generated":{"line":7115,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7114,"column":0},"generated":{"line":7116,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7115,"column":0},"generated":{"line":7117,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7116,"column":0},"generated":{"line":7118,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7117,"column":0},"generated":{"line":7119,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7118,"column":0},"generated":{"line":7120,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7119,"column":0},"generated":{"line":7121,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7120,"column":0},"generated":{"line":7122,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7121,"column":0},"generated":{"line":7123,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7122,"column":0},"generated":{"line":7124,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7123,"column":0},"generated":{"line":7125,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7124,"column":0},"generated":{"line":7126,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7125,"column":0},"generated":{"line":7127,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7126,"column":0},"generated":{"line":7128,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7127,"column":0},"generated":{"line":7129,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7128,"column":0},"generated":{"line":7130,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7129,"column":0},"generated":{"line":7131,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7130,"column":0},"generated":{"line":7132,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7131,"column":0},"generated":{"line":7133,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7132,"column":0},"generated":{"line":7134,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7133,"column":0},"generated":{"line":7135,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7134,"column":0},"generated":{"line":7136,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7135,"column":0},"generated":{"line":7137,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7136,"column":0},"generated":{"line":7138,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7137,"column":0},"generated":{"line":7139,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7138,"column":0},"generated":{"line":7140,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7139,"column":0},"generated":{"line":7141,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7140,"column":0},"generated":{"line":7142,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7141,"column":0},"generated":{"line":7143,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7142,"column":0},"generated":{"line":7144,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7143,"column":0},"generated":{"line":7145,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7144,"column":0},"generated":{"line":7146,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7145,"column":0},"generated":{"line":7147,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7146,"column":0},"generated":{"line":7148,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7147,"column":0},"generated":{"line":7149,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7148,"column":0},"generated":{"line":7150,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7149,"column":0},"generated":{"line":7151,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7150,"column":0},"generated":{"line":7152,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7151,"column":0},"generated":{"line":7153,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7152,"column":0},"generated":{"line":7154,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7153,"column":0},"generated":{"line":7155,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7154,"column":0},"generated":{"line":7156,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7155,"column":0},"generated":{"line":7157,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7156,"column":0},"generated":{"line":7158,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7157,"column":0},"generated":{"line":7159,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7158,"column":0},"generated":{"line":7160,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7159,"column":0},"generated":{"line":7161,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7160,"column":0},"generated":{"line":7162,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7161,"column":0},"generated":{"line":7163,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7162,"column":0},"generated":{"line":7164,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7163,"column":0},"generated":{"line":7165,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7164,"column":0},"generated":{"line":7166,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7165,"column":0},"generated":{"line":7167,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7166,"column":0},"generated":{"line":7168,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7167,"column":0},"generated":{"line":7169,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7168,"column":0},"generated":{"line":7170,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7169,"column":0},"generated":{"line":7171,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7170,"column":0},"generated":{"line":7172,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7171,"column":0},"generated":{"line":7173,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7172,"column":0},"generated":{"line":7174,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7173,"column":0},"generated":{"line":7175,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7174,"column":0},"generated":{"line":7176,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7175,"column":0},"generated":{"line":7177,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7176,"column":0},"generated":{"line":7178,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7177,"column":0},"generated":{"line":7179,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7178,"column":0},"generated":{"line":7180,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7179,"column":0},"generated":{"line":7181,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7180,"column":0},"generated":{"line":7182,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7181,"column":0},"generated":{"line":7183,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7182,"column":0},"generated":{"line":7184,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7183,"column":0},"generated":{"line":7185,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7184,"column":0},"generated":{"line":7186,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7185,"column":0},"generated":{"line":7187,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7186,"column":0},"generated":{"line":7188,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7187,"column":0},"generated":{"line":7189,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7188,"column":0},"generated":{"line":7190,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7189,"column":0},"generated":{"line":7191,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7190,"column":0},"generated":{"line":7192,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7191,"column":0},"generated":{"line":7193,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7192,"column":0},"generated":{"line":7194,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7193,"column":0},"generated":{"line":7195,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7194,"column":0},"generated":{"line":7196,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7195,"column":0},"generated":{"line":7197,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7196,"column":0},"generated":{"line":7198,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7197,"column":0},"generated":{"line":7199,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7198,"column":0},"generated":{"line":7200,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7199,"column":0},"generated":{"line":7201,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7200,"column":0},"generated":{"line":7202,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7201,"column":0},"generated":{"line":7203,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7202,"column":0},"generated":{"line":7204,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7203,"column":0},"generated":{"line":7205,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7204,"column":0},"generated":{"line":7206,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7205,"column":0},"generated":{"line":7207,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7206,"column":0},"generated":{"line":7208,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7207,"column":0},"generated":{"line":7209,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7208,"column":0},"generated":{"line":7210,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7209,"column":0},"generated":{"line":7211,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7210,"column":0},"generated":{"line":7212,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7211,"column":0},"generated":{"line":7213,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7212,"column":0},"generated":{"line":7214,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7213,"column":0},"generated":{"line":7215,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7214,"column":0},"generated":{"line":7216,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7215,"column":0},"generated":{"line":7217,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7216,"column":0},"generated":{"line":7218,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7217,"column":0},"generated":{"line":7219,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7218,"column":0},"generated":{"line":7220,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7219,"column":0},"generated":{"line":7221,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7220,"column":0},"generated":{"line":7222,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7221,"column":0},"generated":{"line":7223,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7222,"column":0},"generated":{"line":7224,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7223,"column":0},"generated":{"line":7225,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7224,"column":0},"generated":{"line":7226,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7225,"column":0},"generated":{"line":7227,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7226,"column":0},"generated":{"line":7228,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7227,"column":0},"generated":{"line":7229,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7228,"column":0},"generated":{"line":7230,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7229,"column":0},"generated":{"line":7231,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7230,"column":0},"generated":{"line":7232,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7231,"column":0},"generated":{"line":7233,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7232,"column":0},"generated":{"line":7234,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7233,"column":0},"generated":{"line":7235,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7234,"column":0},"generated":{"line":7236,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7235,"column":0},"generated":{"line":7237,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7236,"column":0},"generated":{"line":7238,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7237,"column":0},"generated":{"line":7239,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7238,"column":0},"generated":{"line":7240,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7239,"column":0},"generated":{"line":7241,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7240,"column":0},"generated":{"line":7242,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7241,"column":0},"generated":{"line":7243,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7242,"column":0},"generated":{"line":7244,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7243,"column":0},"generated":{"line":7245,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7244,"column":0},"generated":{"line":7246,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7245,"column":0},"generated":{"line":7247,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7246,"column":0},"generated":{"line":7248,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7247,"column":0},"generated":{"line":7249,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7248,"column":0},"generated":{"line":7250,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7249,"column":0},"generated":{"line":7251,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7250,"column":0},"generated":{"line":7252,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7251,"column":0},"generated":{"line":7253,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7252,"column":0},"generated":{"line":7254,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7253,"column":0},"generated":{"line":7255,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7254,"column":0},"generated":{"line":7256,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7255,"column":0},"generated":{"line":7257,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7256,"column":0},"generated":{"line":7258,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7257,"column":0},"generated":{"line":7259,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7258,"column":0},"generated":{"line":7260,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7259,"column":0},"generated":{"line":7261,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7260,"column":0},"generated":{"line":7262,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7261,"column":0},"generated":{"line":7263,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7262,"column":0},"generated":{"line":7264,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7263,"column":0},"generated":{"line":7265,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7264,"column":0},"generated":{"line":7266,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7265,"column":0},"generated":{"line":7267,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7266,"column":0},"generated":{"line":7268,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7267,"column":0},"generated":{"line":7269,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7268,"column":0},"generated":{"line":7270,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7269,"column":0},"generated":{"line":7271,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7270,"column":0},"generated":{"line":7272,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7271,"column":0},"generated":{"line":7273,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7272,"column":0},"generated":{"line":7274,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7273,"column":0},"generated":{"line":7275,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7274,"column":0},"generated":{"line":7276,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7275,"column":0},"generated":{"line":7277,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7276,"column":0},"generated":{"line":7278,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7277,"column":0},"generated":{"line":7279,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7278,"column":0},"generated":{"line":7280,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7279,"column":0},"generated":{"line":7281,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7280,"column":0},"generated":{"line":7282,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7281,"column":0},"generated":{"line":7283,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7282,"column":0},"generated":{"line":7284,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7283,"column":0},"generated":{"line":7285,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7284,"column":0},"generated":{"line":7286,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7285,"column":0},"generated":{"line":7287,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7286,"column":0},"generated":{"line":7288,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7287,"column":0},"generated":{"line":7289,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7288,"column":0},"generated":{"line":7290,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7289,"column":0},"generated":{"line":7291,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7290,"column":0},"generated":{"line":7292,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7291,"column":0},"generated":{"line":7293,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7292,"column":0},"generated":{"line":7294,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7293,"column":0},"generated":{"line":7295,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7294,"column":0},"generated":{"line":7296,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7295,"column":0},"generated":{"line":7297,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7296,"column":0},"generated":{"line":7298,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7297,"column":0},"generated":{"line":7299,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7298,"column":0},"generated":{"line":7300,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7299,"column":0},"generated":{"line":7301,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7300,"column":0},"generated":{"line":7302,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7301,"column":0},"generated":{"line":7303,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7302,"column":0},"generated":{"line":7304,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7303,"column":0},"generated":{"line":7305,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7304,"column":0},"generated":{"line":7306,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7305,"column":0},"generated":{"line":7307,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7306,"column":0},"generated":{"line":7308,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7307,"column":0},"generated":{"line":7309,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7308,"column":0},"generated":{"line":7310,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7309,"column":0},"generated":{"line":7311,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7310,"column":0},"generated":{"line":7312,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7311,"column":0},"generated":{"line":7313,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7312,"column":0},"generated":{"line":7314,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7313,"column":0},"generated":{"line":7315,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7314,"column":0},"generated":{"line":7316,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7315,"column":0},"generated":{"line":7317,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7316,"column":0},"generated":{"line":7318,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7317,"column":0},"generated":{"line":7319,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7318,"column":0},"generated":{"line":7320,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7319,"column":0},"generated":{"line":7321,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7320,"column":0},"generated":{"line":7322,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7321,"column":0},"generated":{"line":7323,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7322,"column":0},"generated":{"line":7324,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7323,"column":0},"generated":{"line":7325,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7324,"column":0},"generated":{"line":7326,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7325,"column":0},"generated":{"line":7327,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7326,"column":0},"generated":{"line":7328,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7327,"column":0},"generated":{"line":7329,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7328,"column":0},"generated":{"line":7330,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7329,"column":0},"generated":{"line":7331,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7330,"column":0},"generated":{"line":7332,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7331,"column":0},"generated":{"line":7333,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7332,"column":0},"generated":{"line":7334,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7333,"column":0},"generated":{"line":7335,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7334,"column":0},"generated":{"line":7336,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7335,"column":0},"generated":{"line":7337,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7336,"column":0},"generated":{"line":7338,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7337,"column":0},"generated":{"line":7339,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7338,"column":0},"generated":{"line":7340,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7339,"column":0},"generated":{"line":7341,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7340,"column":0},"generated":{"line":7342,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7341,"column":0},"generated":{"line":7343,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7342,"column":0},"generated":{"line":7344,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7343,"column":0},"generated":{"line":7345,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7344,"column":0},"generated":{"line":7346,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7345,"column":0},"generated":{"line":7347,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7346,"column":0},"generated":{"line":7348,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7347,"column":0},"generated":{"line":7349,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7348,"column":0},"generated":{"line":7350,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7349,"column":0},"generated":{"line":7351,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7350,"column":0},"generated":{"line":7352,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7351,"column":0},"generated":{"line":7353,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7352,"column":0},"generated":{"line":7354,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7353,"column":0},"generated":{"line":7355,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7354,"column":0},"generated":{"line":7356,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7355,"column":0},"generated":{"line":7357,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7356,"column":0},"generated":{"line":7358,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7357,"column":0},"generated":{"line":7359,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7358,"column":0},"generated":{"line":7360,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7359,"column":0},"generated":{"line":7361,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7360,"column":0},"generated":{"line":7362,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7361,"column":0},"generated":{"line":7363,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7362,"column":0},"generated":{"line":7364,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7363,"column":0},"generated":{"line":7365,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7364,"column":0},"generated":{"line":7366,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7365,"column":0},"generated":{"line":7367,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7366,"column":0},"generated":{"line":7368,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7367,"column":0},"generated":{"line":7369,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7368,"column":0},"generated":{"line":7370,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7369,"column":0},"generated":{"line":7371,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7370,"column":0},"generated":{"line":7372,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7371,"column":0},"generated":{"line":7373,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7372,"column":0},"generated":{"line":7374,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7373,"column":0},"generated":{"line":7375,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7374,"column":0},"generated":{"line":7376,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7375,"column":0},"generated":{"line":7377,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7376,"column":0},"generated":{"line":7378,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7377,"column":0},"generated":{"line":7379,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7378,"column":0},"generated":{"line":7380,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7379,"column":0},"generated":{"line":7381,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7380,"column":0},"generated":{"line":7382,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7381,"column":0},"generated":{"line":7383,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7382,"column":0},"generated":{"line":7384,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7383,"column":0},"generated":{"line":7385,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7384,"column":0},"generated":{"line":7386,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7385,"column":0},"generated":{"line":7387,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7386,"column":0},"generated":{"line":7388,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7387,"column":0},"generated":{"line":7389,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7388,"column":0},"generated":{"line":7390,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7389,"column":0},"generated":{"line":7391,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7390,"column":0},"generated":{"line":7392,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7391,"column":0},"generated":{"line":7393,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7392,"column":0},"generated":{"line":7394,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7393,"column":0},"generated":{"line":7395,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7394,"column":0},"generated":{"line":7396,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7395,"column":0},"generated":{"line":7397,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7396,"column":0},"generated":{"line":7398,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7397,"column":0},"generated":{"line":7399,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7398,"column":0},"generated":{"line":7400,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7399,"column":0},"generated":{"line":7401,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7400,"column":0},"generated":{"line":7402,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7401,"column":0},"generated":{"line":7403,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7402,"column":0},"generated":{"line":7404,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7403,"column":0},"generated":{"line":7405,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7404,"column":0},"generated":{"line":7406,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7405,"column":0},"generated":{"line":7407,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7406,"column":0},"generated":{"line":7408,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7407,"column":0},"generated":{"line":7409,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7408,"column":0},"generated":{"line":7410,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7409,"column":0},"generated":{"line":7411,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7410,"column":0},"generated":{"line":7412,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7411,"column":0},"generated":{"line":7413,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7412,"column":0},"generated":{"line":7414,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7413,"column":0},"generated":{"line":7415,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7414,"column":0},"generated":{"line":7416,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7415,"column":0},"generated":{"line":7417,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7416,"column":0},"generated":{"line":7418,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7417,"column":0},"generated":{"line":7419,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7418,"column":0},"generated":{"line":7420,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7419,"column":0},"generated":{"line":7421,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7420,"column":0},"generated":{"line":7422,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7421,"column":0},"generated":{"line":7423,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7422,"column":0},"generated":{"line":7424,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7423,"column":0},"generated":{"line":7425,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7424,"column":0},"generated":{"line":7426,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7425,"column":0},"generated":{"line":7427,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7426,"column":0},"generated":{"line":7428,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7427,"column":0},"generated":{"line":7429,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7428,"column":0},"generated":{"line":7430,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7429,"column":0},"generated":{"line":7431,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7430,"column":0},"generated":{"line":7432,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7431,"column":0},"generated":{"line":7433,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7432,"column":0},"generated":{"line":7434,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7433,"column":0},"generated":{"line":7435,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7434,"column":0},"generated":{"line":7436,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7435,"column":0},"generated":{"line":7437,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7436,"column":0},"generated":{"line":7438,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7437,"column":0},"generated":{"line":7439,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7438,"column":0},"generated":{"line":7440,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7439,"column":0},"generated":{"line":7441,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7440,"column":0},"generated":{"line":7442,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7441,"column":0},"generated":{"line":7443,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7442,"column":0},"generated":{"line":7444,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7443,"column":0},"generated":{"line":7445,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7444,"column":0},"generated":{"line":7446,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7445,"column":0},"generated":{"line":7447,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7446,"column":0},"generated":{"line":7448,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7447,"column":0},"generated":{"line":7449,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7448,"column":0},"generated":{"line":7450,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7449,"column":0},"generated":{"line":7451,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7450,"column":0},"generated":{"line":7452,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7451,"column":0},"generated":{"line":7453,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7452,"column":0},"generated":{"line":7454,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7453,"column":0},"generated":{"line":7455,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7454,"column":0},"generated":{"line":7456,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7455,"column":0},"generated":{"line":7457,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7456,"column":0},"generated":{"line":7458,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7457,"column":0},"generated":{"line":7459,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7458,"column":0},"generated":{"line":7460,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7459,"column":0},"generated":{"line":7461,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7460,"column":0},"generated":{"line":7462,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7461,"column":0},"generated":{"line":7463,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7462,"column":0},"generated":{"line":7464,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7463,"column":0},"generated":{"line":7465,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7464,"column":0},"generated":{"line":7466,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7465,"column":0},"generated":{"line":7467,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7466,"column":0},"generated":{"line":7468,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7467,"column":0},"generated":{"line":7469,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7468,"column":0},"generated":{"line":7470,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7469,"column":0},"generated":{"line":7471,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7470,"column":0},"generated":{"line":7472,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7471,"column":0},"generated":{"line":7473,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7472,"column":0},"generated":{"line":7474,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7473,"column":0},"generated":{"line":7475,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7474,"column":0},"generated":{"line":7476,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7475,"column":0},"generated":{"line":7477,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7476,"column":0},"generated":{"line":7478,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7477,"column":0},"generated":{"line":7479,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7478,"column":0},"generated":{"line":7480,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7479,"column":0},"generated":{"line":7481,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7480,"column":0},"generated":{"line":7482,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7481,"column":0},"generated":{"line":7483,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7482,"column":0},"generated":{"line":7484,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7483,"column":0},"generated":{"line":7485,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7484,"column":0},"generated":{"line":7486,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7485,"column":0},"generated":{"line":7487,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7486,"column":0},"generated":{"line":7488,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7487,"column":0},"generated":{"line":7489,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7488,"column":0},"generated":{"line":7490,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7489,"column":0},"generated":{"line":7491,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7490,"column":0},"generated":{"line":7492,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7491,"column":0},"generated":{"line":7493,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7492,"column":0},"generated":{"line":7494,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7493,"column":0},"generated":{"line":7495,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7494,"column":0},"generated":{"line":7496,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7495,"column":0},"generated":{"line":7497,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7496,"column":0},"generated":{"line":7498,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7497,"column":0},"generated":{"line":7499,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7498,"column":0},"generated":{"line":7500,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7499,"column":0},"generated":{"line":7501,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7500,"column":0},"generated":{"line":7502,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7501,"column":0},"generated":{"line":7503,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7502,"column":0},"generated":{"line":7504,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7503,"column":0},"generated":{"line":7505,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7504,"column":0},"generated":{"line":7506,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7505,"column":0},"generated":{"line":7507,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7506,"column":0},"generated":{"line":7508,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7507,"column":0},"generated":{"line":7509,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7508,"column":0},"generated":{"line":7510,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7509,"column":0},"generated":{"line":7511,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7510,"column":0},"generated":{"line":7512,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7511,"column":0},"generated":{"line":7513,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7512,"column":0},"generated":{"line":7514,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7513,"column":0},"generated":{"line":7515,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7514,"column":0},"generated":{"line":7516,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7515,"column":0},"generated":{"line":7517,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7516,"column":0},"generated":{"line":7518,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7517,"column":0},"generated":{"line":7519,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7518,"column":0},"generated":{"line":7520,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7519,"column":0},"generated":{"line":7521,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7520,"column":0},"generated":{"line":7522,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7521,"column":0},"generated":{"line":7523,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7522,"column":0},"generated":{"line":7524,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7523,"column":0},"generated":{"line":7525,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7524,"column":0},"generated":{"line":7526,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7525,"column":0},"generated":{"line":7527,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7526,"column":0},"generated":{"line":7528,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7527,"column":0},"generated":{"line":7529,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7528,"column":0},"generated":{"line":7530,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7529,"column":0},"generated":{"line":7531,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7530,"column":0},"generated":{"line":7532,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7531,"column":0},"generated":{"line":7533,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7532,"column":0},"generated":{"line":7534,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7533,"column":0},"generated":{"line":7535,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7534,"column":0},"generated":{"line":7536,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7535,"column":0},"generated":{"line":7537,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7536,"column":0},"generated":{"line":7538,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7537,"column":0},"generated":{"line":7539,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7538,"column":0},"generated":{"line":7540,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7539,"column":0},"generated":{"line":7541,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7540,"column":0},"generated":{"line":7542,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7541,"column":0},"generated":{"line":7543,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7542,"column":0},"generated":{"line":7544,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7543,"column":0},"generated":{"line":7545,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7544,"column":0},"generated":{"line":7546,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7545,"column":0},"generated":{"line":7547,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7546,"column":0},"generated":{"line":7548,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7547,"column":0},"generated":{"line":7549,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7548,"column":0},"generated":{"line":7550,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7549,"column":0},"generated":{"line":7551,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7550,"column":0},"generated":{"line":7552,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7551,"column":0},"generated":{"line":7553,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7552,"column":0},"generated":{"line":7554,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7553,"column":0},"generated":{"line":7555,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7554,"column":0},"generated":{"line":7556,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7555,"column":0},"generated":{"line":7557,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7556,"column":0},"generated":{"line":7558,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7557,"column":0},"generated":{"line":7559,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7558,"column":0},"generated":{"line":7560,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7559,"column":0},"generated":{"line":7561,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7560,"column":0},"generated":{"line":7562,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7561,"column":0},"generated":{"line":7563,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7562,"column":0},"generated":{"line":7564,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7563,"column":0},"generated":{"line":7565,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7564,"column":0},"generated":{"line":7566,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7565,"column":0},"generated":{"line":7567,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7566,"column":0},"generated":{"line":7568,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7567,"column":0},"generated":{"line":7569,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7568,"column":0},"generated":{"line":7570,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7569,"column":0},"generated":{"line":7571,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7570,"column":0},"generated":{"line":7572,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7571,"column":0},"generated":{"line":7573,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7572,"column":0},"generated":{"line":7574,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7573,"column":0},"generated":{"line":7575,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7574,"column":0},"generated":{"line":7576,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7575,"column":0},"generated":{"line":7577,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7576,"column":0},"generated":{"line":7578,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7577,"column":0},"generated":{"line":7579,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7578,"column":0},"generated":{"line":7580,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7579,"column":0},"generated":{"line":7581,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7580,"column":0},"generated":{"line":7582,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7581,"column":0},"generated":{"line":7583,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7582,"column":0},"generated":{"line":7584,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7583,"column":0},"generated":{"line":7585,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7584,"column":0},"generated":{"line":7586,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7585,"column":0},"generated":{"line":7587,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7586,"column":0},"generated":{"line":7588,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7587,"column":0},"generated":{"line":7589,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7588,"column":0},"generated":{"line":7590,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7589,"column":0},"generated":{"line":7591,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7590,"column":0},"generated":{"line":7592,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7591,"column":0},"generated":{"line":7593,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7592,"column":0},"generated":{"line":7594,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7593,"column":0},"generated":{"line":7595,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7594,"column":0},"generated":{"line":7596,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7595,"column":0},"generated":{"line":7597,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7596,"column":0},"generated":{"line":7598,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7597,"column":0},"generated":{"line":7599,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7598,"column":0},"generated":{"line":7600,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7599,"column":0},"generated":{"line":7601,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7600,"column":0},"generated":{"line":7602,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7601,"column":0},"generated":{"line":7603,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7602,"column":0},"generated":{"line":7604,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7603,"column":0},"generated":{"line":7605,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7604,"column":0},"generated":{"line":7606,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7605,"column":0},"generated":{"line":7607,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7606,"column":0},"generated":{"line":7608,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7607,"column":0},"generated":{"line":7609,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7608,"column":0},"generated":{"line":7610,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7609,"column":0},"generated":{"line":7611,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7610,"column":0},"generated":{"line":7612,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7611,"column":0},"generated":{"line":7613,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7612,"column":0},"generated":{"line":7614,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7613,"column":0},"generated":{"line":7615,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7614,"column":0},"generated":{"line":7616,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7615,"column":0},"generated":{"line":7617,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7616,"column":0},"generated":{"line":7618,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7617,"column":0},"generated":{"line":7619,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7618,"column":0},"generated":{"line":7620,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7619,"column":0},"generated":{"line":7621,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7620,"column":0},"generated":{"line":7622,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7621,"column":0},"generated":{"line":7623,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7622,"column":0},"generated":{"line":7624,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7623,"column":0},"generated":{"line":7625,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7624,"column":0},"generated":{"line":7626,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7625,"column":0},"generated":{"line":7627,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7626,"column":0},"generated":{"line":7628,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7627,"column":0},"generated":{"line":7629,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7628,"column":0},"generated":{"line":7630,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7629,"column":0},"generated":{"line":7631,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7630,"column":0},"generated":{"line":7632,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7631,"column":0},"generated":{"line":7633,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7632,"column":0},"generated":{"line":7634,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7633,"column":0},"generated":{"line":7635,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7634,"column":0},"generated":{"line":7636,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7635,"column":0},"generated":{"line":7637,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7636,"column":0},"generated":{"line":7638,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7637,"column":0},"generated":{"line":7639,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7638,"column":0},"generated":{"line":7640,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7639,"column":0},"generated":{"line":7641,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7640,"column":0},"generated":{"line":7642,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7641,"column":0},"generated":{"line":7643,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7642,"column":0},"generated":{"line":7644,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7643,"column":0},"generated":{"line":7645,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7644,"column":0},"generated":{"line":7646,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7645,"column":0},"generated":{"line":7647,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7646,"column":0},"generated":{"line":7648,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7647,"column":0},"generated":{"line":7649,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7648,"column":0},"generated":{"line":7650,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7649,"column":0},"generated":{"line":7651,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7650,"column":0},"generated":{"line":7652,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7651,"column":0},"generated":{"line":7653,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7652,"column":0},"generated":{"line":7654,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7653,"column":0},"generated":{"line":7655,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7654,"column":0},"generated":{"line":7656,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7655,"column":0},"generated":{"line":7657,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7656,"column":0},"generated":{"line":7658,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7657,"column":0},"generated":{"line":7659,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7658,"column":0},"generated":{"line":7660,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7659,"column":0},"generated":{"line":7661,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7660,"column":0},"generated":{"line":7662,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7661,"column":0},"generated":{"line":7663,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7662,"column":0},"generated":{"line":7664,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7663,"column":0},"generated":{"line":7665,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7664,"column":0},"generated":{"line":7666,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7665,"column":0},"generated":{"line":7667,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7666,"column":0},"generated":{"line":7668,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7667,"column":0},"generated":{"line":7669,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7668,"column":0},"generated":{"line":7670,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7669,"column":0},"generated":{"line":7671,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7670,"column":0},"generated":{"line":7672,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7671,"column":0},"generated":{"line":7673,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7672,"column":0},"generated":{"line":7674,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7673,"column":0},"generated":{"line":7675,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7674,"column":0},"generated":{"line":7676,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7675,"column":0},"generated":{"line":7677,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7676,"column":0},"generated":{"line":7678,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7677,"column":0},"generated":{"line":7679,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7678,"column":0},"generated":{"line":7680,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7679,"column":0},"generated":{"line":7681,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7680,"column":0},"generated":{"line":7682,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7681,"column":0},"generated":{"line":7683,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7682,"column":0},"generated":{"line":7684,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7683,"column":0},"generated":{"line":7685,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7684,"column":0},"generated":{"line":7686,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7685,"column":0},"generated":{"line":7687,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7686,"column":0},"generated":{"line":7688,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7687,"column":0},"generated":{"line":7689,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7688,"column":0},"generated":{"line":7690,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7689,"column":0},"generated":{"line":7691,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7690,"column":0},"generated":{"line":7692,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7691,"column":0},"generated":{"line":7693,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7692,"column":0},"generated":{"line":7694,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7693,"column":0},"generated":{"line":7695,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7694,"column":0},"generated":{"line":7696,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7695,"column":0},"generated":{"line":7697,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7696,"column":0},"generated":{"line":7698,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7697,"column":0},"generated":{"line":7699,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7698,"column":0},"generated":{"line":7700,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7699,"column":0},"generated":{"line":7701,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7700,"column":0},"generated":{"line":7702,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7701,"column":0},"generated":{"line":7703,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7702,"column":0},"generated":{"line":7704,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7703,"column":0},"generated":{"line":7705,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7704,"column":0},"generated":{"line":7706,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7705,"column":0},"generated":{"line":7707,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7706,"column":0},"generated":{"line":7708,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7707,"column":0},"generated":{"line":7709,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7708,"column":0},"generated":{"line":7710,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7709,"column":0},"generated":{"line":7711,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7710,"column":0},"generated":{"line":7712,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7711,"column":0},"generated":{"line":7713,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7712,"column":0},"generated":{"line":7714,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7713,"column":0},"generated":{"line":7715,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7714,"column":0},"generated":{"line":7716,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7715,"column":0},"generated":{"line":7717,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7716,"column":0},"generated":{"line":7718,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7717,"column":0},"generated":{"line":7719,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7718,"column":0},"generated":{"line":7720,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7719,"column":0},"generated":{"line":7721,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7720,"column":0},"generated":{"line":7722,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7721,"column":0},"generated":{"line":7723,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7722,"column":0},"generated":{"line":7724,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7723,"column":0},"generated":{"line":7725,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7724,"column":0},"generated":{"line":7726,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7725,"column":0},"generated":{"line":7727,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7726,"column":0},"generated":{"line":7728,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7727,"column":0},"generated":{"line":7729,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7728,"column":0},"generated":{"line":7730,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7729,"column":0},"generated":{"line":7731,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7730,"column":0},"generated":{"line":7732,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7731,"column":0},"generated":{"line":7733,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7732,"column":0},"generated":{"line":7734,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7733,"column":0},"generated":{"line":7735,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7734,"column":0},"generated":{"line":7736,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7735,"column":0},"generated":{"line":7737,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7736,"column":0},"generated":{"line":7738,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7737,"column":0},"generated":{"line":7739,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7738,"column":0},"generated":{"line":7740,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7739,"column":0},"generated":{"line":7741,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7740,"column":0},"generated":{"line":7742,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7741,"column":0},"generated":{"line":7743,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7742,"column":0},"generated":{"line":7744,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7743,"column":0},"generated":{"line":7745,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7744,"column":0},"generated":{"line":7746,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7745,"column":0},"generated":{"line":7747,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7746,"column":0},"generated":{"line":7748,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7747,"column":0},"generated":{"line":7749,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7748,"column":0},"generated":{"line":7750,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7749,"column":0},"generated":{"line":7751,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7750,"column":0},"generated":{"line":7752,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7751,"column":0},"generated":{"line":7753,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7752,"column":0},"generated":{"line":7754,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7753,"column":0},"generated":{"line":7755,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7754,"column":0},"generated":{"line":7756,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7755,"column":0},"generated":{"line":7757,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7756,"column":0},"generated":{"line":7758,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7757,"column":0},"generated":{"line":7759,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7758,"column":0},"generated":{"line":7760,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7759,"column":0},"generated":{"line":7761,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7760,"column":0},"generated":{"line":7762,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7761,"column":0},"generated":{"line":7763,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7762,"column":0},"generated":{"line":7764,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7763,"column":0},"generated":{"line":7765,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7764,"column":0},"generated":{"line":7766,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7765,"column":0},"generated":{"line":7767,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7766,"column":0},"generated":{"line":7768,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7767,"column":0},"generated":{"line":7769,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7768,"column":0},"generated":{"line":7770,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7769,"column":0},"generated":{"line":7771,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7770,"column":0},"generated":{"line":7772,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7771,"column":0},"generated":{"line":7773,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7772,"column":0},"generated":{"line":7774,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7773,"column":0},"generated":{"line":7775,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7774,"column":0},"generated":{"line":7776,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7775,"column":0},"generated":{"line":7777,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7776,"column":0},"generated":{"line":7778,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7777,"column":0},"generated":{"line":7779,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7778,"column":0},"generated":{"line":7780,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7779,"column":0},"generated":{"line":7781,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7780,"column":0},"generated":{"line":7782,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7781,"column":0},"generated":{"line":7783,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7782,"column":0},"generated":{"line":7784,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7783,"column":0},"generated":{"line":7785,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7784,"column":0},"generated":{"line":7786,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7785,"column":0},"generated":{"line":7787,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7786,"column":0},"generated":{"line":7788,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7787,"column":0},"generated":{"line":7789,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7788,"column":0},"generated":{"line":7790,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7789,"column":0},"generated":{"line":7791,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7790,"column":0},"generated":{"line":7792,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7791,"column":0},"generated":{"line":7793,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7792,"column":0},"generated":{"line":7794,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7793,"column":0},"generated":{"line":7795,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7794,"column":0},"generated":{"line":7796,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7795,"column":0},"generated":{"line":7797,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7796,"column":0},"generated":{"line":7798,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7797,"column":0},"generated":{"line":7799,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7798,"column":0},"generated":{"line":7800,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7799,"column":0},"generated":{"line":7801,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7800,"column":0},"generated":{"line":7802,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7801,"column":0},"generated":{"line":7803,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7802,"column":0},"generated":{"line":7804,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7803,"column":0},"generated":{"line":7805,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7804,"column":0},"generated":{"line":7806,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7805,"column":0},"generated":{"line":7807,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7806,"column":0},"generated":{"line":7808,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7807,"column":0},"generated":{"line":7809,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7808,"column":0},"generated":{"line":7810,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7809,"column":0},"generated":{"line":7811,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7810,"column":0},"generated":{"line":7812,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7811,"column":0},"generated":{"line":7813,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7812,"column":0},"generated":{"line":7814,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7813,"column":0},"generated":{"line":7815,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7814,"column":0},"generated":{"line":7816,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7815,"column":0},"generated":{"line":7817,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7816,"column":0},"generated":{"line":7818,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7817,"column":0},"generated":{"line":7819,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7818,"column":0},"generated":{"line":7820,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7819,"column":0},"generated":{"line":7821,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7820,"column":0},"generated":{"line":7822,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7821,"column":0},"generated":{"line":7823,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7822,"column":0},"generated":{"line":7824,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7823,"column":0},"generated":{"line":7825,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7824,"column":0},"generated":{"line":7826,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7825,"column":0},"generated":{"line":7827,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7826,"column":0},"generated":{"line":7828,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7827,"column":0},"generated":{"line":7829,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7828,"column":0},"generated":{"line":7830,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7829,"column":0},"generated":{"line":7831,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7830,"column":0},"generated":{"line":7832,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7831,"column":0},"generated":{"line":7833,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7832,"column":0},"generated":{"line":7834,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7833,"column":0},"generated":{"line":7835,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7834,"column":0},"generated":{"line":7836,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7835,"column":0},"generated":{"line":7837,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7836,"column":0},"generated":{"line":7838,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7837,"column":0},"generated":{"line":7839,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7838,"column":0},"generated":{"line":7840,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7839,"column":0},"generated":{"line":7841,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7840,"column":0},"generated":{"line":7842,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7841,"column":0},"generated":{"line":7843,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7842,"column":0},"generated":{"line":7844,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7843,"column":0},"generated":{"line":7845,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7844,"column":0},"generated":{"line":7846,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7845,"column":0},"generated":{"line":7847,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7846,"column":0},"generated":{"line":7848,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7847,"column":0},"generated":{"line":7849,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7848,"column":0},"generated":{"line":7850,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7849,"column":0},"generated":{"line":7851,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7850,"column":0},"generated":{"line":7852,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7851,"column":0},"generated":{"line":7853,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7852,"column":0},"generated":{"line":7854,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7853,"column":0},"generated":{"line":7855,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7854,"column":0},"generated":{"line":7856,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7855,"column":0},"generated":{"line":7857,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7856,"column":0},"generated":{"line":7858,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7857,"column":0},"generated":{"line":7859,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7858,"column":0},"generated":{"line":7860,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7859,"column":0},"generated":{"line":7861,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7860,"column":0},"generated":{"line":7862,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7861,"column":0},"generated":{"line":7863,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7862,"column":0},"generated":{"line":7864,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7863,"column":0},"generated":{"line":7865,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7864,"column":0},"generated":{"line":7866,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7865,"column":0},"generated":{"line":7867,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7866,"column":0},"generated":{"line":7868,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7867,"column":0},"generated":{"line":7869,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7868,"column":0},"generated":{"line":7870,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7869,"column":0},"generated":{"line":7871,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7870,"column":0},"generated":{"line":7872,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7871,"column":0},"generated":{"line":7873,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7872,"column":0},"generated":{"line":7874,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7873,"column":0},"generated":{"line":7875,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7874,"column":0},"generated":{"line":7876,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7875,"column":0},"generated":{"line":7877,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7876,"column":0},"generated":{"line":7878,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7877,"column":0},"generated":{"line":7879,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7878,"column":0},"generated":{"line":7880,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7879,"column":0},"generated":{"line":7881,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7880,"column":0},"generated":{"line":7882,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7881,"column":0},"generated":{"line":7883,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7882,"column":0},"generated":{"line":7884,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7883,"column":0},"generated":{"line":7885,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7884,"column":0},"generated":{"line":7886,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7885,"column":0},"generated":{"line":7887,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7886,"column":0},"generated":{"line":7888,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7887,"column":0},"generated":{"line":7889,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7888,"column":0},"generated":{"line":7890,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7889,"column":0},"generated":{"line":7891,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7890,"column":0},"generated":{"line":7892,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7891,"column":0},"generated":{"line":7893,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7892,"column":0},"generated":{"line":7894,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7893,"column":0},"generated":{"line":7895,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7894,"column":0},"generated":{"line":7896,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7895,"column":0},"generated":{"line":7897,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7896,"column":0},"generated":{"line":7898,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7897,"column":0},"generated":{"line":7899,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7898,"column":0},"generated":{"line":7900,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7899,"column":0},"generated":{"line":7901,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7900,"column":0},"generated":{"line":7902,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7901,"column":0},"generated":{"line":7903,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7902,"column":0},"generated":{"line":7904,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7903,"column":0},"generated":{"line":7905,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7904,"column":0},"generated":{"line":7906,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7905,"column":0},"generated":{"line":7907,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7906,"column":0},"generated":{"line":7908,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7907,"column":0},"generated":{"line":7909,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7908,"column":0},"generated":{"line":7910,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7909,"column":0},"generated":{"line":7911,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7910,"column":0},"generated":{"line":7912,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7911,"column":0},"generated":{"line":7913,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7912,"column":0},"generated":{"line":7914,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7913,"column":0},"generated":{"line":7915,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7914,"column":0},"generated":{"line":7916,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7915,"column":0},"generated":{"line":7917,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7916,"column":0},"generated":{"line":7918,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7917,"column":0},"generated":{"line":7919,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7918,"column":0},"generated":{"line":7920,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7919,"column":0},"generated":{"line":7921,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7920,"column":0},"generated":{"line":7922,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7921,"column":0},"generated":{"line":7923,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7922,"column":0},"generated":{"line":7924,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7923,"column":0},"generated":{"line":7925,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7924,"column":0},"generated":{"line":7926,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7925,"column":0},"generated":{"line":7927,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7926,"column":0},"generated":{"line":7928,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7927,"column":0},"generated":{"line":7929,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7928,"column":0},"generated":{"line":7930,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7929,"column":0},"generated":{"line":7931,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7930,"column":0},"generated":{"line":7932,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7931,"column":0},"generated":{"line":7933,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7932,"column":0},"generated":{"line":7934,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7933,"column":0},"generated":{"line":7935,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7934,"column":0},"generated":{"line":7936,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7935,"column":0},"generated":{"line":7937,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7936,"column":0},"generated":{"line":7938,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7937,"column":0},"generated":{"line":7939,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7938,"column":0},"generated":{"line":7940,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7939,"column":0},"generated":{"line":7941,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7940,"column":0},"generated":{"line":7942,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7941,"column":0},"generated":{"line":7943,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7942,"column":0},"generated":{"line":7944,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7943,"column":0},"generated":{"line":7945,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7944,"column":0},"generated":{"line":7946,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7945,"column":0},"generated":{"line":7947,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7946,"column":0},"generated":{"line":7948,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7947,"column":0},"generated":{"line":7949,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7948,"column":0},"generated":{"line":7950,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7949,"column":0},"generated":{"line":7951,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7950,"column":0},"generated":{"line":7952,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7951,"column":0},"generated":{"line":7953,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7952,"column":0},"generated":{"line":7954,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7953,"column":0},"generated":{"line":7955,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7954,"column":0},"generated":{"line":7956,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7955,"column":0},"generated":{"line":7957,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7956,"column":0},"generated":{"line":7958,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7957,"column":0},"generated":{"line":7959,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7958,"column":0},"generated":{"line":7960,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7959,"column":0},"generated":{"line":7961,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7960,"column":0},"generated":{"line":7962,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7961,"column":0},"generated":{"line":7963,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7962,"column":0},"generated":{"line":7964,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7963,"column":0},"generated":{"line":7965,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7964,"column":0},"generated":{"line":7966,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7965,"column":0},"generated":{"line":7967,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7966,"column":0},"generated":{"line":7968,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7967,"column":0},"generated":{"line":7969,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7968,"column":0},"generated":{"line":7970,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7969,"column":0},"generated":{"line":7971,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7970,"column":0},"generated":{"line":7972,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7971,"column":0},"generated":{"line":7973,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7972,"column":0},"generated":{"line":7974,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7973,"column":0},"generated":{"line":7975,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7974,"column":0},"generated":{"line":7976,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7975,"column":0},"generated":{"line":7977,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7976,"column":0},"generated":{"line":7978,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7977,"column":0},"generated":{"line":7979,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7978,"column":0},"generated":{"line":7980,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7979,"column":0},"generated":{"line":7981,"column":0}},{"source":"../../node_modules/tinymce/models/dom/model.js","original":{"line":7980,"column":0},"generated":{"line":7982,"column":0}}],"sources":{"../../node_modules/tinymce/models/dom/model.js":"/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.ModelManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$2 = t => a => t === a;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isArray = isType$1('array');\n    const isNull = eq$2(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$2(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const compose = (fa, fb) => {\n      return (...args) => {\n        return fa(fb.apply(null, args));\n      };\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const identity = x => {\n      return x;\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const not = f => t => !f(t);\n    const die = msg => {\n      return () => {\n        throw new Error(msg);\n      };\n    };\n    const apply = f => {\n      return f();\n    };\n    const never = constant(false);\n    const always = constant(true);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains$2 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const range$1 = (num, f) => {\n      const r = [];\n      for (let i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    const map$1 = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$2 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const eachr = (xs, f) => {\n      for (let i = xs.length - 1; i >= 0; i--) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const partition = (xs, pred) => {\n      const pass = [];\n      const fail = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        const arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass,\n        fail\n      };\n    };\n    const filter$2 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const foldr = (xs, f, acc) => {\n      eachr(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const foldl = (xs, f, acc) => {\n      each$2(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find$1 = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const findIndex = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(i);\n        }\n      }\n      return Optional.none();\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind$2 = (xs, f) => flatten(map$1(xs, f));\n    const forall = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        const x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const mapToObject = (xs, f) => {\n      const r = {};\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    const sort$1 = (xs, comparator) => {\n      const copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    const get$d = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$d(xs, 0);\n    const last$2 = xs => get$d(xs, xs.length - 1);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each$1 = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const map = (obj, f) => {\n      return tupleMap(obj, (x, i) => ({\n        k: i,\n        v: f(x, i)\n      }));\n    };\n    const tupleMap = (obj, f) => {\n      const r = {};\n      each$1(obj, (x, i) => {\n        const tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each$1(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter$1 = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const mapToArray = (obj, f) => {\n      const r = [];\n      each$1(obj, (value, name) => {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    const values = obj => {\n      return mapToArray(obj, identity);\n    };\n    const get$c = (obj, key) => {\n      return has$1(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has$1 = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has$1(obj, key) && obj[key] !== undefined && obj[key] !== null;\n    const isEmpty = r => {\n      for (const x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const COMMENT = 8;\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isComment = element => type(element) === COMMENT || name(element) === '#comment';\n    const isElement = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = tag => e => isElement(e) && name(e) === tag;\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$2 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const setAll$1 = (element, attrs) => {\n      const dom = element.dom;\n      each$1(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const setOptions = (element, attrs) => {\n      each$1(attrs, (v, k) => {\n        v.fold(() => {\n          remove$7(element, k);\n        }, value => {\n          rawSet(element.dom, k, value);\n        });\n      });\n    };\n    const get$b = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$b(element, key));\n    const remove$7 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n    const clone$2 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const fromHtml$1 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    const fromDom$1 = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint$1 = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    const SugarElement = {\n      fromHtml: fromHtml$1,\n      fromTag,\n      fromText,\n      fromDom: fromDom$1,\n      fromPoint: fromPoint$1\n    };\n\n    const is$2 = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$1 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map$1(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq$1 = (e1, e2) => e1.dom === e2.dom;\n    const contains$1 = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    const is$1 = is$2;\n\n    const owner = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner(dos);\n    const documentElement = element => SugarElement.fromDom(documentOrOwner(element).dom.documentElement);\n    const defaultView = element => SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n      const stop = isFunction(isRoot) ? isRoot : never;\n      let dom = element.dom;\n      const ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        const rawParent = dom.parentNode;\n        const p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    const prevSibling = element => Optional.from(element.dom.previousSibling).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children$2 = element => map$1(element.dom.childNodes, SugarElement.fromDom);\n    const child$2 = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child$2(element, 0);\n\n    const before$3 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after$5 = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$1(v, element);\n        });\n      }, v => {\n        before$3(v, element);\n      });\n    };\n    const prepend = (parent, element) => {\n      const firstChild$1 = firstChild(parent);\n      firstChild$1.fold(() => {\n        append$1(parent, element);\n      }, v => {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    const append$1 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n    const appendAt = (parent, element, index) => {\n      child$2(parent, index).fold(() => {\n        append$1(parent, element);\n      }, v => {\n        before$3(v, element);\n      });\n    };\n    const wrap = (element, wrapper) => {\n      before$3(element, wrapper);\n      append$1(wrapper, element);\n    };\n\n    const after$4 = (marker, elements) => {\n      each$2(elements, (x, i) => {\n        const e = i === 0 ? marker : elements[i - 1];\n        after$5(e, x);\n      });\n    };\n    const append = (parent, elements) => {\n      each$2(elements, x => {\n        append$1(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$2(children$2(element), rogue => {\n        remove$6(rogue);\n      });\n    };\n    const remove$6 = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    const unwrap = wrapper => {\n      const children = children$2(wrapper);\n      if (children.length > 0) {\n        after$4(wrapper, children);\n      }\n      remove$6(wrapper);\n    };\n\n    const clone$1 = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const shallow = original => clone$1(original, false);\n    const deep = original => clone$1(original, true);\n    const shallowAs = (original, tag) => {\n      const nu = SugarElement.fromTag(tag);\n      const attributes = clone$2(original);\n      setAll$1(nu, attributes);\n      return nu;\n    };\n    const copy$2 = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      const cloneChildren = children$2(deep(original));\n      append(nu, cloneChildren);\n      return nu;\n    };\n    const mutate$1 = (original, tag) => {\n      const nu = shallowAs(original, tag);\n      after$5(original, nu);\n      const children = children$2(original);\n      append(nu, children);\n      remove$6(original);\n      return nu;\n    };\n\n    const validSectionList = [\n      'tfoot',\n      'thead',\n      'tbody',\n      'colgroup'\n    ];\n    const isValidSection = parentName => contains$2(validSectionList, parentName);\n    const grid = (rows, columns) => ({\n      rows,\n      columns\n    });\n    const address = (row, column) => ({\n      row,\n      column\n    });\n    const detail = (element, rowspan, colspan) => ({\n      element,\n      rowspan,\n      colspan\n    });\n    const detailnew = (element, rowspan, colspan, isNew) => ({\n      element,\n      rowspan,\n      colspan,\n      isNew\n    });\n    const extended = (element, rowspan, colspan, row, column, isLocked) => ({\n      element,\n      rowspan,\n      colspan,\n      row,\n      column,\n      isLocked\n    });\n    const rowdetail = (element, cells, section) => ({\n      element,\n      cells,\n      section\n    });\n    const rowdetailnew = (element, cells, section, isNew) => ({\n      element,\n      cells,\n      section,\n      isNew\n    });\n    const elementnew = (element, isNew, isLocked) => ({\n      element,\n      isNew,\n      isLocked\n    });\n    const rowcells = (element, cells, section, isNew) => ({\n      element,\n      cells,\n      section,\n      isNew\n    });\n    const bounds = (startRow, startCol, finishRow, finishCol) => ({\n      startRow,\n      startCol,\n      finishRow,\n      finishCol\n    });\n    const columnext = (element, colspan, column) => ({\n      element,\n      colspan,\n      column\n    });\n    const colgroup = (element, columns) => ({\n      element,\n      columns\n    });\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const isSupported$1 = constant(supported);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n    const getOriginalEventTarget = event => {\n      if (isSupported$1() && isNonNullable(event.target)) {\n        const el = SugarElement.fromDom(event.target);\n        if (isElement(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            const composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    const isOpenShadowHost = element => isNonNullable(element.dom.shadowRoot);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const body$1 = () => getBody$1(SugarElement.fromDom(document));\n    const getBody$1 = doc => {\n      const b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    const ancestors$4 = (scope, predicate, isRoot) => filter$2(parents(scope, isRoot), predicate);\n    const children$1 = (scope, predicate) => filter$2(children$2(scope), predicate);\n    const descendants$1 = (scope, predicate) => {\n      let result = [];\n      each$2(children$2(scope), x => {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants$1(x, predicate));\n      });\n      return result;\n    };\n\n    const ancestors$3 = (scope, selector, isRoot) => ancestors$4(scope, e => is$2(e, selector), isRoot);\n    const children = (scope, selector) => children$1(scope, e => is$2(e, selector));\n    const descendants = (scope, selector) => all$1(selector, scope);\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const ancestor$2 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$2 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$2, scope, predicate, isRoot);\n    };\n    const child$1 = (scope, predicate) => {\n      const pred = node => predicate(SugarElement.fromDom(node));\n      const result = find$1(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n    const descendant$1 = (scope, predicate) => {\n      const descend = node => {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          const child = SugarElement.fromDom(node.childNodes[i]);\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope.dom);\n    };\n\n    const ancestor$1 = (scope, selector, isRoot) => ancestor$2(scope, e => is$2(e, selector), isRoot);\n    const child = (scope, selector) => child$1(scope, e => is$2(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    const closest$1 = (scope, selector, isRoot) => {\n      const is = (element, selector) => is$2(element, selector);\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const bindFrom = (a, f) => a !== undefined && a !== null ? f(a) : Optional.none();\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const contains = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n    const endsWith = (str, suffix) => {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    const blank = r => s => s.replace(r, '');\n    const trim = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const toFloat = value => {\n      const num = parseFloat(value);\n      return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n\n    const isSupported = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const internalRemove = (dom, property) => {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    const set$1 = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n      const dom = element.dom;\n      each$1(css, (v, k) => {\n        internalSet(dom, k, v);\n      });\n    };\n    const get$a = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    const getRaw$2 = (element, property) => {\n      const dom = element.dom;\n      const raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(r => r.length > 0);\n    };\n    const remove$5 = (element, property) => {\n      const dom = element.dom;\n      internalRemove(dom, property);\n      if (is(getOpt(element, 'style').map(trim), '')) {\n        remove$7(element, 'style');\n      }\n    };\n    const copy$1 = (source, target) => {\n      const sourceDom = source.dom;\n      const targetDom = target.dom;\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    const getAttrValue = (cell, name, fallback = 0) => getOpt(cell, name).map(value => parseInt(value, 10)).getOr(fallback);\n    const getSpan = (cell, type) => getAttrValue(cell, type, 1);\n    const hasColspan = cellOrCol => {\n      if (isTag('col')(cellOrCol)) {\n        return getAttrValue(cellOrCol, 'span', 1) > 1;\n      } else {\n        return getSpan(cellOrCol, 'colspan') > 1;\n      }\n    };\n    const hasRowspan = cell => getSpan(cell, 'rowspan') > 1;\n    const getCssValue = (element, property) => parseInt(get$a(element, property), 10);\n    const minWidth = constant(10);\n    const minHeight = constant(10);\n\n    const firstLayer = (scope, selector) => {\n      return filterFirstLayer(scope, selector, always);\n    };\n    const filterFirstLayer = (scope, selector, predicate) => {\n      return bind$2(children$2(scope), x => {\n        if (is$2(x, selector)) {\n          return predicate(x) ? [x] : [];\n        } else {\n          return filterFirstLayer(x, selector, predicate);\n        }\n      });\n    };\n\n    const lookup = (tags, element, isRoot = never) => {\n      if (isRoot(element)) {\n        return Optional.none();\n      }\n      if (contains$2(tags, name(element))) {\n        return Optional.some(element);\n      }\n      const isRootOrUpperTable = elm => is$2(elm, 'table') || isRoot(elm);\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    const cell = (element, isRoot) => lookup([\n      'td',\n      'th'\n    ], element, isRoot);\n    const cells$1 = ancestor => firstLayer(ancestor, 'th,td');\n    const columns$1 = ancestor => {\n      if (is$2(ancestor, 'colgroup')) {\n        return children(ancestor, 'col');\n      } else {\n        return bind$2(columnGroups(ancestor), columnGroup => children(columnGroup, 'col'));\n      }\n    };\n    const table = (element, isRoot) => closest$1(element, 'table', isRoot);\n    const rows$1 = ancestor => firstLayer(ancestor, 'tr');\n    const columnGroups = ancestor => table(ancestor).fold(constant([]), table => children(table, 'colgroup'));\n\n    const fromRowsOrColGroups = (elems, getSection) => map$1(elems, row => {\n      if (name(row) === 'colgroup') {\n        const cells = map$1(columns$1(row), column => {\n          const colspan = getAttrValue(column, 'span', 1);\n          return detail(column, 1, colspan);\n        });\n        return rowdetail(row, cells, 'colgroup');\n      } else {\n        const cells = map$1(cells$1(row), cell => {\n          const rowspan = getAttrValue(cell, 'rowspan', 1);\n          const colspan = getAttrValue(cell, 'colspan', 1);\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdetail(row, cells, getSection(row));\n      }\n    });\n    const getParentSection = group => parent(group).map(parent => {\n      const parentName = name(parent);\n      return isValidSection(parentName) ? parentName : 'tbody';\n    }).getOr('tbody');\n    const fromTable$1 = table => {\n      const rows = rows$1(table);\n      const columnGroups$1 = columnGroups(table);\n      const elems = [\n        ...columnGroups$1,\n        ...rows\n      ];\n      return fromRowsOrColGroups(elems, getParentSection);\n    };\n    const fromPastedRows = (elems, section) => fromRowsOrColGroups(elems, () => section);\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n      const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      const isiPhone = os.isiOS() && !isiPad;\n      const isMobile = os.isiOS() || os.isAndroid();\n      const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      const isPhone = isiPhone || isMobile && !isTablet;\n      const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      const isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview),\n        isDesktop: constant(isDesktop)\n      };\n    };\n\n    const firstMatch = (regexes, s) => {\n      for (let i = 0; i < regexes.length; i++) {\n        const x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    const find = (regexes, agent) => {\n      const r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      const group = i => {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$2(group(1), group(2));\n    };\n    const detect$5 = (versionRegexes, agent) => {\n      const cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$2();\n      }\n      return find(versionRegexes, cleanedAgent);\n    };\n    const unknown$2 = () => {\n      return nu$2(0, 0);\n    };\n    const nu$2 = (major, minor) => {\n      return {\n        major,\n        minor\n      };\n    };\n    const Version = {\n      nu: nu$2,\n      detect: detect$5,\n      unknown: unknown$2\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n      return findMap(userAgentData.brands, uaBrand => {\n        const lcBrand = uaBrand.brand.toLowerCase();\n        return find$1(browsers, browser => {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(info => ({\n          current: info.name,\n          version: Version.nu(parseInt(uaBrand.version, 10), 0)\n        }));\n      });\n    };\n\n    const detect$4 = (candidates, userAgent) => {\n      const agent = String(userAgent).toLowerCase();\n      return find$1(candidates, candidate => {\n        return candidate.search(agent);\n      });\n    };\n    const detectBrowser = (browsers, userAgent) => {\n      return detect$4(browsers, userAgent).map(browser => {\n        const version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version\n        };\n      });\n    };\n    const detectOs = (oses, userAgent) => {\n      return detect$4(oses, userAgent).map(os => {\n        const version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version\n        };\n      });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = target => {\n      return uastring => {\n        return contains(uastring, target);\n      };\n    };\n    const browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: uastring => {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chromium',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: uastring => {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: uastring => {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: uastring => {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    const oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: uastring => {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'macOS',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    const PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$1 = () => {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$1 = info => {\n      const current = info.current;\n      const version = info.version;\n      const isBrowser = name => () => current === name;\n      return {\n        current,\n        version,\n        isEdge: isBrowser(edge),\n        isChromium: isBrowser(chromium),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    const Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chromium: constant(chromium),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    const unknown = () => {\n      return nu({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu = info => {\n      const current = info.current;\n      const version = info.version;\n      const isOS = name => () => current === name;\n      return {\n        current,\n        version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isMacOS: isOS(macos),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    const OperatingSystem = {\n      unknown,\n      nu,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      macos: constant(macos),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd),\n      chromeos: constant(chromeos)\n    };\n\n    const detect$3 = (userAgent, userAgentDataOpt, mediaMatch) => {\n      const browsers = PlatformInfo.browsers();\n      const oses = PlatformInfo.oses();\n      const browser = userAgentDataOpt.bind(userAgentData => detectBrowser$1(browsers, userAgentData)).orThunk(() => detectBrowser(browsers, userAgent)).fold(Browser.unknown, Browser.nu);\n      const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser,\n        os,\n        deviceType\n      };\n    };\n    const PlatformDetection = { detect: detect$3 };\n\n    const mediaMatch = query => window.matchMedia(query).matches;\n    let platform = cached(() => PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch));\n    const detect$2 = () => platform();\n\n    const Dimension = (name, getOffset) => {\n      const set = (element, h) => {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        const dom = element.dom;\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      const get = element => {\n        const r = getOffset(element);\n        if (r <= 0 || r === null) {\n          const css = get$a(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      const getOuter = get;\n      const aggregate = (element, properties) => foldl(properties, (acc, property) => {\n        const val = get$a(element, property);\n        const value = val === undefined ? 0 : parseInt(val, 10);\n        return isNaN(value) ? acc : acc + value;\n      }, 0);\n      const max = (element, value, properties) => {\n        const cumulativeInclusions = aggregate(element, properties);\n        const absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set,\n        get,\n        getOuter,\n        aggregate,\n        max\n      };\n    };\n\n    const toNumber = (px, fallback) => toFloat(px).getOr(fallback);\n    const getProp = (element, name, fallback) => toNumber(get$a(element, name), fallback);\n    const calcContentBoxSize = (element, size, upper, lower) => {\n      const paddingUpper = getProp(element, `padding-${ upper }`, 0);\n      const paddingLower = getProp(element, `padding-${ lower }`, 0);\n      const borderUpper = getProp(element, `border-${ upper }-width`, 0);\n      const borderLower = getProp(element, `border-${ lower }-width`, 0);\n      return size - paddingUpper - paddingLower - borderUpper - borderLower;\n    };\n    const getCalculatedWidth = (element, boxSizing) => {\n      const dom = element.dom;\n      const width = dom.getBoundingClientRect().width || dom.offsetWidth;\n      return boxSizing === 'border-box' ? width : calcContentBoxSize(element, width, 'left', 'right');\n    };\n    const getHeight$1 = element => getProp(element, 'height', element.dom.offsetHeight);\n    const getWidth = element => getProp(element, 'width', element.dom.offsetWidth);\n    const getInnerWidth = element => getCalculatedWidth(element, 'content-box');\n\n    const api$2 = Dimension('width', element => element.dom.offsetWidth);\n    const get$9 = element => api$2.get(element);\n    const getOuter$2 = element => api$2.getOuter(element);\n    const getInner = getInnerWidth;\n    const getRuntime$1 = getWidth;\n\n    const addCells = (gridRow, index, cells) => {\n      const existingCells = gridRow.cells;\n      const before = existingCells.slice(0, index);\n      const after = existingCells.slice(index);\n      const newCells = before.concat(cells).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    const addCell = (gridRow, index, cell) => addCells(gridRow, index, [cell]);\n    const mutateCell = (gridRow, index, cell) => {\n      const cells = gridRow.cells;\n      cells[index] = cell;\n    };\n    const setCells = (gridRow, cells) => rowcells(gridRow.element, cells, gridRow.section, gridRow.isNew);\n    const mapCells = (gridRow, f) => {\n      const cells = gridRow.cells;\n      const r = map$1(cells, f);\n      return rowcells(gridRow.element, r, gridRow.section, gridRow.isNew);\n    };\n    const getCell = (gridRow, index) => gridRow.cells[index];\n    const getCellElement = (gridRow, index) => getCell(gridRow, index).element;\n    const cellLength = gridRow => gridRow.cells.length;\n    const extractGridDetails = grid => {\n      const result = partition(grid, row => row.section === 'colgroup');\n      return {\n        rows: result.fail,\n        cols: result.pass\n      };\n    };\n    const clone = (gridRow, cloneRow, cloneCell) => {\n      const newCells = map$1(gridRow.cells, cloneCell);\n      return rowcells(cloneRow(gridRow.element), newCells, gridRow.section, true);\n    };\n\n    const LOCKED_COL_ATTR = 'data-snooker-locked-cols';\n    const getLockedColumnsFromTable = table => getOpt(table, LOCKED_COL_ATTR).bind(lockedColStr => Optional.from(lockedColStr.match(/\\d+/g))).map(lockedCols => mapToObject(lockedCols, always));\n    const getLockedColumnsFromGrid = grid => {\n      const locked = foldl(extractGridDetails(grid).rows, (acc, row) => {\n        each$2(row.cells, (cell, idx) => {\n          if (cell.isLocked) {\n            acc[idx] = true;\n          }\n        });\n        return acc;\n      }, {});\n      const lockedArr = mapToArray(locked, (_val, key) => parseInt(key, 10));\n      return sort$1(lockedArr);\n    };\n\n    const key = (row, column) => {\n      return row + ',' + column;\n    };\n    const getAt = (warehouse, row, column) => Optional.from(warehouse.access[key(row, column)]);\n    const findItem = (warehouse, item, comparator) => {\n      const filtered = filterItems(warehouse, detail => {\n        return comparator(item, detail.element);\n      });\n      return filtered.length > 0 ? Optional.some(filtered[0]) : Optional.none();\n    };\n    const filterItems = (warehouse, predicate) => {\n      const all = bind$2(warehouse.all, r => {\n        return r.cells;\n      });\n      return filter$2(all, predicate);\n    };\n    const generateColumns = rowData => {\n      const columnsGroup = {};\n      let index = 0;\n      each$2(rowData.cells, column => {\n        const colspan = column.colspan;\n        range$1(colspan, columnIndex => {\n          const colIndex = index + columnIndex;\n          columnsGroup[colIndex] = columnext(column.element, colspan, colIndex);\n        });\n        index += colspan;\n      });\n      return columnsGroup;\n    };\n    const generate$1 = list => {\n      const access = {};\n      const cells = [];\n      const tableOpt = head(list).map(rowData => rowData.element).bind(table);\n      const lockedColumns = tableOpt.bind(getLockedColumnsFromTable).getOr({});\n      let maxRows = 0;\n      let maxColumns = 0;\n      let rowCount = 0;\n      const {\n        pass: colgroupRows,\n        fail: rows\n      } = partition(list, rowData => rowData.section === 'colgroup');\n      each$2(rows, rowData => {\n        const currentRow = [];\n        each$2(rowData.cells, rowCell => {\n          let start = 0;\n          while (access[key(rowCount, start)] !== undefined) {\n            start++;\n          }\n          const isLocked = hasNonNullableKey(lockedColumns, start.toString());\n          const current = extended(rowCell.element, rowCell.rowspan, rowCell.colspan, rowCount, start, isLocked);\n          for (let occupiedColumnPosition = 0; occupiedColumnPosition < rowCell.colspan; occupiedColumnPosition++) {\n            for (let occupiedRowPosition = 0; occupiedRowPosition < rowCell.rowspan; occupiedRowPosition++) {\n              const rowPosition = rowCount + occupiedRowPosition;\n              const columnPosition = start + occupiedColumnPosition;\n              const newpos = key(rowPosition, columnPosition);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, columnPosition + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        maxRows++;\n        cells.push(rowdetail(rowData.element, currentRow, rowData.section));\n        rowCount++;\n      });\n      const {columns, colgroups} = last$2(colgroupRows).map(rowData => {\n        const columns = generateColumns(rowData);\n        const colgroup$1 = colgroup(rowData.element, values(columns));\n        return {\n          colgroups: [colgroup$1],\n          columns\n        };\n      }).getOrThunk(() => ({\n        colgroups: [],\n        columns: {}\n      }));\n      const grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: grid$1,\n        access,\n        all: cells,\n        columns,\n        colgroups\n      };\n    };\n    const fromTable = table => {\n      const list = fromTable$1(table);\n      return generate$1(list);\n    };\n    const justCells = warehouse => bind$2(warehouse.all, w => w.cells);\n    const justColumns = warehouse => values(warehouse.columns);\n    const hasColumns = warehouse => keys(warehouse.columns).length > 0;\n    const getColumnAt = (warehouse, columnIndex) => Optional.from(warehouse.columns[columnIndex]);\n    const Warehouse = {\n      fromTable,\n      generate: generate$1,\n      getAt,\n      findItem,\n      filterItems,\n      justCells,\n      justColumns,\n      hasColumns,\n      getColumnAt\n    };\n\n    const columns = (warehouse, isValidCell = always) => {\n      const grid = warehouse.grid;\n      const cols = range$1(grid.columns, identity);\n      const rowsArr = range$1(grid.rows, identity);\n      return map$1(cols, col => {\n        const getBlock = () => bind$2(rowsArr, r => Warehouse.getAt(warehouse, r, col).filter(detail => detail.column === col).toArray());\n        const isValid = detail => detail.colspan === 1 && isValidCell(detail.element);\n        const getFallback = () => Warehouse.getAt(warehouse, 0, col);\n        return decide(getBlock, isValid, getFallback);\n      });\n    };\n    const decide = (getBlock, isValid, getFallback) => {\n      const inBlock = getBlock();\n      const validInBlock = find$1(inBlock, isValid);\n      const detailOption = validInBlock.orThunk(() => Optional.from(inBlock[0]).orThunk(getFallback));\n      return detailOption.map(detail => detail.element);\n    };\n    const rows = warehouse => {\n      const grid = warehouse.grid;\n      const rowsArr = range$1(grid.rows, identity);\n      const cols = range$1(grid.columns, identity);\n      return map$1(rowsArr, row => {\n        const getBlock = () => bind$2(cols, c => Warehouse.getAt(warehouse, row, c).filter(detail => detail.row === row).fold(constant([]), detail => [detail]));\n        const isSingle = detail => detail.rowspan === 1;\n        const getFallback = () => Warehouse.getAt(warehouse, row, 0);\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n\n    const deduce = (xs, index) => {\n      if (index < 0 || index >= xs.length - 1) {\n        return Optional.none();\n      }\n      const current = xs[index].fold(() => {\n        const rest = reverse(xs.slice(0, index));\n        return findMap(rest, (a, i) => a.map(aa => ({\n          value: aa,\n          delta: i + 1\n        })));\n      }, c => Optional.some({\n        value: c,\n        delta: 0\n      }));\n      const next = xs[index + 1].fold(() => {\n        const rest = xs.slice(index + 1);\n        return findMap(rest, (a, i) => a.map(aa => ({\n          value: aa,\n          delta: i + 1\n        })));\n      }, n => Optional.some({\n        value: n,\n        delta: 1\n      }));\n      return current.bind(c => next.map(n => {\n        const extras = n.delta + c.delta;\n        return Math.abs(n.value - c.value) / extras;\n      }));\n    };\n\n    const onDirection = (isLtr, isRtl) => element => getDirection(element) === 'rtl' ? isRtl : isLtr;\n    const getDirection = element => get$a(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n\n    const api$1 = Dimension('height', element => {\n      const dom = element.dom;\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    const get$8 = element => api$1.get(element);\n    const getOuter$1 = element => api$1.getOuter(element);\n    const getRuntime = getHeight$1;\n\n    const r = (left, top) => {\n      const translate = (x, y) => r(left + x, top + y);\n      return {\n        left,\n        top,\n        translate\n      };\n    };\n    const SugarPosition = r;\n\n    const boxPosition = dom => {\n      const box = dom.getBoundingClientRect();\n      return SugarPosition(box.left, box.top);\n    };\n    const firstDefinedOrZero = (a, b) => {\n      if (a !== undefined) {\n        return a;\n      } else {\n        return b !== undefined ? b : 0;\n      }\n    };\n    const absolute = element => {\n      const doc = element.dom.ownerDocument;\n      const body = doc.body;\n      const win = doc.defaultView;\n      const html = doc.documentElement;\n      if (body === element.dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      const scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n      const scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n      const clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      const clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    const viewport = element => {\n      const dom = element.dom;\n      const doc = dom.ownerDocument;\n      const body = doc.body;\n      if (body === dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return SugarPosition(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    const rowInfo = (row, y) => ({\n      row,\n      y\n    });\n    const colInfo = (col, x) => ({\n      col,\n      x\n    });\n    const rtlEdge = cell => {\n      const pos = absolute(cell);\n      return pos.left + getOuter$2(cell);\n    };\n    const ltrEdge = cell => {\n      return absolute(cell).left;\n    };\n    const getLeftEdge = (index, cell) => {\n      return colInfo(index, ltrEdge(cell));\n    };\n    const getRightEdge = (index, cell) => {\n      return colInfo(index, rtlEdge(cell));\n    };\n    const getTop$1 = cell => {\n      return absolute(cell).top;\n    };\n    const getTopEdge = (index, cell) => {\n      return rowInfo(index, getTop$1(cell));\n    };\n    const getBottomEdge = (index, cell) => {\n      return rowInfo(index, getTop$1(cell) + getOuter$1(cell));\n    };\n    const findPositions = (getInnerEdge, getOuterEdge, array) => {\n      if (array.length === 0) {\n        return [];\n      }\n      const lines = map$1(array.slice(1), (cellOption, index) => {\n        return cellOption.map(cell => {\n          return getInnerEdge(index, cell);\n        });\n      });\n      const lastLine = array[array.length - 1].map(cell => {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    const negate = step => {\n      return -step;\n    };\n    const height = {\n      delta: identity,\n      positions: optElements => findPositions(getTopEdge, getBottomEdge, optElements),\n      edge: getTop$1\n    };\n    const ltr$1 = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: optElements => findPositions(getLeftEdge, getRightEdge, optElements)\n    };\n    const rtl$1 = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: optElements => findPositions(getRightEdge, getLeftEdge, optElements)\n    };\n    const detect$1 = onDirection(ltr$1, rtl$1);\n    const width = {\n      delta: (amount, table) => detect$1(table).delta(amount, table),\n      positions: (cols, table) => detect$1(table).positions(cols, table),\n      edge: cell => detect$1(cell).edge(cell)\n    };\n\n    const units = {\n      unsupportedLength: [\n        'em',\n        'ex',\n        'cap',\n        'ch',\n        'ic',\n        'rem',\n        'lh',\n        'rlh',\n        'vw',\n        'vh',\n        'vi',\n        'vb',\n        'vmin',\n        'vmax',\n        'cm',\n        'mm',\n        'Q',\n        'in',\n        'pc',\n        'pt',\n        'px'\n      ],\n      fixed: [\n        'px',\n        'pt'\n      ],\n      relative: ['%'],\n      empty: ['']\n    };\n    const pattern = (() => {\n      const decimalDigits = '[0-9]+';\n      const signedInteger = '[+-]?' + decimalDigits;\n      const exponentPart = '[eE]' + signedInteger;\n      const dot = '\\\\.';\n      const opt = input => `(?:${ input })?`;\n      const unsignedDecimalLiteral = [\n        'Infinity',\n        decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n        dot + decimalDigits + opt(exponentPart),\n        decimalDigits + opt(exponentPart)\n      ].join('|');\n      const float = `[+-]?(?:${ unsignedDecimalLiteral })`;\n      return new RegExp(`^(${ float })(.*)$`);\n    })();\n    const isUnit = (unit, accepted) => exists(accepted, acc => exists(units[acc], check => unit === check));\n    const parse = (input, accepted) => {\n      const match = Optional.from(pattern.exec(input));\n      return match.bind(array => {\n        const value = Number(array[1]);\n        const unitRaw = array[2];\n        if (isUnit(unitRaw, accepted)) {\n          return Optional.some({\n            value,\n            unit: unitRaw\n          });\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n\n    const rPercentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    const rPixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    const isCol$2 = isTag('col');\n    const getPercentSize = (elm, outerGetter, innerGetter) => {\n      const relativeParent = parentElement(elm).getOrThunk(() => getBody$1(owner(elm)));\n      return outerGetter(elm) / innerGetter(relativeParent) * 100;\n    };\n    const setPixelWidth = (cell, amount) => {\n      set$1(cell, 'width', amount + 'px');\n    };\n    const setPercentageWidth = (cell, amount) => {\n      set$1(cell, 'width', amount + '%');\n    };\n    const setHeight = (cell, amount) => {\n      set$1(cell, 'height', amount + 'px');\n    };\n    const getHeightValue = cell => getRuntime(cell) + 'px';\n    const convert = (cell, number, getter, setter) => {\n      const newSize = table(cell).map(table => {\n        const total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    const normalizePixelSize = (value, cell, getter, setter) => {\n      const number = parseFloat(value);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    const getTotalHeight = cell => {\n      const value = getHeightValue(cell);\n      if (!value) {\n        return get$8(cell);\n      }\n      return normalizePixelSize(value, cell, get$8, setHeight);\n    };\n    const get$7 = (cell, type, f) => {\n      const v = f(cell);\n      const span = getSpan(cell, type);\n      return v / span;\n    };\n    const getRaw$1 = (element, prop) => {\n      return getRaw$2(element, prop).orThunk(() => {\n        return getOpt(element, prop).map(val => val + 'px');\n      });\n    };\n    const getRawWidth$1 = element => getRaw$1(element, 'width');\n    const getRawHeight = element => getRaw$1(element, 'height');\n    const getPercentageWidth = cell => getPercentSize(cell, get$9, getInner);\n    const getPixelWidth$1 = cell => isCol$2(cell) ? get$9(cell) : getRuntime$1(cell);\n    const getHeight = cell => {\n      return get$7(cell, 'rowspan', getTotalHeight);\n    };\n    const getGenericWidth = cell => {\n      const width = getRawWidth$1(cell);\n      return width.bind(w => parse(w, [\n        'fixed',\n        'relative',\n        'empty'\n      ]));\n    };\n    const setGenericWidth = (cell, amount, unit) => {\n      set$1(cell, 'width', amount + unit);\n    };\n    const getPixelTableWidth = table => get$9(table) + 'px';\n    const getPercentTableWidth = table => getPercentSize(table, get$9, getInner) + '%';\n    const isPercentSizing$1 = table => getRawWidth$1(table).exists(size => rPercentageBasedSizeRegex.test(size));\n    const isPixelSizing$1 = table => getRawWidth$1(table).exists(size => rPixelBasedSizeRegex.test(size));\n    const isNoneSizing$1 = table => getRawWidth$1(table).isNone();\n    const percentageBasedSizeRegex = constant(rPercentageBasedSizeRegex);\n\n    const isCol$1 = isTag('col');\n    const getRawW = cell => {\n      return getRawWidth$1(cell).getOrThunk(() => getPixelWidth$1(cell) + 'px');\n    };\n    const getRawH = cell => {\n      return getRawHeight(cell).getOrThunk(() => getHeight(cell) + 'px');\n    };\n    const justCols = warehouse => map$1(Warehouse.justColumns(warehouse), column => Optional.from(column.element));\n    const isValidColumn = cell => {\n      const browser = detect$2().browser;\n      const supportsColWidths = browser.isChromium() || browser.isFirefox();\n      return isCol$1(cell) ? supportsColWidths : true;\n    };\n    const getDimension = (cellOpt, index, backups, filter, getter, fallback) => cellOpt.filter(filter).fold(() => fallback(deduce(backups, index)), cell => getter(cell));\n    const getWidthFrom = (warehouse, table, getWidth, fallback) => {\n      const columnCells = columns(warehouse);\n      const columns$1 = Warehouse.hasColumns(warehouse) ? justCols(warehouse) : columnCells;\n      const backups = [Optional.some(width.edge(table))].concat(map$1(width.positions(columnCells, table), pos => pos.map(p => p.x)));\n      const colFilter = not(hasColspan);\n      return map$1(columns$1, (cellOption, c) => {\n        return getDimension(cellOption, c, backups, colFilter, column => {\n          if (isValidColumn(column)) {\n            return getWidth(column);\n          } else {\n            const cell = bindFrom(columnCells[c], identity);\n            return getDimension(cell, c, backups, colFilter, cell => fallback(Optional.some(get$9(cell))), fallback);\n          }\n        }, fallback);\n      });\n    };\n    const getDeduced = deduced => {\n      return deduced.map(d => {\n        return d + 'px';\n      }).getOr('');\n    };\n    const getRawWidths = (warehouse, table) => {\n      return getWidthFrom(warehouse, table, getRawW, getDeduced);\n    };\n    const getPercentageWidths = (warehouse, table, tableSize) => {\n      return getWidthFrom(warehouse, table, getPercentageWidth, deduced => {\n        return deduced.fold(() => {\n          return tableSize.minCellWidth();\n        }, cellWidth => {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      });\n    };\n    const getPixelWidths = (warehouse, table, tableSize) => {\n      return getWidthFrom(warehouse, table, getPixelWidth$1, deduced => {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      });\n    };\n    const getHeightFrom = (warehouse, table, direction, getHeight, fallback) => {\n      const rows$1 = rows(warehouse);\n      const backups = [Optional.some(direction.edge(table))].concat(map$1(direction.positions(rows$1, table), pos => pos.map(p => p.y)));\n      return map$1(rows$1, (cellOption, c) => {\n        return getDimension(cellOption, c, backups, not(hasRowspan), getHeight, fallback);\n      });\n    };\n    const getPixelHeights = (warehouse, table, direction) => {\n      return getHeightFrom(warehouse, table, direction, getHeight, deduced => {\n        return deduced.getOrThunk(minHeight);\n      });\n    };\n    const getRawHeights = (warehouse, table, direction) => {\n      return getHeightFrom(warehouse, table, direction, getRawH, getDeduced);\n    };\n\n    const widthLookup = (table, getter) => () => {\n      if (inBody(table)) {\n        return getter(table);\n      } else {\n        return parseFloat(getRaw$2(table, 'width').getOr('0'));\n      }\n    };\n    const noneSize = table => {\n      const getWidth = widthLookup(table, get$9);\n      const zero = constant(0);\n      const getWidths = (warehouse, tableSize) => getPixelWidths(warehouse, table, tableSize);\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta: zero,\n        singleColumnWidth: constant([0]),\n        minCellWidth: zero,\n        setElementWidth: noop,\n        adjustTableWidth: noop,\n        isRelative: true,\n        label: 'none'\n      };\n    };\n    const percentageSize = table => {\n      const getFloatWidth = widthLookup(table, elem => parseFloat(getPercentTableWidth(elem)));\n      const getWidth = widthLookup(table, get$9);\n      const getCellDelta = delta => delta / getWidth() * 100;\n      const singleColumnWidth = (w, _delta) => [100 - w];\n      const minCellWidth = () => minWidth() / getWidth() * 100;\n      const adjustTableWidth = delta => {\n        const currentWidth = getFloatWidth();\n        const change = delta / 100 * currentWidth;\n        const newWidth = currentWidth + change;\n        setPercentageWidth(table, newWidth);\n      };\n      const getWidths = (warehouse, tableSize) => getPercentageWidths(warehouse, table, tableSize);\n      return {\n        width: getFloatWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta,\n        singleColumnWidth,\n        minCellWidth,\n        setElementWidth: setPercentageWidth,\n        adjustTableWidth,\n        isRelative: true,\n        label: 'percent'\n      };\n    };\n    const pixelSize = table => {\n      const getWidth = widthLookup(table, get$9);\n      const getCellDelta = identity;\n      const singleColumnWidth = (w, delta) => {\n        const newNext = Math.max(minWidth(), w + delta);\n        return [newNext - w];\n      };\n      const adjustTableWidth = delta => {\n        const newWidth = getWidth() + delta;\n        setPixelWidth(table, newWidth);\n      };\n      const getWidths = (warehouse, tableSize) => getPixelWidths(warehouse, table, tableSize);\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths,\n        getCellDelta,\n        singleColumnWidth,\n        minCellWidth: minWidth,\n        setElementWidth: setPixelWidth,\n        adjustTableWidth,\n        isRelative: false,\n        label: 'pixel'\n      };\n    };\n    const chooseSize = (element, width) => {\n      const percentMatch = percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(element);\n      } else {\n        return pixelSize(element);\n      }\n    };\n    const getTableSize = table => {\n      const width = getRawWidth$1(table);\n      return width.fold(() => noneSize(table), w => chooseSize(table, w));\n    };\n    const TableSize = {\n      getTableSize,\n      pixelSize,\n      percentageSize,\n      noneSize\n    };\n\n    const statsStruct = (minRow, minCol, maxRow, maxCol, allCells, selectedCells) => ({\n      minRow,\n      minCol,\n      maxRow,\n      maxCol,\n      allCells,\n      selectedCells\n    });\n    const findSelectedStats = (house, isSelected) => {\n      const totalColumns = house.grid.columns;\n      const totalRows = house.grid.rows;\n      let minRow = totalRows;\n      let minCol = totalColumns;\n      let maxRow = 0;\n      let maxCol = 0;\n      const allCells = [];\n      const selectedCells = [];\n      each$1(house.access, detail => {\n        allCells.push(detail);\n        if (isSelected(detail)) {\n          selectedCells.push(detail);\n          const startRow = detail.row;\n          const endRow = startRow + detail.rowspan - 1;\n          const startCol = detail.column;\n          const endCol = startCol + detail.colspan - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol, allCells, selectedCells);\n    };\n    const makeCell = (list, seenSelected, rowIndex) => {\n      const row = list[rowIndex].element;\n      const td = SugarElement.fromTag('td');\n      append$1(td, SugarElement.fromTag('br'));\n      const f = seenSelected ? append$1 : prepend;\n      f(row, td);\n    };\n    const fillInGaps = (list, house, stats, isSelected) => {\n      const rows = filter$2(list, row => row.section !== 'colgroup');\n      const totalColumns = house.grid.columns;\n      const totalRows = house.grid.rows;\n      for (let i = 0; i < totalRows; i++) {\n        let seenSelected = false;\n        for (let j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow || i > stats.maxRow || j < stats.minCol || j > stats.maxCol)) {\n            const needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(rows, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    const clean = (replica, stats, house, widthDelta) => {\n      each$1(house.columns, col => {\n        if (col.column < stats.minCol || col.column > stats.maxCol) {\n          remove$6(col.element);\n        }\n      });\n      const emptyRows = filter$2(firstLayer(replica, 'tr'), row => row.dom.childElementCount === 0);\n      each$2(emptyRows, remove$6);\n      if (stats.minCol === stats.maxCol || stats.minRow === stats.maxRow) {\n        each$2(firstLayer(replica, 'th,td'), cell => {\n          remove$7(cell, 'rowspan');\n          remove$7(cell, 'colspan');\n        });\n      }\n      remove$7(replica, LOCKED_COL_ATTR);\n      remove$7(replica, 'data-snooker-col-series');\n      const tableSize = TableSize.getTableSize(replica);\n      tableSize.adjustTableWidth(widthDelta);\n    };\n    const getTableWidthDelta = (table, warehouse, tableSize, stats) => {\n      if (stats.minCol === 0 && warehouse.grid.columns === stats.maxCol + 1) {\n        return 0;\n      }\n      const colWidths = getPixelWidths(warehouse, table, tableSize);\n      const allColsWidth = foldl(colWidths, (acc, width) => acc + width, 0);\n      const selectedColsWidth = foldl(colWidths.slice(stats.minCol, stats.maxCol + 1), (acc, width) => acc + width, 0);\n      const newWidth = selectedColsWidth / allColsWidth * tableSize.pixelWidth();\n      const delta = newWidth - tableSize.pixelWidth();\n      return tableSize.getCellDelta(delta);\n    };\n    const extract$1 = (table, selectedSelector) => {\n      const isSelected = detail => is$2(detail.element, selectedSelector);\n      const replica = deep(table);\n      const list = fromTable$1(replica);\n      const tableSize = TableSize.getTableSize(table);\n      const replicaHouse = Warehouse.generate(list);\n      const replicaStats = findSelectedStats(replicaHouse, isSelected);\n      const selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      const unselectedCells = filterFirstLayer(replica, 'th,td', cell => is$2(cell, selector));\n      each$2(unselectedCells, remove$6);\n      fillInGaps(list, replicaHouse, replicaStats, isSelected);\n      const house = Warehouse.fromTable(table);\n      const widthDelta = getTableWidthDelta(table, house, tableSize, replicaStats);\n      clean(replica, replicaStats, replicaHouse, widthDelta);\n      return replica;\n    };\n\n    const nbsp = '\\xA0';\n\n    const NodeValue = (is, name) => {\n      const get = element => {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      const getOption = element => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      const set = (element, value) => {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get,\n        getOption,\n        set\n      };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get$6 = element => api.get(element);\n    const getOption = element => api.getOption(element);\n    const set = (element, value) => api.set(element, value);\n\n    const getEnd = element => name(element) === 'img' ? 1 : getOption(element).fold(() => children$2(element).length, v => v.length);\n    const isTextNodeWithCursorPosition = el => getOption(el).filter(text => text.trim().length !== 0 || text.indexOf(nbsp) > -1).isSome();\n    const elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    const isCursorPosition = elem => {\n      const hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains$2(elementsWithCursorPosition, name(elem));\n    };\n\n    const first = element => descendant$1(element, isCursorPosition);\n    const last$1 = element => descendantRtl(element, isCursorPosition);\n    const descendantRtl = (scope, predicate) => {\n      const descend = element => {\n        const children = children$2(element);\n        for (let i = children.length - 1; i >= 0; i--) {\n          const child = children[i];\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope);\n    };\n\n    const transferableAttributes = {\n      scope: [\n        'row',\n        'col'\n      ]\n    };\n    const createCell = doc => () => {\n      const td = SugarElement.fromTag('td', doc.dom);\n      append$1(td, SugarElement.fromTag('br', doc.dom));\n      return td;\n    };\n    const createCol = doc => () => {\n      return SugarElement.fromTag('col', doc.dom);\n    };\n    const createColgroup = doc => () => {\n      return SugarElement.fromTag('colgroup', doc.dom);\n    };\n    const createRow$1 = doc => () => {\n      return SugarElement.fromTag('tr', doc.dom);\n    };\n    const replace$1 = (cell, tag, attrs) => {\n      const replica = copy$2(cell, tag);\n      each$1(attrs, (v, k) => {\n        if (v === null) {\n          remove$7(replica, k);\n        } else {\n          set$2(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    const pasteReplace = cell => {\n      return cell;\n    };\n    const cloneFormats = (oldCell, newCell, formats) => {\n      const first$1 = first(oldCell);\n      return first$1.map(firstText => {\n        const formatSelector = formats.join(',');\n        const parents = ancestors$3(firstText, formatSelector, element => {\n          return eq$1(element, oldCell);\n        });\n        return foldr(parents, (last, parent) => {\n          const clonedFormat = shallow(parent);\n          remove$7(clonedFormat, 'contenteditable');\n          append$1(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    const cloneAppropriateAttributes = (original, clone) => {\n      each$1(transferableAttributes, (validAttributes, attributeName) => getOpt(original, attributeName).filter(attribute => contains$2(validAttributes, attribute)).each(attribute => set$2(clone, attributeName, attribute)));\n    };\n    const cellOperations = (mutate, doc, formatsToClone) => {\n      const cloneCss = (prev, clone) => {\n        copy$1(prev.element, clone);\n        remove$5(clone, 'height');\n        if (prev.colspan !== 1) {\n          remove$5(clone, 'width');\n        }\n      };\n      const newCell = prev => {\n        const td = SugarElement.fromTag(name(prev.element), doc.dom);\n        const formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        const lastNode = formats.length > 0 ? cloneFormats(prev.element, td, formats) : td;\n        append$1(lastNode, SugarElement.fromTag('br'));\n        cloneCss(prev, td);\n        cloneAppropriateAttributes(prev.element, td);\n        mutate(prev.element, td);\n        return td;\n      };\n      const newCol = prev => {\n        const col = SugarElement.fromTag(name(prev.element), doc.dom);\n        cloneCss(prev, col);\n        mutate(prev.element, col);\n        return col;\n      };\n      return {\n        col: newCol,\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: newCell,\n        replace: replace$1,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n    const paste$1 = doc => {\n      return {\n        col: createCol(doc),\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: createCell(doc),\n        replace: pasteReplace,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      return children$2(SugarElement.fromDom(div));\n    };\n    const fromDom = nodes => map$1(nodes, SugarElement.fromDom);\n\n    const getBody = editor => SugarElement.fromDom(editor.getBody());\n    const getIsRoot = editor => element => eq$1(element, getBody(editor));\n    const removeDataStyle = table => {\n      remove$7(table, 'data-mce-style');\n      const removeStyleAttribute = element => remove$7(element, 'data-mce-style');\n      each$2(cells$1(table), removeStyleAttribute);\n      each$2(columns$1(table), removeStyleAttribute);\n      each$2(rows$1(table), removeStyleAttribute);\n    };\n    const getSelectionStart = editor => SugarElement.fromDom(editor.selection.getStart());\n    const getPixelWidth = elm => elm.getBoundingClientRect().width;\n    const getPixelHeight = elm => elm.getBoundingClientRect().height;\n    const getRawWidth = (editor, elm) => {\n      const raw = editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      return Optional.from(raw).filter(isNotEmpty);\n    };\n    const isPercentage$1 = value => /^(\\d+(\\.\\d+)?)%$/.test(value);\n    const isPixel = value => /^(\\d+(\\.\\d+)?)px$/.test(value);\n\n    const inSelection = (bounds, detail) => {\n      const leftEdge = detail.column;\n      const rightEdge = detail.column + detail.colspan - 1;\n      const topEdge = detail.row;\n      const bottomEdge = detail.row + detail.rowspan - 1;\n      return leftEdge <= bounds.finishCol && rightEdge >= bounds.startCol && (topEdge <= bounds.finishRow && bottomEdge >= bounds.startRow);\n    };\n    const isWithin = (bounds, detail) => {\n      return detail.column >= bounds.startCol && detail.column + detail.colspan - 1 <= bounds.finishCol && detail.row >= bounds.startRow && detail.row + detail.rowspan - 1 <= bounds.finishRow;\n    };\n    const isRectangular = (warehouse, bounds) => {\n      let isRect = true;\n      const detailIsWithin = curry(isWithin, bounds);\n      for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Optional.some(bounds) : Optional.none();\n    };\n\n    const getBounds = (detailA, detailB) => {\n      return bounds(Math.min(detailA.row, detailB.row), Math.min(detailA.column, detailB.column), Math.max(detailA.row + detailA.rowspan - 1, detailB.row + detailB.rowspan - 1), Math.max(detailA.column + detailA.colspan - 1, detailB.column + detailB.colspan - 1));\n    };\n    const getAnyBox = (warehouse, startCell, finishCell) => {\n      const startCoords = Warehouse.findItem(warehouse, startCell, eq$1);\n      const finishCoords = Warehouse.findItem(warehouse, finishCell, eq$1);\n      return startCoords.bind(sc => {\n        return finishCoords.map(fc => {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    const getBox$1 = (warehouse, startCell, finishCell) => {\n      return getAnyBox(warehouse, startCell, finishCell).bind(bounds => {\n        return isRectangular(warehouse, bounds);\n      });\n    };\n\n    const moveBy$1 = (warehouse, cell, row, column) => {\n      return Warehouse.findItem(warehouse, cell, eq$1).bind(detail => {\n        const startRow = row > 0 ? detail.row + detail.rowspan - 1 : detail.row;\n        const startCol = column > 0 ? detail.column + detail.colspan - 1 : detail.column;\n        const dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(d => {\n          return d.element;\n        });\n      });\n    };\n    const intercepts$1 = (warehouse, start, finish) => {\n      return getAnyBox(warehouse, start, finish).map(bounds => {\n        const inside = Warehouse.filterItems(warehouse, curry(inSelection, bounds));\n        return map$1(inside, detail => {\n          return detail.element;\n        });\n      });\n    };\n    const parentCell = (warehouse, innerCell) => {\n      const isContainedBy = (c1, c2) => {\n        return contains$1(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(detail => {\n        return detail.element;\n      });\n    };\n\n    const moveBy = (cell, deltaRow, deltaColumn) => {\n      return table(cell).bind(table => {\n        const warehouse = getWarehouse(table);\n        return moveBy$1(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    const intercepts = (table, first, last) => {\n      const warehouse = getWarehouse(table);\n      return intercepts$1(warehouse, first, last);\n    };\n    const nestedIntercepts = (table, first, firstTable, last, lastTable) => {\n      const warehouse = getWarehouse(table);\n      const optStartCell = eq$1(table, firstTable) ? Optional.some(first) : parentCell(warehouse, first);\n      const optLastCell = eq$1(table, lastTable) ? Optional.some(last) : parentCell(warehouse, last);\n      return optStartCell.bind(startCell => optLastCell.bind(lastCell => intercepts$1(warehouse, startCell, lastCell)));\n    };\n    const getBox = (table, first, last) => {\n      const warehouse = getWarehouse(table);\n      return getBox$1(warehouse, first, last);\n    };\n    const getWarehouse = Warehouse.fromTable;\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    var DomUniverse = () => {\n      const clone = element => {\n        return SugarElement.fromDom(element.dom.cloneNode(false));\n      };\n      const document = element => documentOrOwner(element).dom;\n      const isBoundary = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains$2(TagBoundaries, name(element));\n      };\n      const isEmptyTag = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains$2([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      const isNonEditable = element => isElement(element) && get$b(element, 'contenteditable') === 'false';\n      const comparePosition = (element, other) => {\n        return element.dom.compareDocumentPosition(other.dom);\n      };\n      const copyAttributesTo = (source, destination) => {\n        const as = clone$2(source);\n        setAll$1(destination, as);\n      };\n      const isSpecial = element => {\n        const tag = name(element);\n        return contains$2([\n          'script',\n          'noscript',\n          'iframe',\n          'noframes',\n          'noembed',\n          'title',\n          'style',\n          'textarea',\n          'xmp'\n        ], tag);\n      };\n      const getLanguage = element => isElement(element) ? getOpt(element, 'lang') : Optional.none();\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor$2,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants,\n          predicate: descendants$1\n        }),\n        styles: constant({\n          get: get$a,\n          getRaw: getRaw$2,\n          set: set$1,\n          remove: remove$5\n        }),\n        attrs: constant({\n          get: get$b,\n          set: set$2,\n          remove: remove$7,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before$3,\n          after: after$5,\n          afterAll: after$4,\n          append: append$1,\n          appendAll: append,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$6\n        }),\n        create: constant({\n          nu: SugarElement.fromTag,\n          clone,\n          text: SugarElement.fromText\n        }),\n        query: constant({\n          comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children$2,\n          name: name,\n          parent: parent,\n          document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          isSpecial,\n          getLanguage,\n          getText: get$6,\n          setText: set,\n          isBoundary,\n          isEmptyTag,\n          isNonEditable\n        }),\n        eq: eq$1,\n        is: is$1\n      };\n    };\n\n    const all = (universe, look, elements, f) => {\n      const head = elements[0];\n      const tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    const oneAll = (universe, look, elements) => {\n      return elements.length > 0 ? all(universe, look, elements, unsafeOne) : Optional.none();\n    };\n    const unsafeOne = (universe, look, head, tail) => {\n      const start = look(universe, head);\n      return foldr(tail, (b, a) => {\n        const current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    const commonElement = (universe, start, end) => {\n      return start.bind(s => {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    const eq = (universe, item) => {\n      return curry(universe.eq, item);\n    };\n    const ancestors$2 = (universe, start, end, isRoot = never) => {\n      const ps1 = [start].concat(universe.up().all(start));\n      const ps2 = [end].concat(universe.up().all(end));\n      const prune = path => {\n        const index = findIndex(path, isRoot);\n        return index.fold(() => {\n          return path;\n        }, ind => {\n          return path.slice(0, ind + 1);\n        });\n      };\n      const pruned1 = prune(ps1);\n      const pruned2 = prune(ps2);\n      const shared = find$1(pruned1, x => {\n        return exists(pruned2, eq(universe, x));\n      });\n      return {\n        firstpath: pruned1,\n        secondpath: pruned2,\n        shared\n      };\n    };\n\n    const sharedOne$1 = oneAll;\n    const ancestors$1 = ancestors$2;\n\n    const universe$3 = DomUniverse();\n    const sharedOne = (look, elements) => {\n      return sharedOne$1(universe$3, (_universe, element) => {\n        return look(element);\n      }, elements);\n    };\n    const ancestors = (start, finish, isRoot) => {\n      return ancestors$1(universe$3, start, finish, isRoot);\n    };\n\n    const lookupTable = container => {\n      return ancestor$1(container, 'table');\n    };\n    const identify = (start, finish, isRoot) => {\n      const getIsRoot = rootTable => {\n        return element => {\n          return isRoot !== undefined && isRoot(element) || eq$1(element, rootTable);\n        };\n      };\n      if (eq$1(start, finish)) {\n        return Optional.some({\n          boxes: Optional.some([start]),\n          start,\n          finish\n        });\n      } else {\n        return lookupTable(start).bind(startTable => {\n          return lookupTable(finish).bind(finishTable => {\n            if (eq$1(startTable, finishTable)) {\n              return Optional.some({\n                boxes: intercepts(startTable, start, finish),\n                start,\n                finish\n              });\n            } else if (contains$1(startTable, finishTable)) {\n              const ancestorCells = ancestors$3(finish, 'td,th', getIsRoot(startTable));\n              const finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Optional.some({\n                boxes: nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start,\n                finish: finishCell\n              });\n            } else if (contains$1(finishTable, startTable)) {\n              const ancestorCells = ancestors$3(start, 'td,th', getIsRoot(finishTable));\n              const startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Optional.some({\n                boxes: nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start,\n                finish: startCell\n              });\n            } else {\n              return ancestors(start, finish).shared.bind(lca => {\n                return closest$1(lca, 'table', isRoot).bind(lcaTable => {\n                  const finishAncestorCells = ancestors$3(finish, 'td,th', getIsRoot(lcaTable));\n                  const finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  const startAncestorCells = ancestors$3(start, 'td,th', getIsRoot(lcaTable));\n                  const startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Optional.some({\n                    boxes: nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  });\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    const retrieve$1 = (container, selector) => {\n      const sels = descendants(container, selector);\n      return sels.length > 0 ? Optional.some(sels) : Optional.none();\n    };\n    const getLast = (boxes, lastSelectedSelector) => {\n      return find$1(boxes, box => {\n        return is$2(box, lastSelectedSelector);\n      });\n    };\n    const getEdges = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return descendant(container, firstSelectedSelector).bind(first => {\n        return descendant(container, lastSelectedSelector).bind(last => {\n          return sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(table => {\n            return {\n              first,\n              last,\n              table\n            };\n          });\n        });\n      });\n    };\n    const expandTo = (finish, firstSelectedSelector) => {\n      return ancestor$1(finish, 'table').bind(table => {\n        return descendant(table, firstSelectedSelector).bind(start => {\n          return identify(start, finish).bind(identified => {\n            return identified.boxes.map(boxes => {\n              return {\n                boxes,\n                start: identified.start,\n                finish: identified.finish\n              };\n            });\n          });\n        });\n      });\n    };\n    const shiftSelection = (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) => {\n      return getLast(boxes, lastSelectedSelector).bind(last => {\n        return moveBy(last, deltaRow, deltaColumn).bind(finish => {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n\n    const retrieve = (container, selector) => {\n      return retrieve$1(container, selector);\n    };\n    const retrieveBox = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(edges => {\n        const isRoot = ancestor => {\n          return eq$1(container, ancestor);\n        };\n        const sectionSelector = 'thead,tfoot,tbody,table';\n        const firstAncestor = ancestor$1(edges.first, sectionSelector, isRoot);\n        const lastAncestor = ancestor$1(edges.last, sectionSelector, isRoot);\n        return firstAncestor.bind(fA => {\n          return lastAncestor.bind(lA => {\n            return eq$1(fA, lA) ? getBox(edges.table, edges.first, edges.last) : Optional.none();\n          });\n        });\n      });\n    };\n\n    const selection = identity;\n    const unmergable = selectedCells => {\n      const hasSpan = (elem, type) => getOpt(elem, type).exists(span => parseInt(span, 10) > 1);\n      const hasRowOrColSpan = elem => hasSpan(elem, 'rowspan') || hasSpan(elem, 'colspan');\n      return selectedCells.length > 0 && forall(selectedCells, hasRowOrColSpan) ? Optional.some(selectedCells) : Optional.none();\n    };\n    const mergable = (table, selectedCells, ephemera) => {\n      if (selectedCells.length <= 1) {\n        return Optional.none();\n      } else {\n        return retrieveBox(table, ephemera.firstSelectedSelector, ephemera.lastSelectedSelector).map(bounds => ({\n          bounds,\n          cells: selectedCells\n        }));\n      }\n    };\n\n    const strSelected = 'data-mce-selected';\n    const strSelectedSelector = 'td[' + strSelected + '],th[' + strSelected + ']';\n    const strAttributeSelector = '[' + strSelected + ']';\n    const strFirstSelected = 'data-mce-first-selected';\n    const strFirstSelectedSelector = 'td[' + strFirstSelected + '],th[' + strFirstSelected + ']';\n    const strLastSelected = 'data-mce-last-selected';\n    const strLastSelectedSelector = 'td[' + strLastSelected + '],th[' + strLastSelected + ']';\n    const attributeSelector = strAttributeSelector;\n    const ephemera = {\n      selected: strSelected,\n      selectedSelector: strSelectedSelector,\n      firstSelected: strFirstSelected,\n      firstSelectedSelector: strFirstSelectedSelector,\n      lastSelected: strLastSelected,\n      lastSelectedSelector: strLastSelectedSelector\n    };\n\n    const forMenu = (selectedCells, table, cell) => ({\n      element: cell,\n      mergable: mergable(table, selectedCells, ephemera),\n      unmergable: unmergable(selectedCells),\n      selection: selection(selectedCells)\n    });\n    const paste = (element, clipboard, generators) => ({\n      element,\n      clipboard,\n      generators\n    });\n    const pasteRows = (selectedCells, _cell, clipboard, generators) => ({\n      selection: selection(selectedCells),\n      clipboard,\n      generators\n    });\n\n    const getSelectionCellFallback = element => table(element).bind(table => retrieve(table, ephemera.firstSelectedSelector)).fold(constant(element), cells => cells[0]);\n    const getSelectionFromSelector = selector => (initCell, isRoot) => {\n      const cellName = name(initCell);\n      const cell = cellName === 'col' || cellName === 'colgroup' ? getSelectionCellFallback(initCell) : initCell;\n      return closest$1(cell, selector, isRoot);\n    };\n    const getSelectionCellOrCaption = getSelectionFromSelector('th,td,caption');\n    const getSelectionCell = getSelectionFromSelector('th,td');\n    const getCellsFromSelection = editor => fromDom(editor.model.table.getSelectedCells());\n    const getCellsFromFakeSelection = editor => filter$2(getCellsFromSelection(editor), cell => is$2(cell, ephemera.selectedSelector));\n\n    const extractSelected = cells => {\n      return table(cells[0]).map(table => {\n        const replica = extract$1(table, attributeSelector);\n        removeDataStyle(replica);\n        return [replica];\n      });\n    };\n    const serializeElements = (editor, elements) => map$1(elements, elm => editor.selection.serializer.serialize(elm.dom, {})).join('');\n    const getTextContent = elements => map$1(elements, element => element.dom.innerText).join('');\n    const registerEvents = (editor, actions) => {\n      editor.on('BeforeGetContent', e => {\n        const multiCellContext = cells => {\n          e.preventDefault();\n          extractSelected(cells).each(elements => {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          const cells = getCellsFromFakeSelection(editor);\n          if (cells.length >= 1) {\n            multiCellContext(cells);\n          }\n        }\n      });\n      editor.on('BeforeSetContent', e => {\n        if (e.selection === true && e.paste === true) {\n          const selectedCells = getCellsFromSelection(editor);\n          head(selectedCells).each(cell => {\n            table(cell).each(table => {\n              const elements = filter$2(fromHtml(e.content), content => {\n                return name(content) !== 'meta';\n              });\n              const isTable = isTag('table');\n              if (elements.length === 1 && isTable(elements[0])) {\n                e.preventDefault();\n                const doc = SugarElement.fromDom(editor.getDoc());\n                const generators = paste$1(doc);\n                const targets = paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(() => {\n                  editor.focus();\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n\n    const point = (element, offset) => ({\n      element,\n      offset\n    });\n\n    const scan$1 = (universe, element, direction) => {\n      if (universe.property().isText(element) && universe.property().getText(element).trim().length === 0 || universe.property().isComment(element)) {\n        return direction(element).bind(elem => {\n          return scan$1(universe, elem, direction).orThunk(() => {\n            return Optional.some(elem);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const toEnd = (universe, element) => {\n      if (universe.property().isText(element)) {\n        return universe.property().getText(element).length;\n      }\n      const children = universe.property().children(element);\n      return children.length;\n    };\n    const freefallRtl$2 = (universe, element) => {\n      const candidate = scan$1(universe, element, universe.query().prevSibling).getOr(element);\n      if (universe.property().isText(candidate)) {\n        return point(candidate, toEnd(universe, candidate));\n      }\n      const children = universe.property().children(candidate);\n      return children.length > 0 ? freefallRtl$2(universe, children[children.length - 1]) : point(candidate, toEnd(universe, candidate));\n    };\n\n    const freefallRtl$1 = freefallRtl$2;\n\n    const universe$2 = DomUniverse();\n    const freefallRtl = element => {\n      return freefallRtl$1(universe$2, element);\n    };\n\n    const halve = (main, other) => {\n      if (!hasColspan(main)) {\n        const width = getGenericWidth(main);\n        width.each(w => {\n          const newWidth = w.value / 2;\n          setGenericWidth(main, newWidth, w.unit);\n          setGenericWidth(other, newWidth, w.unit);\n        });\n      }\n    };\n\n    const zero = array => map$1(array, constant(0));\n    const surround = (sizes, startIndex, endIndex, results, f) => f(sizes.slice(0, startIndex)).concat(results).concat(f(sizes.slice(endIndex)));\n    const clampDeltaHelper = predicate => (sizes, index, delta, minCellSize) => {\n      if (!predicate(delta)) {\n        return delta;\n      } else {\n        const newSize = Math.max(minCellSize, sizes[index] - Math.abs(delta));\n        const diff = Math.abs(newSize - sizes[index]);\n        return delta >= 0 ? diff : -diff;\n      }\n    };\n    const clampNegativeDelta = clampDeltaHelper(delta => delta < 0);\n    const clampDelta = clampDeltaHelper(always);\n    const resizeTable = () => {\n      const calcFixedDeltas = (sizes, index, next, delta, minCellSize) => {\n        const clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          0\n        ], zero);\n      };\n      const calcRelativeDeltas = (sizes, index, delta, minCellSize) => {\n        const ratio = (100 + delta) / 100;\n        const newThis = Math.max(minCellSize, (sizes[index] + delta) / ratio);\n        return map$1(sizes, (size, idx) => {\n          const newSize = idx === index ? newThis : size / ratio;\n          return newSize - size;\n        });\n      };\n      const calcLeftEdgeDeltas = (sizes, index, next, delta, minCellSize, isRelative) => {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          return calcFixedDeltas(sizes, index, next, delta, minCellSize);\n        }\n      };\n      const calcMiddleDeltas = (sizes, _prev, index, next, delta, minCellSize, isRelative) => calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize, isRelative);\n      const resizeTable = (resizer, delta) => resizer(delta);\n      const calcRightEdgeDeltas = (sizes, _prev, index, delta, minCellSize, isRelative) => {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          const clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n          return zero(sizes.slice(0, index)).concat([clampedDelta]);\n        }\n      };\n      const calcRedestributedWidths = (sizes, totalWidth, pixelDelta, isRelative) => {\n        if (isRelative) {\n          const tableWidth = totalWidth + pixelDelta;\n          const ratio = tableWidth / totalWidth;\n          const newSizes = map$1(sizes, size => size / ratio);\n          return {\n            delta: ratio * 100 - 100,\n            newSizes\n          };\n        } else {\n          return {\n            delta: pixelDelta,\n            newSizes: sizes\n          };\n        }\n      };\n      return {\n        resizeTable,\n        clampTableDelta: clampNegativeDelta,\n        calcLeftEdgeDeltas,\n        calcMiddleDeltas,\n        calcRightEdgeDeltas,\n        calcRedestributedWidths\n      };\n    };\n    const preserveTable = () => {\n      const calcLeftEdgeDeltas = (sizes, index, next, delta, minCellSize) => {\n        const idx = delta >= 0 ? next : index;\n        const clampedDelta = clampDelta(sizes, idx, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          -clampedDelta\n        ], zero);\n      };\n      const calcMiddleDeltas = (sizes, _prev, index, next, delta, minCellSize) => calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize);\n      const resizeTable = (resizer, delta, isLastColumn) => {\n        if (isLastColumn) {\n          resizer(delta);\n        }\n      };\n      const calcRightEdgeDeltas = (sizes, _prev, _index, delta, _minCellSize, isRelative) => {\n        if (isRelative) {\n          return zero(sizes);\n        } else {\n          const diff = delta / sizes.length;\n          return map$1(sizes, constant(diff));\n        }\n      };\n      const clampTableDelta = (sizes, index, delta, minCellSize, isLastColumn) => {\n        if (isLastColumn) {\n          if (delta >= 0) {\n            return delta;\n          } else {\n            const maxDelta = foldl(sizes, (a, b) => a + b - minCellSize, 0);\n            return Math.max(-maxDelta, delta);\n          }\n        } else {\n          return clampNegativeDelta(sizes, index, delta, minCellSize);\n        }\n      };\n      const calcRedestributedWidths = (sizes, _totalWidth, _pixelDelta, _isRelative) => ({\n        delta: 0,\n        newSizes: sizes\n      });\n      return {\n        resizeTable,\n        clampTableDelta,\n        calcLeftEdgeDeltas,\n        calcMiddleDeltas,\n        calcRightEdgeDeltas,\n        calcRedestributedWidths\n      };\n    };\n\n    const getGridSize = table => {\n      const warehouse = Warehouse.fromTable(table);\n      return warehouse.grid;\n    };\n\n    const isHeaderCell = isTag('th');\n    const isHeaderCells = cells => forall(cells, cell => isHeaderCell(cell.element));\n    const getRowHeaderType = (isHeaderRow, isHeaderCells) => {\n      if (isHeaderRow && isHeaderCells) {\n        return 'sectionCells';\n      } else if (isHeaderRow) {\n        return 'section';\n      } else {\n        return 'cells';\n      }\n    };\n    const getRowType = row => {\n      const isHeaderRow = row.section === 'thead';\n      const isHeaderCells = is(findCommonCellType(row.cells), 'th');\n      if (row.section === 'tfoot') {\n        return { type: 'footer' };\n      } else if (isHeaderRow || isHeaderCells) {\n        return {\n          type: 'header',\n          subType: getRowHeaderType(isHeaderRow, isHeaderCells)\n        };\n      } else {\n        return { type: 'body' };\n      }\n    };\n    const findCommonCellType = cells => {\n      const headerCells = filter$2(cells, cell => isHeaderCell(cell.element));\n      if (headerCells.length === 0) {\n        return Optional.some('td');\n      } else if (headerCells.length === cells.length) {\n        return Optional.some('th');\n      } else {\n        return Optional.none();\n      }\n    };\n    const findCommonRowType = rows => {\n      const rowTypes = map$1(rows, row => getRowType(row).type);\n      const hasHeader = contains$2(rowTypes, 'header');\n      const hasFooter = contains$2(rowTypes, 'footer');\n      if (!hasHeader && !hasFooter) {\n        return Optional.some('body');\n      } else {\n        const hasBody = contains$2(rowTypes, 'body');\n        if (hasHeader && !hasBody && !hasFooter) {\n          return Optional.some('header');\n        } else if (!hasHeader && !hasBody && hasFooter) {\n          return Optional.some('footer');\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n    const findTableRowHeaderType = warehouse => findMap(warehouse.all, row => {\n      const rowType = getRowType(row);\n      return rowType.type === 'header' ? Optional.from(rowType.subType) : Optional.none();\n    });\n\n    const transformCell = (cell, comparator, substitution) => elementnew(substitution(cell.element, comparator), true, cell.isLocked);\n    const transformRow = (row, section) => row.section !== section ? rowcells(row.element, row.cells, section, row.isNew) : row;\n    const section = () => ({\n      transformRow,\n      transformCell: (cell, comparator, substitution) => {\n        const newCell = substitution(cell.element, comparator);\n        const fixedCell = name(newCell) !== 'td' ? mutate$1(newCell, 'td') : newCell;\n        return elementnew(fixedCell, cell.isNew, cell.isLocked);\n      }\n    });\n    const sectionCells = () => ({\n      transformRow,\n      transformCell\n    });\n    const cells = () => ({\n      transformRow: (row, section) => {\n        const newSection = section === 'thead' ? 'tbody' : section;\n        return transformRow(row, newSection);\n      },\n      transformCell\n    });\n    const fallback = () => ({\n      transformRow: identity,\n      transformCell\n    });\n    const getTableSectionType = (table, fallback) => {\n      const warehouse = Warehouse.fromTable(table);\n      const type = findTableRowHeaderType(warehouse).getOr(fallback);\n      switch (type) {\n      case 'section':\n        return section();\n      case 'sectionCells':\n        return sectionCells();\n      case 'cells':\n        return cells();\n      }\n    };\n    const TableSection = {\n      getTableSectionType,\n      section,\n      sectionCells,\n      cells,\n      fallback\n    };\n\n    const closest = target => closest$1(target, '[contenteditable]');\n    const isEditable$1 = (element, assumeEditable = false) => {\n      if (inBody(element)) {\n        return element.dom.isContentEditable;\n      } else {\n        return closest(element).fold(constant(assumeEditable), editable => getRaw(editable) === 'true');\n      }\n    };\n    const getRaw = element => element.dom.contentEditable;\n\n    const setIfNot = (element, property, value, ignore) => {\n      if (value === ignore) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, value);\n      }\n    };\n    const insert$1 = (table, selector, element) => {\n      last$2(children(table, selector)).fold(() => prepend(table, element), child => after$5(child, element));\n    };\n    const generateSection = (table, sectionName) => {\n      const section = child(table, sectionName).getOrThunk(() => {\n        const newSection = SugarElement.fromTag(sectionName, owner(table).dom);\n        if (sectionName === 'thead') {\n          insert$1(table, 'caption,colgroup', newSection);\n        } else if (sectionName === 'colgroup') {\n          insert$1(table, 'caption', newSection);\n        } else {\n          append$1(table, newSection);\n        }\n        return newSection;\n      });\n      empty(section);\n      return section;\n    };\n    const render$1 = (table, grid) => {\n      const newRows = [];\n      const newCells = [];\n      const syncRows = gridSection => map$1(gridSection, row => {\n        if (row.isNew) {\n          newRows.push(row.element);\n        }\n        const tr = row.element;\n        empty(tr);\n        each$2(row.cells, cell => {\n          if (cell.isNew) {\n            newCells.push(cell.element);\n          }\n          setIfNot(cell.element, 'colspan', cell.colspan, 1);\n          setIfNot(cell.element, 'rowspan', cell.rowspan, 1);\n          append$1(tr, cell.element);\n        });\n        return tr;\n      });\n      const syncColGroup = gridSection => bind$2(gridSection, colGroup => map$1(colGroup.cells, col => {\n        setIfNot(col.element, 'span', col.colspan, 1);\n        return col.element;\n      }));\n      const renderSection = (gridSection, sectionName) => {\n        const section = generateSection(table, sectionName);\n        const sync = sectionName === 'colgroup' ? syncColGroup : syncRows;\n        const sectionElems = sync(gridSection);\n        append(section, sectionElems);\n      };\n      const removeSection = sectionName => {\n        child(table, sectionName).each(remove$6);\n      };\n      const renderOrRemoveSection = (gridSection, sectionName) => {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      const headSection = [];\n      const bodySection = [];\n      const footSection = [];\n      const columnGroupsSection = [];\n      each$2(grid, row => {\n        switch (row.section) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        case 'colgroup':\n          columnGroupsSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(columnGroupsSection, 'colgroup');\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows,\n        newCells\n      };\n    };\n    const copy = grid => map$1(grid, row => {\n      const tr = shallow(row.element);\n      each$2(row.cells, cell => {\n        const clonedCell = deep(cell.element);\n        setIfNot(clonedCell, 'colspan', cell.colspan, 1);\n        setIfNot(clonedCell, 'rowspan', cell.rowspan, 1);\n        append$1(tr, clonedCell);\n      });\n      return tr;\n    });\n\n    const getColumn = (grid, index) => {\n      return map$1(grid, row => {\n        return getCell(row, index);\n      });\n    };\n    const getRow = (grid, index) => {\n      return grid[index];\n    };\n    const findDiff = (xs, comp) => {\n      if (xs.length === 0) {\n        return 0;\n      }\n      const first = xs[0];\n      const index = findIndex(xs, x => {\n        return !comp(first.element, x.element);\n      });\n      return index.getOr(xs.length);\n    };\n    const subgrid = (grid, row, column, comparator) => {\n      const gridRow = getRow(grid, row);\n      const isColRow = gridRow.section === 'colgroup';\n      const colspan = findDiff(gridRow.cells.slice(column), comparator);\n      const rowspan = isColRow ? 1 : findDiff(getColumn(grid.slice(row), column), comparator);\n      return {\n        colspan,\n        rowspan\n      };\n    };\n\n    const toDetails = (grid, comparator) => {\n      const seen = map$1(grid, row => map$1(row.cells, never));\n      const updateSeen = (rowIndex, columnIndex, rowspan, colspan) => {\n        for (let row = rowIndex; row < rowIndex + rowspan; row++) {\n          for (let column = columnIndex; column < columnIndex + colspan; column++) {\n            seen[row][column] = true;\n          }\n        }\n      };\n      return map$1(grid, (row, rowIndex) => {\n        const details = bind$2(row.cells, (cell, columnIndex) => {\n          if (seen[rowIndex][columnIndex] === false) {\n            const result = subgrid(grid, rowIndex, columnIndex, comparator);\n            updateSeen(rowIndex, columnIndex, result.rowspan, result.colspan);\n            return [detailnew(cell.element, result.rowspan, result.colspan, cell.isNew)];\n          } else {\n            return [];\n          }\n        });\n        return rowdetailnew(row.element, details, row.section, row.isNew);\n      });\n    };\n    const toGrid = (warehouse, generators, isNew) => {\n      const grid = [];\n      each$2(warehouse.colgroups, colgroup => {\n        const colgroupCols = [];\n        for (let columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          const element = Warehouse.getColumnAt(warehouse, columnIndex).map(column => elementnew(column.element, isNew, false)).getOrThunk(() => elementnew(generators.colGap(), true, false));\n          colgroupCols.push(element);\n        }\n        grid.push(rowcells(colgroup.element, colgroupCols, 'colgroup', isNew));\n      });\n      for (let rowIndex = 0; rowIndex < warehouse.grid.rows; rowIndex++) {\n        const rowCells = [];\n        for (let columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          const element = Warehouse.getAt(warehouse, rowIndex, columnIndex).map(item => elementnew(item.element, isNew, item.isLocked)).getOrThunk(() => elementnew(generators.gap(), true, false));\n          rowCells.push(element);\n        }\n        const rowDetail = warehouse.all[rowIndex];\n        const row = rowcells(rowDetail.element, rowCells, rowDetail.section, isNew);\n        grid.push(row);\n      }\n      return grid;\n    };\n\n    const fromWarehouse = (warehouse, generators) => toGrid(warehouse, generators, false);\n    const toDetailList = grid => toDetails(grid, eq$1);\n    const findInWarehouse = (warehouse, element) => findMap(warehouse.all, r => find$1(r.cells, e => eq$1(element, e.element)));\n    const extractCells = (warehouse, target, predicate) => {\n      const details = map$1(target.selection, cell$1 => {\n        return cell(cell$1).bind(lc => findInWarehouse(warehouse, lc)).filter(predicate);\n      });\n      const cells = cat(details);\n      return someIf(cells.length > 0, cells);\n    };\n    const run = (operation, extract, adjustment, postAction, genWrappers) => (table, target, generators, behaviours) => {\n      const warehouse = Warehouse.fromTable(table);\n      const tableSection = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.section).getOrThunk(TableSection.fallback);\n      const output = extract(warehouse, target).map(info => {\n        const model = fromWarehouse(warehouse, generators);\n        const result = operation(model, info, eq$1, genWrappers(generators), tableSection);\n        const lockedColumns = getLockedColumnsFromGrid(result.grid);\n        const grid = toDetailList(result.grid);\n        return {\n          info,\n          grid,\n          cursor: result.cursor,\n          lockedColumns\n        };\n      });\n      return output.bind(out => {\n        const newElements = render$1(table, out.grid);\n        const tableSizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.sizing).getOrThunk(() => TableSize.getTableSize(table));\n        const resizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.resize).getOrThunk(preserveTable);\n        adjustment(table, out.grid, out.info, {\n          sizing: tableSizing,\n          resize: resizing,\n          section: tableSection\n        });\n        postAction(table);\n        remove$7(table, LOCKED_COL_ATTR);\n        if (out.lockedColumns.length > 0) {\n          set$2(table, LOCKED_COL_ATTR, out.lockedColumns.join(','));\n        }\n        return Optional.some({\n          cursor: out.cursor,\n          newRows: newElements.newRows,\n          newCells: newElements.newCells\n        });\n      });\n    };\n    const onPaste = (warehouse, target) => cell(target.element).bind(cell => findInWarehouse(warehouse, cell).map(details => {\n      const value = {\n        ...details,\n        generators: target.generators,\n        clipboard: target.clipboard\n      };\n      return value;\n    }));\n    const onPasteByEditor = (warehouse, target) => extractCells(warehouse, target, always).map(cells => ({\n      cells,\n      generators: target.generators,\n      clipboard: target.clipboard\n    }));\n    const onMergable = (_warehouse, target) => target.mergable;\n    const onUnmergable = (_warehouse, target) => target.unmergable;\n    const onCells = (warehouse, target) => extractCells(warehouse, target, always);\n    const onUnlockedCells = (warehouse, target) => extractCells(warehouse, target, detail => !detail.isLocked);\n    const isUnlockedTableCell = (warehouse, cell) => findInWarehouse(warehouse, cell).exists(detail => !detail.isLocked);\n    const allUnlocked = (warehouse, cells) => forall(cells, cell => isUnlockedTableCell(warehouse, cell));\n    const onUnlockedMergable = (warehouse, target) => onMergable(warehouse, target).filter(mergeable => allUnlocked(warehouse, mergeable.cells));\n    const onUnlockedUnmergable = (warehouse, target) => onUnmergable(warehouse, target).filter(cells => allUnlocked(warehouse, cells));\n\n    const merge$2 = (grid, bounds, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      if (rows.length === 0) {\n        return grid;\n      }\n      for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n          const row = rows[i];\n          const isLocked = getCell(row, j).isLocked;\n          mutateCell(row, j, elementnew(substitution(), false, isLocked));\n        }\n      }\n      return grid;\n    };\n    const unmerge = (grid, target, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      let first = true;\n      for (let i = 0; i < rows.length; i++) {\n        for (let j = 0; j < cellLength(rows[0]); j++) {\n          const row = rows[i];\n          const currentCell = getCell(row, j);\n          const currentCellElm = currentCell.element;\n          const isToReplace = comparator(currentCellElm, target);\n          if (isToReplace && !first) {\n            mutateCell(row, j, elementnew(substitution(), true, currentCell.isLocked));\n          } else if (isToReplace) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    const uniqueCells = (row, comparator) => {\n      return foldl(row, (rest, cell) => {\n        return exists(rest, currentCell => {\n          return comparator(currentCell.element, cell.element);\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    const splitCols = (grid, index, comparator, substitution) => {\n      if (index > 0 && index < grid[0].cells.length) {\n        each$2(grid, row => {\n          const prevCell = row.cells[index - 1];\n          let offset = 0;\n          const substitute = substitution();\n          while (row.cells.length > index + offset && comparator(prevCell.element, row.cells[index + offset].element)) {\n            mutateCell(row, index + offset, elementnew(substitute, true, row.cells[index + offset].isLocked));\n            offset++;\n          }\n        });\n      }\n      return grid;\n    };\n    const splitRows = (grid, index, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      if (index > 0 && index < rows.length) {\n        const rowPrevCells = rows[index - 1].cells;\n        const cells = uniqueCells(rowPrevCells, comparator);\n        each$2(cells, cell => {\n          let replacement = Optional.none();\n          for (let i = index; i < rows.length; i++) {\n            for (let j = 0; j < cellLength(rows[0]); j++) {\n              const row = rows[i];\n              const current = getCell(row, j);\n              const isToReplace = comparator(current.element, cell.element);\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Optional.some(substitution());\n                }\n                replacement.each(sub => {\n                  mutateCell(row, j, elementnew(sub, true, current.isLocked));\n                });\n              }\n            }\n          }\n        });\n      }\n      return grid;\n    };\n\n    const value$1 = value => {\n      const applyHelper = fn => fn(value);\n      const constHelper = constant(value);\n      const outputHelper = () => output;\n      const output = {\n        tag: true,\n        inner: value,\n        fold: (_onError, onValue) => onValue(value),\n        isValue: always,\n        isError: never,\n        map: mapper => Result.value(mapper(value)),\n        mapError: outputHelper,\n        bind: applyHelper,\n        exists: applyHelper,\n        forall: applyHelper,\n        getOr: constHelper,\n        or: outputHelper,\n        getOrThunk: constHelper,\n        orThunk: outputHelper,\n        getOrDie: constHelper,\n        each: fn => {\n          fn(value);\n        },\n        toOptional: () => Optional.some(value)\n      };\n      return output;\n    };\n    const error = error => {\n      const outputHelper = () => output;\n      const output = {\n        tag: false,\n        inner: error,\n        fold: (onError, _onValue) => onError(error),\n        isValue: never,\n        isError: always,\n        map: outputHelper,\n        mapError: mapper => Result.error(mapper(error)),\n        bind: outputHelper,\n        exists: never,\n        forall: always,\n        getOr: identity,\n        or: identity,\n        getOrThunk: apply,\n        orThunk: apply,\n        getOrDie: die(String(error)),\n        each: noop,\n        toOptional: Optional.none\n      };\n      return output;\n    };\n    const fromOption = (optional, err) => optional.fold(() => error(err), value$1);\n    const Result = {\n      value: value$1,\n      error,\n      fromOption\n    };\n\n    const measure = (startAddress, gridA, gridB) => {\n      if (startAddress.row >= gridA.length || startAddress.column > cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row + ', column: ' + startAddress.column);\n      }\n      const rowRemainder = gridA.slice(startAddress.row);\n      const colRemainder = rowRemainder[0].cells.slice(startAddress.column);\n      const colRequired = cellLength(gridB[0]);\n      const rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: rowRemainder.length - rowRequired,\n        colDelta: colRemainder.length - colRequired\n      });\n    };\n    const measureWidth = (gridA, gridB) => {\n      const colLengthA = cellLength(gridA[0]);\n      const colLengthB = cellLength(gridB[0]);\n      return {\n        rowDelta: 0,\n        colDelta: colLengthA - colLengthB\n      };\n    };\n    const measureHeight = (gridA, gridB) => {\n      const rowLengthA = gridA.length;\n      const rowLengthB = gridB.length;\n      return {\n        rowDelta: rowLengthA - rowLengthB,\n        colDelta: 0\n      };\n    };\n    const generateElements = (amount, row, generators, isLocked) => {\n      const generator = row.section === 'colgroup' ? generators.col : generators.cell;\n      return range$1(amount, idx => elementnew(generator(), true, isLocked(idx)));\n    };\n    const rowFill = (grid, amount, generators, lockedColumns) => {\n      const exampleRow = grid[grid.length - 1];\n      return grid.concat(range$1(amount, () => {\n        const generator = exampleRow.section === 'colgroup' ? generators.colgroup : generators.row;\n        const row = clone(exampleRow, generator, identity);\n        const elements = generateElements(row.cells.length, row, generators, idx => has$1(lockedColumns, idx.toString()));\n        return setCells(row, elements);\n      }));\n    };\n    const colFill = (grid, amount, generators, startIndex) => map$1(grid, row => {\n      const newChildren = generateElements(amount, row, generators, never);\n      return addCells(row, startIndex, newChildren);\n    });\n    const lockedColFill = (grid, generators, lockedColumns) => map$1(grid, row => {\n      return foldl(lockedColumns, (acc, colNum) => {\n        const newChild = generateElements(1, row, generators, always)[0];\n        return addCell(acc, colNum, newChild);\n      }, row);\n    });\n    const tailor = (gridA, delta, generators) => {\n      const fillCols = delta.colDelta < 0 ? colFill : identity;\n      const fillRows = delta.rowDelta < 0 ? rowFill : identity;\n      const lockedColumns = getLockedColumnsFromGrid(gridA);\n      const gridWidth = cellLength(gridA[0]);\n      const isLastColLocked = exists(lockedColumns, locked => locked === gridWidth - 1);\n      const modifiedCols = fillCols(gridA, Math.abs(delta.colDelta), generators, isLastColLocked ? gridWidth - 1 : gridWidth);\n      const newLockedColumns = getLockedColumnsFromGrid(modifiedCols);\n      return fillRows(modifiedCols, Math.abs(delta.rowDelta), generators, mapToObject(newLockedColumns, always));\n    };\n\n    const isSpanning = (grid, row, col, comparator) => {\n      const candidate = getCell(grid[row], col);\n      const matching = curry(comparator, candidate.element);\n      const currentRow = grid[row];\n      return grid.length > 1 && cellLength(currentRow) > 1 && (col > 0 && matching(getCellElement(currentRow, col - 1)) || col < currentRow.cells.length - 1 && matching(getCellElement(currentRow, col + 1)) || row > 0 && matching(getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(getCellElement(grid[row + 1], col)));\n    };\n    const mergeTables = (startAddress, gridA, gridBRows, generator, comparator, lockedColumns) => {\n      const startRow = startAddress.row;\n      const startCol = startAddress.column;\n      const mergeHeight = gridBRows.length;\n      const mergeWidth = cellLength(gridBRows[0]);\n      const endRow = startRow + mergeHeight;\n      const endCol = startCol + mergeWidth + lockedColumns.length;\n      const lockedColumnObj = mapToObject(lockedColumns, always);\n      for (let r = startRow; r < endRow; r++) {\n        let skippedCol = 0;\n        for (let c = startCol; c < endCol; c++) {\n          if (lockedColumnObj[c]) {\n            skippedCol++;\n            continue;\n          }\n          if (isSpanning(gridA, r, c, comparator)) {\n            unmerge(gridA, getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          const gridBColIndex = c - startCol - skippedCol;\n          const newCell = getCell(gridBRows[r - startRow], gridBColIndex);\n          const newCellElm = newCell.element;\n          const replacement = generator.replace(newCellElm);\n          mutateCell(gridA[r], c, elementnew(replacement, true, newCell.isLocked));\n        }\n      }\n      return gridA;\n    };\n    const getValidStartAddress = (currentStartAddress, grid, lockedColumns) => {\n      const gridColLength = cellLength(grid[0]);\n      const adjustedRowAddress = extractGridDetails(grid).cols.length + currentStartAddress.row;\n      const possibleColAddresses = range$1(gridColLength - currentStartAddress.column, num => num + currentStartAddress.column);\n      const validColAddress = find$1(possibleColAddresses, num => forall(lockedColumns, col => col !== num)).getOr(gridColLength - 1);\n      return {\n        row: adjustedRowAddress,\n        column: validColAddress\n      };\n    };\n    const getLockedColumnsWithinBounds = (startAddress, rows, lockedColumns) => filter$2(lockedColumns, colNum => colNum >= startAddress.column && colNum <= cellLength(rows[0]) + startAddress.column);\n    const merge$1 = (startAddress, gridA, gridB, generator, comparator) => {\n      const lockedColumns = getLockedColumnsFromGrid(gridA);\n      const validStartAddress = getValidStartAddress(startAddress, gridA, lockedColumns);\n      const gridBRows = extractGridDetails(gridB).rows;\n      const lockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, lockedColumns);\n      const result = measure(validStartAddress, gridA, gridBRows);\n      return result.map(diff => {\n        const delta = {\n          ...diff,\n          colDelta: diff.colDelta - lockedColumnsWithinBounds.length\n        };\n        const fittedGrid = tailor(gridA, delta, generator);\n        const newLockedColumns = getLockedColumnsFromGrid(fittedGrid);\n        const newLockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, newLockedColumns);\n        return mergeTables(validStartAddress, fittedGrid, gridBRows, generator, comparator, newLockedColumnsWithinBounds);\n      });\n    };\n    const insertCols = (index, gridA, gridB, generator, comparator) => {\n      splitCols(gridA, index, comparator, generator.cell);\n      const delta = measureHeight(gridB, gridA);\n      const fittedNewGrid = tailor(gridB, delta, generator);\n      const secondDelta = measureHeight(gridA, fittedNewGrid);\n      const fittedOldGrid = tailor(gridA, secondDelta, generator);\n      return map$1(fittedOldGrid, (gridRow, i) => {\n        return addCells(gridRow, index, fittedNewGrid[i].cells);\n      });\n    };\n    const insertRows = (index, gridA, gridB, generator, comparator) => {\n      splitRows(gridA, index, comparator, generator.cell);\n      const locked = getLockedColumnsFromGrid(gridA);\n      const diff = measureWidth(gridA, gridB);\n      const delta = {\n        ...diff,\n        colDelta: diff.colDelta - locked.length\n      };\n      const fittedOldGrid = tailor(gridA, delta, generator);\n      const {\n        cols: oldCols,\n        rows: oldRows\n      } = extractGridDetails(fittedOldGrid);\n      const newLocked = getLockedColumnsFromGrid(fittedOldGrid);\n      const secondDiff = measureWidth(gridB, gridA);\n      const secondDelta = {\n        ...secondDiff,\n        colDelta: secondDiff.colDelta + newLocked.length\n      };\n      const fittedGridB = lockedColFill(gridB, generator, newLocked);\n      const fittedNewGrid = tailor(fittedGridB, secondDelta, generator);\n      return [\n        ...oldCols,\n        ...oldRows.slice(0, index),\n        ...fittedNewGrid,\n        ...oldRows.slice(index, oldRows.length)\n      ];\n    };\n\n    const cloneRow = (row, cloneCell, comparator, substitution) => clone(row, elem => substitution(elem, comparator), cloneCell);\n    const insertRowAt = (grid, index, example, comparator, substitution) => {\n      const {rows, cols} = extractGridDetails(grid);\n      const before = rows.slice(0, index);\n      const after = rows.slice(index);\n      const newRow = cloneRow(rows[example], (ex, c) => {\n        const withinSpan = index > 0 && index < rows.length && comparator(getCellElement(rows[index - 1], c), getCellElement(rows[index], c));\n        const ret = withinSpan ? getCell(rows[index], c) : elementnew(substitution(ex.element, comparator), true, ex.isLocked);\n        return ret;\n      }, comparator, substitution);\n      return [\n        ...cols,\n        ...before,\n        newRow,\n        ...after\n      ];\n    };\n    const getElementFor = (row, column, section, withinSpan, example, comparator, substitution) => {\n      if (section === 'colgroup' || !withinSpan) {\n        const cell = getCell(row, example);\n        return elementnew(substitution(cell.element, comparator), true, false);\n      } else {\n        return getCell(row, column);\n      }\n    };\n    const insertColumnAt = (grid, index, example, comparator, substitution) => map$1(grid, row => {\n      const withinSpan = index > 0 && index < cellLength(row) && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n      const sub = getElementFor(row, index, row.section, withinSpan, example, comparator, substitution);\n      return addCell(row, index, sub);\n    });\n    const deleteColumnsAt = (grid, columns) => bind$2(grid, row => {\n      const existingCells = row.cells;\n      const cells = foldr(columns, (acc, column) => column >= 0 && column < acc.length ? acc.slice(0, column).concat(acc.slice(column + 1)) : acc, existingCells);\n      return cells.length > 0 ? [rowcells(row.element, cells, row.section, row.isNew)] : [];\n    });\n    const deleteRowsAt = (grid, start, finish) => {\n      const {rows, cols} = extractGridDetails(grid);\n      return [\n        ...cols,\n        ...rows.slice(0, start),\n        ...rows.slice(finish + 1)\n      ];\n    };\n\n    const notInStartRow = (grid, rowIndex, colIndex, comparator) => getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(getCellElement(grid[rowIndex - 1], colIndex), getCellElement(grid[rowIndex], colIndex)));\n    const notInStartColumn = (row, index, comparator) => index > 0 && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n    const isDuplicatedCell = (grid, rowIndex, colIndex, comparator) => notInStartRow(grid, rowIndex, colIndex, comparator) || notInStartColumn(grid[rowIndex], colIndex, comparator);\n    const rowReplacerPredicate = (targetRow, columnHeaders) => {\n      const entireTableIsHeader = forall(columnHeaders, identity) && isHeaderCells(targetRow.cells);\n      return entireTableIsHeader ? always : (cell, _rowIndex, colIndex) => {\n        const type = name(cell.element);\n        return !(type === 'th' && columnHeaders[colIndex]);\n      };\n    };\n    const columnReplacePredicate = (targetColumn, rowHeaders) => {\n      const entireTableIsHeader = forall(rowHeaders, identity) && isHeaderCells(targetColumn);\n      return entireTableIsHeader ? always : (cell, rowIndex, _colIndex) => {\n        const type = name(cell.element);\n        return !(type === 'th' && rowHeaders[rowIndex]);\n      };\n    };\n    const determineScope = (applyScope, cell, newScope, isInHeader) => {\n      const hasSpan = scope => scope === 'row' ? hasRowspan(cell) : hasColspan(cell);\n      const getScope = scope => hasSpan(scope) ? `${ scope }group` : scope;\n      if (applyScope) {\n        return isHeaderCell(cell) ? getScope(newScope) : null;\n      } else if (isInHeader && isHeaderCell(cell)) {\n        const oppositeScope = newScope === 'row' ? 'col' : 'row';\n        return getScope(oppositeScope);\n      } else {\n        return null;\n      }\n    };\n    const rowScopeGenerator = (applyScope, columnHeaders) => (cell, rowIndex, columnIndex) => Optional.some(determineScope(applyScope, cell.element, 'col', columnHeaders[columnIndex]));\n    const columnScopeGenerator = (applyScope, rowHeaders) => (cell, rowIndex) => Optional.some(determineScope(applyScope, cell.element, 'row', rowHeaders[rowIndex]));\n    const replace = (cell, comparator, substitute) => elementnew(substitute(cell.element, comparator), true, cell.isLocked);\n    const replaceIn = (grid, targets, comparator, substitute, replacer, genScope, shouldReplace) => {\n      const isTarget = cell => {\n        return exists(targets, target => {\n          return comparator(cell.element, target.element);\n        });\n      };\n      return map$1(grid, (row, rowIndex) => {\n        return mapCells(row, (cell, colIndex) => {\n          if (isTarget(cell)) {\n            const newCell = shouldReplace(cell, rowIndex, colIndex) ? replacer(cell, comparator, substitute) : cell;\n            genScope(newCell, rowIndex, colIndex).each(scope => {\n              setOptions(newCell.element, { scope: Optional.from(scope) });\n            });\n            return newCell;\n          } else {\n            return cell;\n          }\n        });\n      });\n    };\n    const getColumnCells = (rows, columnIndex, comparator) => bind$2(rows, (row, i) => {\n      return isDuplicatedCell(rows, i, columnIndex, comparator) ? [] : [getCell(row, columnIndex)];\n    });\n    const getRowCells = (rows, rowIndex, comparator) => {\n      const targetRow = rows[rowIndex];\n      return bind$2(targetRow.cells, (item, i) => {\n        return isDuplicatedCell(rows, rowIndex, i, comparator) ? [] : [item];\n      });\n    };\n    const replaceColumns = (grid, indexes, applyScope, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      const targets = bind$2(indexes, index => getColumnCells(rows, index, comparator));\n      const rowHeaders = map$1(rows, row => isHeaderCells(row.cells));\n      const shouldReplaceCell = columnReplacePredicate(targets, rowHeaders);\n      const scopeGenerator = columnScopeGenerator(applyScope, rowHeaders);\n      return replaceIn(grid, targets, comparator, substitution, replace, scopeGenerator, shouldReplaceCell);\n    };\n    const replaceRows = (grid, indexes, section, applyScope, comparator, substitution, tableSection) => {\n      const {cols, rows} = extractGridDetails(grid);\n      const targetRow = rows[indexes[0]];\n      const targets = bind$2(indexes, index => getRowCells(rows, index, comparator));\n      const columnHeaders = map$1(targetRow.cells, (_cell, index) => isHeaderCells(getColumnCells(rows, index, comparator)));\n      const newRows = [...rows];\n      each$2(indexes, index => {\n        newRows[index] = tableSection.transformRow(rows[index], section);\n      });\n      const newGrid = [\n        ...cols,\n        ...newRows\n      ];\n      const shouldReplaceCell = rowReplacerPredicate(targetRow, columnHeaders);\n      const scopeGenerator = rowScopeGenerator(applyScope, columnHeaders);\n      return replaceIn(newGrid, targets, comparator, substitution, tableSection.transformCell, scopeGenerator, shouldReplaceCell);\n    };\n    const replaceCells = (grid, details, comparator, substitution) => {\n      const rows = extractGridDetails(grid).rows;\n      const targetCells = map$1(details, detail => getCell(rows[detail.row], detail.column));\n      return replaceIn(grid, targetCells, comparator, substitution, replace, Optional.none, always);\n    };\n\n    const generate = cases => {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      const constructors = [];\n      const adt = {};\n      each$2(cases, (acase, count) => {\n        const keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        const key = keys$1[0];\n        const value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = (...args) => {\n          const argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          const match = branches => {\n            const branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            const allReqd = forall(constructors, reqKey => {\n              return contains$2(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: (...foldArgs) => {\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              const target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match,\n            log: label => {\n              console.log(label, {\n                constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    const Adt = { generate };\n\n    const adt$6 = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    const ColumnContext = { ...adt$6 };\n\n    const neighbours = (input, index) => {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    const determine = (input, column, step, tableSize, resize) => {\n      const result = input.slice(0);\n      const context = neighbours(input, column);\n      const onNone = constant(map$1(result, constant(0)));\n      const onOnly = index => tableSize.singleColumnWidth(result[index], step);\n      const onLeft = (index, next) => resize.calcLeftEdgeDeltas(result, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      const onMiddle = (prev, index, next) => resize.calcMiddleDeltas(result, prev, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      const onRight = (prev, index) => resize.calcRightEdgeDeltas(result, prev, index, step, tableSize.minCellWidth(), tableSize.isRelative);\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n\n    const total = (start, end, measures) => {\n      let r = 0;\n      for (let i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    const recalculateWidthForCells = (warehouse, widths) => {\n      const all = Warehouse.justCells(warehouse);\n      return map$1(all, cell => {\n        const width = total(cell.column, cell.column + cell.colspan, widths);\n        return {\n          element: cell.element,\n          width,\n          colspan: cell.colspan\n        };\n      });\n    };\n    const recalculateWidthForColumns = (warehouse, widths) => {\n      const groups = Warehouse.justColumns(warehouse);\n      return map$1(groups, (column, index) => ({\n        element: column.element,\n        width: widths[index],\n        colspan: column.colspan\n      }));\n    };\n    const recalculateHeightForCells = (warehouse, heights) => {\n      const all = Warehouse.justCells(warehouse);\n      return map$1(all, cell => {\n        const height = total(cell.row, cell.row + cell.rowspan, heights);\n        return {\n          element: cell.element,\n          height,\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    const matchRowHeight = (warehouse, heights) => {\n      return map$1(warehouse.all, (row, i) => {\n        return {\n          element: row.element,\n          height: heights[i]\n        };\n      });\n    };\n\n    const sumUp = newSize => foldr(newSize, (b, a) => b + a, 0);\n    const recalculate = (warehouse, widths) => {\n      if (Warehouse.hasColumns(warehouse)) {\n        return recalculateWidthForColumns(warehouse, widths);\n      } else {\n        return recalculateWidthForCells(warehouse, widths);\n      }\n    };\n    const recalculateAndApply = (warehouse, widths, tableSize) => {\n      const newSizes = recalculate(warehouse, widths);\n      each$2(newSizes, cell => {\n        tableSize.setElementWidth(cell.element, cell.width);\n      });\n    };\n    const adjustWidth = (table, delta, index, resizing, tableSize) => {\n      const warehouse = Warehouse.fromTable(table);\n      const step = tableSize.getCellDelta(delta);\n      const widths = tableSize.getWidths(warehouse, tableSize);\n      const isLastColumn = index === warehouse.grid.columns - 1;\n      const clampedStep = resizing.clampTableDelta(widths, index, step, tableSize.minCellWidth(), isLastColumn);\n      const deltas = determine(widths, index, clampedStep, tableSize, resizing);\n      const newWidths = map$1(deltas, (dx, i) => dx + widths[i]);\n      recalculateAndApply(warehouse, newWidths, tableSize);\n      resizing.resizeTable(tableSize.adjustTableWidth, clampedStep, isLastColumn);\n    };\n    const adjustHeight = (table, delta, index, direction) => {\n      const warehouse = Warehouse.fromTable(table);\n      const heights = getPixelHeights(warehouse, table, direction);\n      const newHeights = map$1(heights, (dy, i) => index === i ? Math.max(delta + dy, minHeight()) : dy);\n      const newCellSizes = recalculateHeightForCells(warehouse, newHeights);\n      const newRowSizes = matchRowHeight(warehouse, newHeights);\n      each$2(newRowSizes, row => {\n        setHeight(row.element, row.height);\n      });\n      each$2(newCellSizes, cell => {\n        setHeight(cell.element, cell.height);\n      });\n      const total = sumUp(newHeights);\n      setHeight(table, total);\n    };\n    const adjustAndRedistributeWidths$1 = (_table, list, details, tableSize, resizeBehaviour) => {\n      const warehouse = Warehouse.generate(list);\n      const sizes = tableSize.getWidths(warehouse, tableSize);\n      const tablePixelWidth = tableSize.pixelWidth();\n      const {newSizes, delta} = resizeBehaviour.calcRedestributedWidths(sizes, tablePixelWidth, details.pixelDelta, tableSize.isRelative);\n      recalculateAndApply(warehouse, newSizes, tableSize);\n      tableSize.adjustTableWidth(delta);\n    };\n    const adjustWidthTo = (_table, list, _info, tableSize) => {\n      const warehouse = Warehouse.generate(list);\n      const widths = tableSize.getWidths(warehouse, tableSize);\n      recalculateAndApply(warehouse, widths, tableSize);\n    };\n\n    const uniqueColumns = details => {\n      const uniqueCheck = (rest, detail) => {\n        const columnExists = exists(rest, currentDetail => currentDetail.column === detail.column);\n        return columnExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, uniqueCheck, []).sort((detailA, detailB) => detailA.column - detailB.column);\n    };\n\n    const isCol = isTag('col');\n    const isColgroup = isTag('colgroup');\n    const isRow$1 = element => name(element) === 'tr' || isColgroup(element);\n    const elementToData = element => {\n      const colspan = getAttrValue(element, 'colspan', 1);\n      const rowspan = getAttrValue(element, 'rowspan', 1);\n      return {\n        element,\n        colspan,\n        rowspan\n      };\n    };\n    const modification = (generators, toData = elementToData) => {\n      const nuCell = data => isCol(data.element) ? generators.col(data) : generators.cell(data);\n      const nuRow = data => isColgroup(data.element) ? generators.colgroup(data) : generators.row(data);\n      const add = element => {\n        if (isRow$1(element)) {\n          return nuRow({ element });\n        } else {\n          const cell = element;\n          const replacement = nuCell(toData(cell));\n          recent = Optional.some({\n            item: cell,\n            replacement\n          });\n          return replacement;\n        }\n      };\n      let recent = Optional.none();\n      const getOrInit = (element, comparator) => {\n        return recent.fold(() => {\n          return add(element);\n        }, p => {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return { getOrInit };\n    };\n    const transform$1 = tag => {\n      return generators => {\n        const list = [];\n        const find = (element, comparator) => {\n          return find$1(list, x => {\n            return comparator(x.item, element);\n          });\n        };\n        const makeNew = element => {\n          const attrs = tag === 'td' ? { scope: null } : {};\n          const cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          return cell;\n        };\n        const replaceOrInit = (element, comparator) => {\n          if (isRow$1(element) || isCol(element)) {\n            return element;\n          } else {\n            const cell = element;\n            return find(cell, comparator).fold(() => {\n              return makeNew(cell);\n            }, p => {\n              return comparator(element, p.item) ? p.sub : makeNew(cell);\n            });\n          }\n        };\n        return { replaceOrInit };\n      };\n    };\n    const getScopeAttribute = cell => getOpt(cell, 'scope').map(attribute => attribute.substr(0, 3));\n    const merging = generators => {\n      const unmerge = cell => {\n        const scope = getScopeAttribute(cell);\n        scope.each(attribute => set$2(cell, 'scope', attribute));\n        return () => {\n          const raw = generators.cell({\n            element: cell,\n            colspan: 1,\n            rowspan: 1\n          });\n          remove$5(raw, 'width');\n          remove$5(cell, 'width');\n          scope.each(attribute => set$2(raw, 'scope', attribute));\n          return raw;\n        };\n      };\n      const merge = cells => {\n        const getScopeProperty = () => {\n          const stringAttributes = cat(map$1(cells, getScopeAttribute));\n          if (stringAttributes.length === 0) {\n            return Optional.none();\n          } else {\n            const baseScope = stringAttributes[0];\n            const scopes = [\n              'row',\n              'col'\n            ];\n            const isMixed = exists(stringAttributes, attribute => {\n              return attribute !== baseScope && contains$2(scopes, attribute);\n            });\n            return isMixed ? Optional.none() : Optional.from(baseScope);\n          }\n        };\n        remove$5(cells[0], 'width');\n        getScopeProperty().fold(() => remove$7(cells[0], 'scope'), attribute => set$2(cells[0], 'scope', attribute + 'group'));\n        return constant(cells[0]);\n      };\n      return {\n        unmerge,\n        merge\n      };\n    };\n    const Generators = {\n      modification,\n      transform: transform$1,\n      merging\n    };\n\n    const blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    const isList$1 = (universe, item) => {\n      const tagName = universe.property().name(item);\n      return contains$2([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    const isBlock$1 = (universe, item) => {\n      const tagName = universe.property().name(item);\n      return contains$2(blockList, tagName);\n    };\n    const isEmptyTag$1 = (universe, item) => {\n      return contains$2([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n\n    const universe$1 = DomUniverse();\n    const isBlock = element => {\n      return isBlock$1(universe$1, element);\n    };\n    const isList = element => {\n      return isList$1(universe$1, element);\n    };\n    const isEmptyTag = element => {\n      return isEmptyTag$1(universe$1, element);\n    };\n\n    const merge = cells => {\n      const isBr = isTag('br');\n      const advancedBr = children => {\n        return forall(children, c => {\n          return isBr(c) || isText(c) && get$6(c).trim().length === 0;\n        });\n      };\n      const isListItem = el => {\n        return name(el) === 'li' || ancestor$2(el, isList).isSome();\n      };\n      const siblingIsBlock = el => {\n        return nextSibling(el).map(rightSibling => {\n          if (isBlock(rightSibling)) {\n            return true;\n          }\n          if (isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      const markCell = cell => {\n        return last$1(cell).bind(rightEdge => {\n          const rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(parent => {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || isBlock(parent) && !eq$1(cell, parent) ? [] : [SugarElement.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      const markContent = () => {\n        const content = bind$2(cells, cell => {\n          const children = children$2(cell);\n          return advancedBr(children) ? [] : children.concat(markCell(cell));\n        });\n        return content.length === 0 ? [SugarElement.fromTag('br')] : content;\n      };\n      const contents = markContent();\n      empty(cells[0]);\n      append(cells[0], contents);\n    };\n\n    const isEditable = elem => isEditable$1(elem, true);\n    const prune = table => {\n      const cells = cells$1(table);\n      if (cells.length === 0) {\n        remove$6(table);\n      }\n    };\n    const outcome = (grid, cursor) => ({\n      grid,\n      cursor\n    });\n    const findEditableCursorPosition = rows => findMap(rows, row => findMap(row.cells, cell => {\n      const elem = cell.element;\n      return someIf(isEditable(elem), elem);\n    }));\n    const elementFromGrid = (grid, row, column) => {\n      var _a, _b;\n      const rows = extractGridDetails(grid).rows;\n      return Optional.from((_b = (_a = rows[row]) === null || _a === void 0 ? void 0 : _a.cells[column]) === null || _b === void 0 ? void 0 : _b.element).filter(isEditable).orThunk(() => findEditableCursorPosition(rows));\n    };\n    const bundle = (grid, row, column) => {\n      const cursorElement = elementFromGrid(grid, row, column);\n      return outcome(grid, cursorElement);\n    };\n    const uniqueRows = details => {\n      const rowCompilation = (rest, detail) => {\n        const rowExists = exists(rest, currentDetail => currentDetail.row === detail.row);\n        return rowExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, rowCompilation, []).sort((detailA, detailB) => detailA.row - detailB.row);\n    };\n    const opInsertRowsBefore = (grid, details, comparator, genWrappers) => {\n      const targetIndex = details[0].row;\n      const rows = uniqueRows(details);\n      const newGrid = foldr(rows, (acc, row) => {\n        const newG = insertRowAt(acc.grid, targetIndex, row.row + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    const opInsertRowsAfter = (grid, details, comparator, genWrappers) => {\n      const rows = uniqueRows(details);\n      const target = rows[rows.length - 1];\n      const targetIndex = target.row + target.rowspan;\n      const newGrid = foldr(rows, (newG, row) => {\n        return insertRowAt(newG, targetIndex, row.row, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    const opInsertColumnsBefore = (grid, extractDetail, comparator, genWrappers) => {\n      const details = extractDetail.details;\n      const columns = uniqueColumns(details);\n      const targetIndex = columns[0].column;\n      const newGrid = foldr(columns, (acc, col) => {\n        const newG = insertColumnAt(acc.grid, targetIndex, col.column + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    const opInsertColumnsAfter = (grid, extractDetail, comparator, genWrappers) => {\n      const details = extractDetail.details;\n      const target = details[details.length - 1];\n      const targetIndex = target.column + target.colspan;\n      const columns = uniqueColumns(details);\n      const newGrid = foldr(columns, (newG, col) => {\n        return insertColumnAt(newG, targetIndex, col.column, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    const opMakeColumnsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const columns = uniqueColumns(details);\n      const columnIndexes = map$1(columns, detail => detail.column);\n      const newGrid = replaceColumns(initialGrid, columnIndexes, true, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opMakeCellsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opUnmakeColumnsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const columns = uniqueColumns(details);\n      const columnIndexes = map$1(columns, detail => detail.column);\n      const newGrid = replaceColumns(initialGrid, columnIndexes, false, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opUnmakeCellsHeader = (initialGrid, details, comparator, genWrappers) => {\n      const newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const makeRowsSection = (section, applyScope) => (initialGrid, details, comparator, genWrappers, tableSection) => {\n      const rows = uniqueRows(details);\n      const rowIndexes = map$1(rows, detail => detail.row);\n      const newGrid = replaceRows(initialGrid, rowIndexes, section, applyScope, comparator, genWrappers.replaceOrInit, tableSection);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    const opMakeRowsHeader = makeRowsSection('thead', true);\n    const opMakeRowsBody = makeRowsSection('tbody', false);\n    const opMakeRowsFooter = makeRowsSection('tfoot', false);\n    const opEraseColumns = (grid, extractDetail, _comparator, _genWrappers) => {\n      const columns = uniqueColumns(extractDetail.details);\n      const newGrid = deleteColumnsAt(grid, map$1(columns, column => column.column));\n      const maxColIndex = newGrid.length > 0 ? newGrid[0].cells.length - 1 : 0;\n      return bundle(newGrid, columns[0].row, Math.min(columns[0].column, maxColIndex));\n    };\n    const opEraseRows = (grid, details, _comparator, _genWrappers) => {\n      const rows = uniqueRows(details);\n      const newGrid = deleteRowsAt(grid, rows[0].row, rows[rows.length - 1].row);\n      const maxRowIndex = newGrid.length > 0 ? newGrid.length - 1 : 0;\n      return bundle(newGrid, Math.min(details[0].row, maxRowIndex), details[0].column);\n    };\n    const opMergeCells = (grid, mergable, comparator, genWrappers) => {\n      const cells = mergable.cells;\n      merge(cells);\n      const newGrid = merge$2(grid, mergable.bounds, comparator, genWrappers.merge(cells));\n      return outcome(newGrid, Optional.from(cells[0]));\n    };\n    const opUnmergeCells = (grid, unmergable, comparator, genWrappers) => {\n      const unmerge$1 = (b, cell) => unmerge(b, cell, comparator, genWrappers.unmerge(cell));\n      const newGrid = foldr(unmergable, unmerge$1, grid);\n      return outcome(newGrid, Optional.from(unmergable[0]));\n    };\n    const opPasteCells = (grid, pasteDetails, comparator, _genWrappers) => {\n      const gridify = (table, generators) => {\n        const wh = Warehouse.fromTable(table);\n        return toGrid(wh, generators, true);\n      };\n      const gridB = gridify(pasteDetails.clipboard, pasteDetails.generators);\n      const startAddress = address(pasteDetails.row, pasteDetails.column);\n      const mergedGrid = merge$1(startAddress, grid, gridB, pasteDetails.generators, comparator);\n      return mergedGrid.fold(() => outcome(grid, Optional.some(pasteDetails.element)), newGrid => {\n        return bundle(newGrid, pasteDetails.row, pasteDetails.column);\n      });\n    };\n    const gridifyRows = (rows, generators, context) => {\n      const pasteDetails = fromPastedRows(rows, context.section);\n      const wh = Warehouse.generate(pasteDetails);\n      return toGrid(wh, generators, true);\n    };\n    const opPasteColsBefore = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[0].column;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteColsAfter = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[pasteDetails.cells.length - 1].column + pasteDetails.cells[pasteDetails.cells.length - 1].colspan;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteRowsBefore = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[0].row;\n      const context = rows[index];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opPasteRowsAfter = (grid, pasteDetails, comparator, _genWrappers) => {\n      const rows = extractGridDetails(grid).rows;\n      const index = pasteDetails.cells[pasteDetails.cells.length - 1].row + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan;\n      const context = rows[pasteDetails.cells[0].row];\n      const gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      const mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    const opGetColumnsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minColRange = selectedCells[0].column;\n        const maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        const selectedColumnCells = flatten(map$1(house.all, row => filter$2(row.cells, cell => cell.column >= minColRange && cell.column < maxColRange)));\n        return findCommonCellType(selectedColumnCells);\n      }).getOr('');\n    };\n    const opGetCellsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(findCommonCellType).getOr('');\n    };\n    const opGetRowsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minRowRange = selectedCells[0].row;\n        const maxRowRange = lastSelectedCell.row + lastSelectedCell.rowspan;\n        const selectedRows = house.all.slice(minRowRange, maxRowRange);\n        return findCommonRowType(selectedRows);\n      }).getOr('');\n    };\n    const resize = (table, list, details, behaviours) => adjustWidthTo(table, list, details, behaviours.sizing);\n    const adjustAndRedistributeWidths = (table, list, details, behaviours) => adjustAndRedistributeWidths$1(table, list, details, behaviours.sizing, behaviours.resize);\n    const firstColumnIsLocked = (_warehouse, details) => exists(details, detail => detail.column === 0 && detail.isLocked);\n    const lastColumnIsLocked = (warehouse, details) => exists(details, detail => detail.column + detail.colspan >= warehouse.grid.columns && detail.isLocked);\n    const getColumnsWidth = (warehouse, details) => {\n      const columns$1 = columns(warehouse);\n      const uniqueCols = uniqueColumns(details);\n      return foldl(uniqueCols, (acc, detail) => {\n        const column = columns$1[detail.column];\n        const colWidth = column.map(getOuter$2).getOr(0);\n        return acc + colWidth;\n      }, 0);\n    };\n    const insertColumnsExtractor = before => (warehouse, target) => onCells(warehouse, target).filter(details => {\n      const checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n      return !checkLocked(warehouse, details);\n    }).map(details => ({\n      details,\n      pixelDelta: getColumnsWidth(warehouse, details)\n    }));\n    const eraseColumnsExtractor = (warehouse, target) => onUnlockedCells(warehouse, target).map(details => ({\n      details,\n      pixelDelta: -getColumnsWidth(warehouse, details)\n    }));\n    const pasteColumnsExtractor = before => (warehouse, target) => onPasteByEditor(warehouse, target).filter(details => {\n      const checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n      return !checkLocked(warehouse, details.cells);\n    });\n    const headerCellGenerator = Generators.transform('th');\n    const bodyCellGenerator = Generators.transform('td');\n    const insertRowsBefore = run(opInsertRowsBefore, onCells, noop, noop, Generators.modification);\n    const insertRowsAfter = run(opInsertRowsAfter, onCells, noop, noop, Generators.modification);\n    const insertColumnsBefore = run(opInsertColumnsBefore, insertColumnsExtractor(true), adjustAndRedistributeWidths, noop, Generators.modification);\n    const insertColumnsAfter = run(opInsertColumnsAfter, insertColumnsExtractor(false), adjustAndRedistributeWidths, noop, Generators.modification);\n    const eraseColumns = run(opEraseColumns, eraseColumnsExtractor, adjustAndRedistributeWidths, prune, Generators.modification);\n    const eraseRows = run(opEraseRows, onCells, noop, prune, Generators.modification);\n    const makeColumnsHeader = run(opMakeColumnsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const unmakeColumnsHeader = run(opUnmakeColumnsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeRowsHeader = run(opMakeRowsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const makeRowsBody = run(opMakeRowsBody, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeRowsFooter = run(opMakeRowsFooter, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const makeCellsHeader = run(opMakeCellsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    const unmakeCellsHeader = run(opUnmakeCellsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    const mergeCells = run(opMergeCells, onUnlockedMergable, resize, noop, Generators.merging);\n    const unmergeCells = run(opUnmergeCells, onUnlockedUnmergable, resize, noop, Generators.merging);\n    const pasteCells = run(opPasteCells, onPaste, resize, noop, Generators.modification);\n    const pasteColsBefore = run(opPasteColsBefore, pasteColumnsExtractor(true), noop, noop, Generators.modification);\n    const pasteColsAfter = run(opPasteColsAfter, pasteColumnsExtractor(false), noop, noop, Generators.modification);\n    const pasteRowsBefore = run(opPasteRowsBefore, onPasteByEditor, noop, noop, Generators.modification);\n    const pasteRowsAfter = run(opPasteRowsAfter, onPasteByEditor, noop, noop, Generators.modification);\n    const getColumnsType = opGetColumnsType;\n    const getCellsType = opGetCellsType;\n    const getRowsType = opGetRowsType;\n\n    const fireNewRow = (editor, row) => editor.dispatch('NewRow', { node: row });\n    const fireNewCell = (editor, cell) => editor.dispatch('NewCell', { node: cell });\n    const fireTableModified = (editor, table, data) => {\n      editor.dispatch('TableModified', {\n        ...data,\n        table\n      });\n    };\n    const fireTableSelectionChange = (editor, cells, start, finish, otherCells) => {\n      editor.dispatch('TableSelectionChange', {\n        cells,\n        start,\n        finish,\n        otherCells\n      });\n    };\n    const fireTableSelectionClear = editor => {\n      editor.dispatch('TableSelectionClear');\n    };\n    const fireObjectResizeStart = (editor, target, width, height, origin) => {\n      editor.dispatch('ObjectResizeStart', {\n        target,\n        width,\n        height,\n        origin\n      });\n    };\n    const fireObjectResized = (editor, target, width, height, origin) => {\n      editor.dispatch('ObjectResized', {\n        target,\n        width,\n        height,\n        origin\n      });\n    };\n    const styleModified = {\n      structure: false,\n      style: true\n    };\n    const structureModified = {\n      structure: true,\n      style: false\n    };\n    const styleAndStructureModified = {\n      structure: true,\n      style: true\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const defaultWidth = '100%';\n    const getPixelForcedWidth = editor => {\n      var _a;\n      const dom = editor.dom;\n      const parentBlock = (_a = dom.getParent(editor.selection.getStart(), dom.isBlock)) !== null && _a !== void 0 ? _a : editor.getBody();\n      return getInner(SugarElement.fromDom(parentBlock)) + 'px';\n    };\n    const determineDefaultTableStyles = (editor, defaultStyles) => {\n      if (isTableResponsiveForced(editor) || !shouldStyleWithCss(editor)) {\n        return defaultStyles;\n      } else if (isTablePixelsForced(editor)) {\n        return {\n          ...defaultStyles,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultStyles,\n          width: defaultWidth\n        };\n      }\n    };\n    const determineDefaultTableAttributes = (editor, defaultAttributes) => {\n      if (isTableResponsiveForced(editor) || shouldStyleWithCss(editor)) {\n        return defaultAttributes;\n      } else if (isTablePixelsForced(editor)) {\n        return {\n          ...defaultAttributes,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultAttributes,\n          width: defaultWidth\n        };\n      }\n    };\n    const register = editor => {\n      const registerOption = editor.options.register;\n      registerOption('table_clone_elements', { processor: 'string[]' });\n      registerOption('table_use_colgroups', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_header_type', {\n        processor: value => {\n          const valid = contains$2([\n            'section',\n            'cells',\n            'sectionCells',\n            'auto'\n          ], value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be one of: section, cells, sectionCells or auto.'\n          };\n        },\n        default: 'section'\n      });\n      registerOption('table_sizing_mode', {\n        processor: 'string',\n        default: 'auto'\n      });\n      registerOption('table_default_attributes', {\n        processor: 'object',\n        default: { border: '1' }\n      });\n      registerOption('table_default_styles', {\n        processor: 'object',\n        default: { 'border-collapse': 'collapse' }\n      });\n      registerOption('table_column_resizing', {\n        processor: value => {\n          const valid = contains$2([\n            'preservetable',\n            'resizetable'\n          ], value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be preservetable, or resizetable.'\n          };\n        },\n        default: 'preservetable'\n      });\n      registerOption('table_resize_bars', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_style_by_css', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const getTableCloneElements = editor => {\n      return Optional.from(editor.options.get('table_clone_elements'));\n    };\n    const hasTableObjectResizing = editor => {\n      const objectResizing = editor.options.get('object_resizing');\n      return contains$2(objectResizing.split(','), 'table');\n    };\n    const getTableHeaderType = option('table_header_type');\n    const getTableColumnResizingBehaviour = option('table_column_resizing');\n    const isPreserveTableColumnResizing = editor => getTableColumnResizingBehaviour(editor) === 'preservetable';\n    const isResizeTableColumnResizing = editor => getTableColumnResizingBehaviour(editor) === 'resizetable';\n    const getTableSizingMode = option('table_sizing_mode');\n    const isTablePercentagesForced = editor => getTableSizingMode(editor) === 'relative';\n    const isTablePixelsForced = editor => getTableSizingMode(editor) === 'fixed';\n    const isTableResponsiveForced = editor => getTableSizingMode(editor) === 'responsive';\n    const hasTableResizeBars = option('table_resize_bars');\n    const shouldStyleWithCss = option('table_style_by_css');\n    const getTableDefaultAttributes = editor => {\n      const options = editor.options;\n      const defaultAttributes = options.get('table_default_attributes');\n      return options.isSet('table_default_attributes') ? defaultAttributes : determineDefaultTableAttributes(editor, defaultAttributes);\n    };\n    const getTableDefaultStyles = editor => {\n      const options = editor.options;\n      const defaultStyles = options.get('table_default_styles');\n      return options.isSet('table_default_styles') ? defaultStyles : determineDefaultTableStyles(editor, defaultStyles);\n    };\n    const tableUseColumnGroup = option('table_use_colgroups');\n\n    const get$5 = (editor, table) => {\n      if (isTablePercentagesForced(editor)) {\n        return TableSize.percentageSize(table);\n      } else if (isTablePixelsForced(editor)) {\n        return TableSize.pixelSize(table);\n      } else {\n        return TableSize.getTableSize(table);\n      }\n    };\n\n    const TableActions = (editor, resizeHandler, cellSelectionHandler) => {\n      const isTableBody = editor => name(getBody(editor)) === 'table';\n      const lastRowGuard = table => !isTableBody(editor) || getGridSize(table).rows > 1;\n      const lastColumnGuard = table => !isTableBody(editor) || getGridSize(table).columns > 1;\n      const cloneFormats = getTableCloneElements(editor);\n      const colMutationOp = isResizeTableColumnResizing(editor) ? noop : halve;\n      const getTableSectionType = table => {\n        switch (getTableHeaderType(editor)) {\n        case 'section':\n          return TableSection.section();\n        case 'sectionCells':\n          return TableSection.sectionCells();\n        case 'cells':\n          return TableSection.cells();\n        default:\n          return TableSection.getTableSectionType(table, 'section');\n        }\n      };\n      const setSelectionFromAction = (table, result) => result.cursor.fold(() => {\n        const cells = cells$1(table);\n        return head(cells).filter(inBody).map(firstCell => {\n          cellSelectionHandler.clearSelectedCells(table.dom);\n          const rng = editor.dom.createRng();\n          rng.selectNode(firstCell.dom);\n          editor.selection.setRng(rng);\n          set$2(firstCell, 'data-mce-selected', '1');\n          return rng;\n        });\n      }, cell => {\n        const des = freefallRtl(cell);\n        const rng = editor.dom.createRng();\n        rng.setStart(des.element.dom, des.offset);\n        rng.setEnd(des.element.dom, des.offset);\n        editor.selection.setRng(rng);\n        cellSelectionHandler.clearSelectedCells(table.dom);\n        return Optional.some(rng);\n      });\n      const execute = (operation, guard, mutate, effect) => (table, target, noEvents = false) => {\n        removeDataStyle(table);\n        const doc = SugarElement.fromDom(editor.getDoc());\n        const generators = cellOperations(mutate, doc, cloneFormats);\n        const behaviours = {\n          sizing: get$5(editor, table),\n          resize: isResizeTableColumnResizing(editor) ? resizeTable() : preserveTable(),\n          section: getTableSectionType(table)\n        };\n        return guard(table) ? operation(table, target, generators, behaviours).bind(result => {\n          resizeHandler.refresh(table.dom);\n          each$2(result.newRows, row => {\n            fireNewRow(editor, row.dom);\n          });\n          each$2(result.newCells, cell => {\n            fireNewCell(editor, cell.dom);\n          });\n          const range = setSelectionFromAction(table, result);\n          if (inBody(table)) {\n            removeDataStyle(table);\n            if (!noEvents) {\n              fireTableModified(editor, table.dom, effect);\n            }\n          }\n          return range.map(rng => ({\n            rng,\n            effect\n          }));\n        }) : Optional.none();\n      };\n      const deleteRow = execute(eraseRows, lastRowGuard, noop, structureModified);\n      const deleteColumn = execute(eraseColumns, lastColumnGuard, noop, structureModified);\n      const insertRowsBefore$1 = execute(insertRowsBefore, always, noop, structureModified);\n      const insertRowsAfter$1 = execute(insertRowsAfter, always, noop, structureModified);\n      const insertColumnsBefore$1 = execute(insertColumnsBefore, always, colMutationOp, structureModified);\n      const insertColumnsAfter$1 = execute(insertColumnsAfter, always, colMutationOp, structureModified);\n      const mergeCells$1 = execute(mergeCells, always, noop, structureModified);\n      const unmergeCells$1 = execute(unmergeCells, always, noop, structureModified);\n      const pasteColsBefore$1 = execute(pasteColsBefore, always, noop, structureModified);\n      const pasteColsAfter$1 = execute(pasteColsAfter, always, noop, structureModified);\n      const pasteRowsBefore$1 = execute(pasteRowsBefore, always, noop, structureModified);\n      const pasteRowsAfter$1 = execute(pasteRowsAfter, always, noop, structureModified);\n      const pasteCells$1 = execute(pasteCells, always, noop, styleAndStructureModified);\n      const makeCellsHeader$1 = execute(makeCellsHeader, always, noop, structureModified);\n      const unmakeCellsHeader$1 = execute(unmakeCellsHeader, always, noop, structureModified);\n      const makeColumnsHeader$1 = execute(makeColumnsHeader, always, noop, structureModified);\n      const unmakeColumnsHeader$1 = execute(unmakeColumnsHeader, always, noop, structureModified);\n      const makeRowsHeader$1 = execute(makeRowsHeader, always, noop, structureModified);\n      const makeRowsBody$1 = execute(makeRowsBody, always, noop, structureModified);\n      const makeRowsFooter$1 = execute(makeRowsFooter, always, noop, structureModified);\n      const getTableCellType = getCellsType;\n      const getTableColType = getColumnsType;\n      const getTableRowType = getRowsType;\n      return {\n        deleteRow,\n        deleteColumn,\n        insertRowsBefore: insertRowsBefore$1,\n        insertRowsAfter: insertRowsAfter$1,\n        insertColumnsBefore: insertColumnsBefore$1,\n        insertColumnsAfter: insertColumnsAfter$1,\n        mergeCells: mergeCells$1,\n        unmergeCells: unmergeCells$1,\n        pasteColsBefore: pasteColsBefore$1,\n        pasteColsAfter: pasteColsAfter$1,\n        pasteRowsBefore: pasteRowsBefore$1,\n        pasteRowsAfter: pasteRowsAfter$1,\n        pasteCells: pasteCells$1,\n        makeCellsHeader: makeCellsHeader$1,\n        unmakeCellsHeader: unmakeCellsHeader$1,\n        makeColumnsHeader: makeColumnsHeader$1,\n        unmakeColumnsHeader: unmakeColumnsHeader$1,\n        makeRowsHeader: makeRowsHeader$1,\n        makeRowsBody: makeRowsBody$1,\n        makeRowsFooter: makeRowsFooter$1,\n        getTableRowType,\n        getTableCellType,\n        getTableColType\n      };\n    };\n\n    const constrainSpan = (element, property, value) => {\n      const currentColspan = getAttrValue(element, property, 1);\n      if (value === 1 || currentColspan <= 1) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, Math.min(value, currentColspan));\n      }\n    };\n    const isColInRange = (minColRange, maxColRange) => cell => {\n      const endCol = cell.column + cell.colspan - 1;\n      const startCol = cell.column;\n      return endCol >= minColRange && startCol < maxColRange;\n    };\n    const generateColGroup = (house, minColRange, maxColRange) => {\n      if (Warehouse.hasColumns(house)) {\n        const colsToCopy = filter$2(Warehouse.justColumns(house), isColInRange(minColRange, maxColRange));\n        const copiedCols = map$1(colsToCopy, c => {\n          const clonedCol = deep(c.element);\n          constrainSpan(clonedCol, 'span', maxColRange - minColRange);\n          return clonedCol;\n        });\n        const fakeColgroup = SugarElement.fromTag('colgroup');\n        append(fakeColgroup, copiedCols);\n        return [fakeColgroup];\n      } else {\n        return [];\n      }\n    };\n    const generateRows = (house, minColRange, maxColRange) => map$1(house.all, row => {\n      const cellsToCopy = filter$2(row.cells, isColInRange(minColRange, maxColRange));\n      const copiedCells = map$1(cellsToCopy, cell => {\n        const clonedCell = deep(cell.element);\n        constrainSpan(clonedCell, 'colspan', maxColRange - minColRange);\n        return clonedCell;\n      });\n      const fakeTR = SugarElement.fromTag('tr');\n      append(fakeTR, copiedCells);\n      return fakeTR;\n    });\n    const copyCols = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onUnlockedCells(house, target);\n      return details.map(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minColRange = selectedCells[0].column;\n        const maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        const fakeColGroups = generateColGroup(house, minColRange, maxColRange);\n        const fakeRows = generateRows(house, minColRange, maxColRange);\n        return [\n          ...fakeColGroups,\n          ...fakeRows\n        ];\n      });\n    };\n\n    const copyRows = (table, target, generators) => {\n      const warehouse = Warehouse.fromTable(table);\n      const details = onCells(warehouse, target);\n      return details.bind(selectedCells => {\n        const grid = toGrid(warehouse, generators, false);\n        const rows = extractGridDetails(grid).rows;\n        const slicedGrid = rows.slice(selectedCells[0].row, selectedCells[selectedCells.length - 1].row + selectedCells[selectedCells.length - 1].rowspan);\n        const filteredGrid = bind$2(slicedGrid, row => {\n          const newCells = filter$2(row.cells, cell => !cell.isLocked);\n          return newCells.length > 0 ? [{\n              ...row,\n              cells: newCells\n            }] : [];\n        });\n        const slicedDetails = toDetailList(filteredGrid);\n        return someIf(slicedDetails.length > 0, slicedDetails);\n      }).map(slicedDetails => copy(slicedDetails));\n    };\n\n    const adt$5 = Adt.generate([\n      { invalid: ['raw'] },\n      { pixels: ['value'] },\n      { percent: ['value'] }\n    ]);\n    const validateFor = (suffix, type, value) => {\n      const rawAmount = value.substring(0, value.length - suffix.length);\n      const amount = parseFloat(rawAmount);\n      return rawAmount === amount.toString() ? type(amount) : adt$5.invalid(value);\n    };\n    const from = value => {\n      if (endsWith(value, '%')) {\n        return validateFor('%', adt$5.percent, value);\n      }\n      if (endsWith(value, 'px')) {\n        return validateFor('px', adt$5.pixels, value);\n      }\n      return adt$5.invalid(value);\n    };\n    const Size = {\n      ...adt$5,\n      from\n    };\n\n    const redistributeToPercent = (widths, totalWidth) => {\n      return map$1(widths, w => {\n        const colType = Size.from(w);\n        return colType.fold(() => {\n          return w;\n        }, px => {\n          const ratio = px / totalWidth * 100;\n          return ratio + '%';\n        }, pc => {\n          return pc + '%';\n        });\n      });\n    };\n    const redistributeToPx = (widths, totalWidth, newTotalWidth) => {\n      const scale = newTotalWidth / totalWidth;\n      return map$1(widths, w => {\n        const colType = Size.from(w);\n        return colType.fold(() => {\n          return w;\n        }, px => {\n          return px * scale + 'px';\n        }, pc => {\n          return pc / 100 * newTotalWidth + 'px';\n        });\n      });\n    };\n    const redistributeEmpty = (newWidthType, columns) => {\n      const f = newWidthType.fold(() => constant(''), pixels => {\n        const num = pixels / columns;\n        return constant(num + 'px');\n      }, () => {\n        const num = 100 / columns;\n        return constant(num + '%');\n      });\n      return range$1(columns, f);\n    };\n    const redistributeValues = (newWidthType, widths, totalWidth) => {\n      return newWidthType.fold(() => {\n        return widths;\n      }, px => {\n        return redistributeToPx(widths, totalWidth, px);\n      }, _pc => {\n        return redistributeToPercent(widths, totalWidth);\n      });\n    };\n    const redistribute$1 = (widths, totalWidth, newWidth) => {\n      const newType = Size.from(newWidth);\n      const floats = forall(widths, s => {\n        return s === '0px';\n      }) ? redistributeEmpty(newType, widths.length) : redistributeValues(newType, widths, totalWidth);\n      return normalize(floats);\n    };\n    const sum = (values, fallback) => {\n      if (values.length === 0) {\n        return fallback;\n      }\n      return foldr(values, (rest, v) => {\n        return Size.from(v).fold(constant(0), identity, identity) + rest;\n      }, 0);\n    };\n    const roundDown = (num, unit) => {\n      const floored = Math.floor(num);\n      return {\n        value: floored + unit,\n        remainder: num - floored\n      };\n    };\n    const add$3 = (value, amount) => {\n      return Size.from(value).fold(constant(value), px => {\n        return px + amount + 'px';\n      }, pc => {\n        return pc + amount + '%';\n      });\n    };\n    const normalize = values => {\n      if (values.length === 0) {\n        return values;\n      }\n      const scan = foldr(values, (rest, value) => {\n        const info = Size.from(value).fold(() => ({\n          value,\n          remainder: 0\n        }), num => roundDown(num, 'px'), num => ({\n          value: num + '%',\n          remainder: 0\n        }));\n        return {\n          output: [info.value].concat(rest.output),\n          remainder: rest.remainder + info.remainder\n        };\n      }, {\n        output: [],\n        remainder: 0\n      });\n      const r = scan.output;\n      return r.slice(0, r.length - 1).concat([add$3(r[r.length - 1], Math.round(scan.remainder))]);\n    };\n    const validate = Size.from;\n\n    const redistributeToW = (newWidths, cells, unit) => {\n      each$2(cells, cell => {\n        const widths = newWidths.slice(cell.column, cell.colspan + cell.column);\n        const w = sum(widths, minWidth());\n        set$1(cell.element, 'width', w + unit);\n      });\n    };\n    const redistributeToColumns = (newWidths, columns, unit) => {\n      each$2(columns, (column, index) => {\n        const width = sum([newWidths[index]], minWidth());\n        set$1(column.element, 'width', width + unit);\n      });\n    };\n    const redistributeToH = (newHeights, rows, cells, unit) => {\n      each$2(cells, cell => {\n        const heights = newHeights.slice(cell.row, cell.rowspan + cell.row);\n        const h = sum(heights, minHeight());\n        set$1(cell.element, 'height', h + unit);\n      });\n      each$2(rows, (row, i) => {\n        set$1(row.element, 'height', newHeights[i]);\n      });\n    };\n    const getUnit = newSize => {\n      return validate(newSize).fold(constant('px'), constant('px'), constant('%'));\n    };\n    const redistribute = (table, optWidth, optHeight) => {\n      const warehouse = Warehouse.fromTable(table);\n      const rows = warehouse.all;\n      const cells = Warehouse.justCells(warehouse);\n      const columns = Warehouse.justColumns(warehouse);\n      optWidth.each(newWidth => {\n        const widthUnit = getUnit(newWidth);\n        const totalWidth = get$9(table);\n        const oldWidths = getRawWidths(warehouse, table);\n        const nuWidths = redistribute$1(oldWidths, totalWidth, newWidth);\n        if (Warehouse.hasColumns(warehouse)) {\n          redistributeToColumns(nuWidths, columns, widthUnit);\n        } else {\n          redistributeToW(nuWidths, cells, widthUnit);\n        }\n        set$1(table, 'width', newWidth);\n      });\n      optHeight.each(newHeight => {\n        const hUnit = getUnit(newHeight);\n        const totalHeight = get$8(table);\n        const oldHeights = getRawHeights(warehouse, table, height);\n        const nuHeights = redistribute$1(oldHeights, totalHeight, newHeight);\n        redistributeToH(nuHeights, rows, cells, hUnit);\n        set$1(table, 'height', newHeight);\n      });\n    };\n    const isPercentSizing = isPercentSizing$1;\n    const isPixelSizing = isPixelSizing$1;\n    const isNoneSizing = isNoneSizing$1;\n\n    const cleanupLegacyAttributes = element => {\n      remove$7(element, 'width');\n    };\n    const convertToPercentSize = table => {\n      const newWidth = getPercentTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    const convertToPixelSize = table => {\n      const newWidth = getPixelTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    const convertToNoneSize = table => {\n      remove$5(table, 'width');\n      const columns = columns$1(table);\n      const rowElements = columns.length > 0 ? columns : cells$1(table);\n      each$2(rowElements, cell => {\n        remove$5(cell, 'width');\n        cleanupLegacyAttributes(cell);\n      });\n      cleanupLegacyAttributes(table);\n    };\n\n    const DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      colGroups: false\n    };\n    const tableHeaderCell = () => SugarElement.fromTag('th');\n    const tableCell = () => SugarElement.fromTag('td');\n    const tableColumn = () => SugarElement.fromTag('col');\n    const createRow = (columns, rowHeaders, columnHeaders, rowIndex) => {\n      const tr = SugarElement.fromTag('tr');\n      for (let j = 0; j < columns; j++) {\n        const td = rowIndex < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n        if (j < columnHeaders) {\n          set$2(td, 'scope', 'row');\n        }\n        if (rowIndex < rowHeaders) {\n          set$2(td, 'scope', 'col');\n        }\n        append$1(td, SugarElement.fromTag('br'));\n        append$1(tr, td);\n      }\n      return tr;\n    };\n    const createGroupRow = columns => {\n      const columnGroup = SugarElement.fromTag('colgroup');\n      range$1(columns, () => append$1(columnGroup, tableColumn()));\n      return columnGroup;\n    };\n    const createRows = (rows, columns, rowHeaders, columnHeaders) => range$1(rows, r => createRow(columns, rowHeaders, columnHeaders, r));\n    const render = (rows, columns, rowHeaders, columnHeaders, headerType, renderOpts = DefaultRenderOptions) => {\n      const table = SugarElement.fromTag('table');\n      const rowHeadersGoInThead = headerType !== 'cells';\n      setAll(table, renderOpts.styles);\n      setAll$1(table, renderOpts.attributes);\n      if (renderOpts.colGroups) {\n        append$1(table, createGroupRow(columns));\n      }\n      const actualRowHeaders = Math.min(rows, rowHeaders);\n      if (rowHeadersGoInThead && rowHeaders > 0) {\n        const thead = SugarElement.fromTag('thead');\n        append$1(table, thead);\n        const theadRowHeaders = headerType === 'sectionCells' ? actualRowHeaders : 0;\n        const theadRows = createRows(rowHeaders, columns, theadRowHeaders, columnHeaders);\n        append(thead, theadRows);\n      }\n      const tbody = SugarElement.fromTag('tbody');\n      append$1(table, tbody);\n      const numRows = rowHeadersGoInThead ? rows - actualRowHeaders : rows;\n      const numRowHeaders = rowHeadersGoInThead ? 0 : rowHeaders;\n      const tbodyRows = createRows(numRows, columns, numRowHeaders, columnHeaders);\n      append(tbody, tbodyRows);\n      return table;\n    };\n\n    const get$4 = element => element.dom.innerHTML;\n    const getOuter = element => {\n      const container = SugarElement.fromTag('div');\n      const clone = SugarElement.fromDom(element.dom.cloneNode(true));\n      append$1(container, clone);\n      return get$4(container);\n    };\n\n    const placeCaretInCell = (editor, cell) => {\n      editor.selection.select(cell.dom, true);\n      editor.selection.collapse(true);\n    };\n    const selectFirstCellInTable = (editor, tableElm) => {\n      descendant(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    const fireEvents = (editor, table) => {\n      each$2(descendants(table, 'tr'), row => {\n        fireNewRow(editor, row.dom);\n        each$2(descendants(row, 'th,td'), cell => {\n          fireNewCell(editor, cell.dom);\n        });\n      });\n    };\n    const isPercentage = width => isString(width) && width.indexOf('%') !== -1;\n    const insert = (editor, columns, rows, colHeaders, rowHeaders) => {\n      const defaultStyles = getTableDefaultStyles(editor);\n      const options = {\n        styles: defaultStyles,\n        attributes: getTableDefaultAttributes(editor),\n        colGroups: tableUseColumnGroup(editor)\n      };\n      editor.undoManager.ignore(() => {\n        const table = render(rows, columns, rowHeaders, colHeaders, getTableHeaderType(editor), options);\n        set$2(table, 'data-mce-id', '__mce');\n        const html = getOuter(table);\n        editor.insertContent(html);\n        editor.addVisual();\n      });\n      return descendant(getBody(editor), 'table[data-mce-id=\"__mce\"]').map(table => {\n        if (isTablePixelsForced(editor)) {\n          convertToPixelSize(table);\n        } else if (isTableResponsiveForced(editor)) {\n          convertToNoneSize(table);\n        } else if (isTablePercentagesForced(editor) || isPercentage(defaultStyles.width)) {\n          convertToPercentSize(table);\n        }\n        removeDataStyle(table);\n        remove$7(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom;\n      }).getOrNull();\n    };\n    const insertTable = (editor, rows, columns, options = {}) => {\n      const checkInput = val => isNumber(val) && val > 0;\n      if (checkInput(rows) && checkInput(columns)) {\n        const headerRows = options.headerRows || 0;\n        const headerColumns = options.headerColumns || 0;\n        return insert(editor, columns, rows, headerColumns, headerRows);\n      } else {\n        console.error('Invalid values for mceInsertTable - rows and columns values are required to insert a table.');\n        return null;\n      }\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.FakeClipboard');\n\n    const tableTypeBase = 'x-tinymce/dom-table-';\n    const tableTypeRow = tableTypeBase + 'rows';\n    const tableTypeColumn = tableTypeBase + 'columns';\n    const setData = items => {\n      const fakeClipboardItem = global.FakeClipboardItem(items);\n      global.write([fakeClipboardItem]);\n    };\n    const getData = type => {\n      var _a;\n      const items = (_a = global.read()) !== null && _a !== void 0 ? _a : [];\n      return findMap(items, item => Optional.from(item.getType(type)));\n    };\n    const clearData = type => {\n      if (getData(type).isSome()) {\n        global.clear();\n      }\n    };\n    const setRows = rowsOpt => {\n      rowsOpt.fold(clearRows, rows => setData({ [tableTypeRow]: rows }));\n    };\n    const getRows = () => getData(tableTypeRow);\n    const clearRows = () => clearData(tableTypeRow);\n    const setColumns = columnsOpt => {\n      columnsOpt.fold(clearColumns, columns => setData({ [tableTypeColumn]: columns }));\n    };\n    const getColumns = () => getData(tableTypeColumn);\n    const clearColumns = () => clearData(tableTypeColumn);\n\n    const getSelectionStartCellOrCaption = editor => getSelectionCellOrCaption(getSelectionStart(editor), getIsRoot(editor));\n    const getSelectionStartCell = editor => getSelectionCell(getSelectionStart(editor), getIsRoot(editor));\n    const registerCommands = (editor, actions) => {\n      const isRoot = getIsRoot(editor);\n      const eraseTable = () => getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n        table(cellOrCaption, isRoot).filter(not(isRoot)).each(table => {\n          const cursor = SugarElement.fromText('');\n          after$5(table, cursor);\n          remove$6(table);\n          if (editor.dom.isEmpty(editor.getBody())) {\n            editor.setContent('');\n            editor.selection.setCursorLocation();\n          } else {\n            const rng = editor.dom.createRng();\n            rng.setStart(cursor.dom, 0);\n            rng.setEnd(cursor.dom, 0);\n            editor.selection.setRng(rng);\n            editor.nodeChanged();\n          }\n        });\n      });\n      const setSizingMode = sizing => getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n        const isForcedSizing = isTableResponsiveForced(editor) || isTablePixelsForced(editor) || isTablePercentagesForced(editor);\n        if (!isForcedSizing) {\n          table(cellOrCaption, isRoot).each(table => {\n            if (sizing === 'relative' && !isPercentSizing(table)) {\n              convertToPercentSize(table);\n            } else if (sizing === 'fixed' && !isPixelSizing(table)) {\n              convertToPixelSize(table);\n            } else if (sizing === 'responsive' && !isNoneSizing(table)) {\n              convertToNoneSize(table);\n            }\n            removeDataStyle(table);\n            fireTableModified(editor, table.dom, structureModified);\n          });\n        }\n      });\n      const getTableFromCell = cell => table(cell, isRoot);\n      const performActionOnSelection = action => getSelectionStartCell(editor).bind(cell => getTableFromCell(cell).map(table => action(table, cell)));\n      const toggleTableClass = (_ui, clazz) => {\n        performActionOnSelection(table => {\n          editor.formatter.toggle('tableclass', { value: clazz }, table.dom);\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      const toggleTableCellClass = (_ui, clazz) => {\n        performActionOnSelection(table => {\n          const selectedCells = getCellsFromSelection(editor);\n          const allHaveClass = forall(selectedCells, cell => editor.formatter.match('tablecellclass', { value: clazz }, cell.dom));\n          const formatterAction = allHaveClass ? editor.formatter.remove : editor.formatter.apply;\n          each$2(selectedCells, cell => formatterAction('tablecellclass', { value: clazz }, cell.dom));\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      const toggleCaption = () => {\n        getSelectionStartCellOrCaption(editor).each(cellOrCaption => {\n          table(cellOrCaption, isRoot).each(table => {\n            child(table, 'caption').fold(() => {\n              const caption = SugarElement.fromTag('caption');\n              append$1(caption, SugarElement.fromText('Caption'));\n              appendAt(table, caption, 0);\n              editor.selection.setCursorLocation(caption.dom, 0);\n            }, caption => {\n              if (isTag('caption')(cellOrCaption)) {\n                one('td', table).each(td => editor.selection.setCursorLocation(td.dom, 0));\n              }\n              remove$6(caption);\n            });\n            fireTableModified(editor, table.dom, structureModified);\n          });\n        });\n      };\n      const postExecute = _data => {\n        editor.focus();\n      };\n      const actOnSelection = (execute, noEvents = false) => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        execute(table, targets, noEvents).each(postExecute);\n      });\n      const copyRowSelection = () => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        const generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), Optional.none());\n        return copyRows(table, targets, generators);\n      });\n      const copyColSelection = () => performActionOnSelection((table, startCell) => {\n        const targets = forMenu(getCellsFromSelection(editor), table, startCell);\n        return copyCols(table, targets);\n      });\n      const pasteOnSelection = (execute, getRows) => getRows().each(rows => {\n        const clonedRows = map$1(rows, row => deep(row));\n        performActionOnSelection((table, startCell) => {\n          const generators = paste$1(SugarElement.fromDom(editor.getDoc()));\n          const targets = pasteRows(getCellsFromSelection(editor), startCell, clonedRows, generators);\n          execute(table, targets).each(postExecute);\n        });\n      });\n      const actOnType = getAction => (_ui, args) => get$c(args, 'type').each(type => {\n        actOnSelection(getAction(type), args.no_events);\n      });\n      each$1({\n        mceTableSplitCells: () => actOnSelection(actions.unmergeCells),\n        mceTableMergeCells: () => actOnSelection(actions.mergeCells),\n        mceTableInsertRowBefore: () => actOnSelection(actions.insertRowsBefore),\n        mceTableInsertRowAfter: () => actOnSelection(actions.insertRowsAfter),\n        mceTableInsertColBefore: () => actOnSelection(actions.insertColumnsBefore),\n        mceTableInsertColAfter: () => actOnSelection(actions.insertColumnsAfter),\n        mceTableDeleteCol: () => actOnSelection(actions.deleteColumn),\n        mceTableDeleteRow: () => actOnSelection(actions.deleteRow),\n        mceTableCutCol: () => copyColSelection().each(selection => {\n          setColumns(selection);\n          actOnSelection(actions.deleteColumn);\n        }),\n        mceTableCutRow: () => copyRowSelection().each(selection => {\n          setRows(selection);\n          actOnSelection(actions.deleteRow);\n        }),\n        mceTableCopyCol: () => copyColSelection().each(selection => setColumns(selection)),\n        mceTableCopyRow: () => copyRowSelection().each(selection => setRows(selection)),\n        mceTablePasteColBefore: () => pasteOnSelection(actions.pasteColsBefore, getColumns),\n        mceTablePasteColAfter: () => pasteOnSelection(actions.pasteColsAfter, getColumns),\n        mceTablePasteRowBefore: () => pasteOnSelection(actions.pasteRowsBefore, getRows),\n        mceTablePasteRowAfter: () => pasteOnSelection(actions.pasteRowsAfter, getRows),\n        mceTableDelete: eraseTable,\n        mceTableCellToggleClass: toggleTableCellClass,\n        mceTableToggleClass: toggleTableClass,\n        mceTableToggleCaption: toggleCaption,\n        mceTableSizingMode: (_ui, sizing) => setSizingMode(sizing),\n        mceTableCellType: actOnType(type => type === 'th' ? actions.makeCellsHeader : actions.unmakeCellsHeader),\n        mceTableColType: actOnType(type => type === 'th' ? actions.makeColumnsHeader : actions.unmakeColumnsHeader),\n        mceTableRowType: actOnType(type => {\n          switch (type) {\n          case 'header':\n            return actions.makeRowsHeader;\n          case 'footer':\n            return actions.makeRowsFooter;\n          default:\n            return actions.makeRowsBody;\n          }\n        })\n      }, (func, name) => editor.addCommand(name, func));\n      editor.addCommand('mceInsertTable', (_ui, args) => {\n        insertTable(editor, args.rows, args.columns, args.options);\n      });\n      editor.addCommand('mceTableApplyCellStyle', (_ui, args) => {\n        const getFormatName = style => 'tablecell' + style.toLowerCase().replace('-', '');\n        if (!isObject(args)) {\n          return;\n        }\n        const cells = getCellsFromSelection(editor);\n        if (cells.length === 0) {\n          return;\n        }\n        const validArgs = filter$1(args, (value, style) => editor.formatter.has(getFormatName(style)) && isString(value));\n        if (isEmpty(validArgs)) {\n          return;\n        }\n        each$1(validArgs, (value, style) => {\n          const formatName = getFormatName(style);\n          each$2(cells, cell => {\n            if (value === '') {\n              editor.formatter.remove(formatName, { value: null }, cell.dom, true);\n            } else {\n              editor.formatter.apply(formatName, { value }, cell.dom);\n            }\n          });\n        });\n        getTableFromCell(cells[0]).each(table => fireTableModified(editor, table.dom, styleModified));\n      });\n    };\n\n    const registerQueryCommands = (editor, actions) => {\n      const isRoot = getIsRoot(editor);\n      const lookupOnSelection = action => getSelectionCell(getSelectionStart(editor)).bind(cell => table(cell, isRoot).map(table => {\n        const targets = forMenu(getCellsFromSelection(editor), table, cell);\n        return action(table, targets);\n      })).getOr('');\n      each$1({\n        mceTableRowType: () => lookupOnSelection(actions.getTableRowType),\n        mceTableCellType: () => lookupOnSelection(actions.getTableCellType),\n        mceTableColType: () => lookupOnSelection(actions.getTableColType)\n      }, (func, name) => editor.addQueryValueHandler(name, func));\n    };\n\n    const adt$4 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    const cata$1 = (subject, onBefore, onOn, onAfter) => subject.fold(onBefore, onOn, onAfter);\n    const getStart$1 = situ => situ.fold(identity, identity, identity);\n    const before$2 = adt$4.before;\n    const on = adt$4.on;\n    const after$3 = adt$4.after;\n    const Situ = {\n      before: before$2,\n      on,\n      after: after$3,\n      cata: cata$1,\n      getStart: getStart$1\n    };\n\n    const create$4 = (selection, kill) => ({\n      selection,\n      kill\n    });\n    const Response = { create: create$4 };\n\n    const selectNode = (win, element) => {\n      const rng = win.document.createRange();\n      rng.selectNode(element.dom);\n      return rng;\n    };\n    const selectNodeContents = (win, element) => {\n      const rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    const selectNodeContentsUsing = (rng, element) => rng.selectNodeContents(element.dom);\n    const setStart = (rng, situ) => {\n      situ.fold(e => {\n        rng.setStartBefore(e.dom);\n      }, (e, o) => {\n        rng.setStart(e.dom, o);\n      }, e => {\n        rng.setStartAfter(e.dom);\n      });\n    };\n    const setFinish = (rng, situ) => {\n      situ.fold(e => {\n        rng.setEndBefore(e.dom);\n      }, (e, o) => {\n        rng.setEnd(e.dom, o);\n      }, e => {\n        rng.setEndAfter(e.dom);\n      });\n    };\n    const relativeToNative = (win, startSitu, finishSitu) => {\n      const range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    const exactToNative = (win, start, soffset, finish, foffset) => {\n      const rng = win.document.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const toRect = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n    const getFirstRect$1 = rng => {\n      const rects = rng.getClientRects();\n      const rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    const adt$3 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const fromRange = (win, type, range) => type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    const getRanges = (win, selection) => selection.match({\n      domRange: rng => {\n        return {\n          ltr: constant(rng),\n          rtl: Optional.none\n        };\n      },\n      relative: (startSitu, finishSitu) => {\n        return {\n          ltr: cached(() => relativeToNative(win, startSitu, finishSitu)),\n          rtl: cached(() => Optional.some(relativeToNative(win, finishSitu, startSitu)))\n        };\n      },\n      exact: (start, soffset, finish, foffset) => {\n        return {\n          ltr: cached(() => exactToNative(win, start, soffset, finish, foffset)),\n          rtl: cached(() => Optional.some(exactToNative(win, finish, foffset, start, soffset)))\n        };\n      }\n    });\n    const doDiagnose = (win, ranges) => {\n      const rng = ranges.ltr();\n      if (rng.collapsed) {\n        const reversed = ranges.rtl().filter(rev => rev.collapsed === false);\n        return reversed.map(rev => adt$3.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset)).getOrThunk(() => fromRange(win, adt$3.ltr, rng));\n      } else {\n        return fromRange(win, adt$3.ltr, rng);\n      }\n    };\n    const diagnose = (win, selection) => {\n      const ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    const asLtrRange = (win, selection) => {\n      const diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(start.dom, soffset);\n          rng.setEnd(finish.dom, foffset);\n          return rng;\n        },\n        rtl: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(finish.dom, foffset);\n          rng.setEnd(start.dom, soffset);\n          return rng;\n        }\n      });\n    };\n    adt$3.ltr;\n    adt$3.rtl;\n\n    const create$3 = (start, soffset, finish, foffset) => ({\n      start,\n      soffset,\n      finish,\n      foffset\n    });\n    const SimRange = { create: create$3 };\n\n    const create$2 = (start, soffset, finish, foffset) => {\n      return {\n        start: Situ.on(start, soffset),\n        finish: Situ.on(finish, foffset)\n      };\n    };\n    const Situs = { create: create$2 };\n\n    const convertToRange = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset);\n    };\n    const makeSitus = Situs.create;\n\n    const sync = (container, isRoot, start, soffset, finish, foffset, selectRange) => {\n      if (!(eq$1(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(s => {\n          return closest$1(finish, 'td,th', isRoot).bind(f => {\n            return detect(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const detect = (container, isRoot, start, finish, selectRange) => {\n      if (!eq$1(start, finish)) {\n        return identify(start, finish, isRoot).bind(cellSel => {\n          const boxes = cellSel.boxes.getOr([]);\n          if (boxes.length > 1) {\n            selectRange(container, boxes, cellSel.start, cellSel.finish);\n            return Optional.some(Response.create(Optional.some(makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Optional.none();\n          }\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const update = (rows, columns, container, selected, annotations) => {\n      const updateSelection = newSels => {\n        annotations.clearBeforeUpdate(container);\n        annotations.selectRange(container, newSels.boxes, newSels.start, newSels.finish);\n        return newSels.boxes;\n      };\n      return shiftSelection(selected, rows, columns, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(updateSelection);\n    };\n\n    const traverse = (item, mode) => ({\n      item,\n      mode\n    });\n    const backtrack = (universe, item, _direction, transition = sidestep) => {\n      return universe.property().parent(item).map(p => {\n        return traverse(p, transition);\n      });\n    };\n    const sidestep = (universe, item, direction, transition = advance) => {\n      return direction.sibling(universe, item).map(p => {\n        return traverse(p, transition);\n      });\n    };\n    const advance = (universe, item, direction, transition = advance) => {\n      const children = universe.property().children(item);\n      const result = direction.first(children);\n      return result.map(r => {\n        return traverse(r, transition);\n      });\n    };\n    const successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Optional.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Optional.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Optional.some(sidestep)\n      }\n    ];\n    const go = (universe, item, mode, direction, rules = successors) => {\n      const ruleOpt = find$1(rules, succ => {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(rule => {\n        return rule.current(universe, item, direction, rule.next).orThunk(() => {\n          return rule.fallback.bind(fb => {\n            return go(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    const left$1 = () => {\n      const sibling = (universe, item) => {\n        return universe.query().prevSibling(item);\n      };\n      const first = children => {\n        return children.length > 0 ? Optional.some(children[children.length - 1]) : Optional.none();\n      };\n      return {\n        sibling,\n        first\n      };\n    };\n    const right$1 = () => {\n      const sibling = (universe, item) => {\n        return universe.query().nextSibling(item);\n      };\n      const first = children => {\n        return children.length > 0 ? Optional.some(children[0]) : Optional.none();\n      };\n      return {\n        sibling,\n        first\n      };\n    };\n    const Walkers = {\n      left: left$1,\n      right: right$1\n    };\n\n    const hone = (universe, item, predicate, mode, direction, isRoot) => {\n      const next = go(universe, item, mode, direction);\n      return next.bind(n => {\n        if (isRoot(n.item)) {\n          return Optional.none();\n        } else {\n          return predicate(n.item) ? Optional.some(n.item) : hone(universe, n.item, predicate, n.mode, direction, isRoot);\n        }\n      });\n    };\n    const left = (universe, item, predicate, isRoot) => {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    const right = (universe, item, predicate, isRoot) => {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    const isLeaf = universe => element => universe.property().children(element).length === 0;\n    const before$1 = (universe, item, isRoot) => {\n      return seekLeft$1(universe, item, isLeaf(universe), isRoot);\n    };\n    const after$2 = (universe, item, isRoot) => {\n      return seekRight$1(universe, item, isLeaf(universe), isRoot);\n    };\n    const seekLeft$1 = left;\n    const seekRight$1 = right;\n\n    const universe = DomUniverse();\n    const before = (element, isRoot) => {\n      return before$1(universe, element, isRoot);\n    };\n    const after$1 = (element, isRoot) => {\n      return after$2(universe, element, isRoot);\n    };\n    const seekLeft = (element, predicate, isRoot) => {\n      return seekLeft$1(universe, element, predicate, isRoot);\n    };\n    const seekRight = (element, predicate, isRoot) => {\n      return seekRight$1(universe, element, predicate, isRoot);\n    };\n\n    const ancestor = (scope, predicate, isRoot) => ancestor$2(scope, predicate, isRoot).isSome();\n\n    const adt$2 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    const isOverlapping = (bridge, before, after) => {\n      const beforeBounds = bridge.getRect(before);\n      const afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    const isRow = elem => {\n      return closest$1(elem, 'tr');\n    };\n    const verify = (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) => {\n      return closest$1(after, 'td,th', isRoot).bind(afterCell => {\n        return closest$1(before, 'td,th', isRoot).map(beforeCell => {\n          if (!eq$1(afterCell, beforeCell)) {\n            return sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(() => {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$2.success() : failure(beforeCell);\n            }, _sharedRow => {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq$1(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$2.none('in same cell');\n          }\n        });\n      }).getOr(adt$2.none('default'));\n    };\n    const cata = (subject, onNone, onSuccess, onFailedUp, onFailedDown) => {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    const BeforeAfter = {\n      ...adt$2,\n      verify,\n      cata\n    };\n\n    const inParent = (parent, children, element, index) => ({\n      parent,\n      children,\n      element,\n      index\n    });\n    const indexInParent = element => parent(element).bind(parent => {\n      const children = children$2(parent);\n      return indexOf(children, element).map(index => inParent(parent, children, element, index));\n    });\n    const indexOf = (elements, element) => findIndex(elements, curry(eq$1, element));\n\n    const isBr = isTag('br');\n    const gatherer = (cand, gather, isRoot) => {\n      return gather(cand, isRoot).bind(target => {\n        return isText(target) && get$6(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Optional.some(target);\n      });\n    };\n    const handleBr = (isRoot, element, direction) => {\n      return direction.traverse(element).orThunk(() => {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    const findBr = (element, offset) => {\n      return child$2(element, offset).filter(isBr).orThunk(() => {\n        return child$2(element, offset - 1).filter(isBr);\n      });\n    };\n    const handleParent = (isRoot, element, offset, direction) => {\n      return findBr(element, offset).bind(br => {\n        return direction.traverse(br).fold(() => {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, adjacent => {\n          return indexInParent(adjacent).map(info => {\n            return Situ.on(info.parent, info.index);\n          });\n        });\n      });\n    };\n    const tryBr = (isRoot, element, offset, direction) => {\n      const target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(tgt => {\n        return {\n          start: tgt,\n          finish: tgt\n        };\n      });\n    };\n    const process = analysis => {\n      return BeforeAfter.cata(analysis, _message => {\n        return Optional.none();\n      }, () => {\n        return Optional.none();\n      }, cell => {\n        return Optional.some(point(cell, 0));\n      }, cell => {\n        return Optional.some(point(cell, getEnd(cell)));\n      });\n    };\n\n    const moveDown = (caret, amount) => {\n      return {\n        left: caret.left,\n        top: caret.top + amount,\n        right: caret.right,\n        bottom: caret.bottom + amount\n      };\n    };\n    const moveUp = (caret, amount) => {\n      return {\n        left: caret.left,\n        top: caret.top - amount,\n        right: caret.right,\n        bottom: caret.bottom - amount\n      };\n    };\n    const translate = (caret, xDelta, yDelta) => {\n      return {\n        left: caret.left + xDelta,\n        top: caret.top + yDelta,\n        right: caret.right + xDelta,\n        bottom: caret.bottom + yDelta\n      };\n    };\n    const getTop = caret => {\n      return caret.top;\n    };\n    const getBottom = caret => {\n      return caret.bottom;\n    };\n\n    const getPartialBox = (bridge, element, offset) => {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Optional.none();\n    };\n    const toCaret = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom\n    });\n    const getElemBox = (bridge, element) => {\n      return Optional.some(bridge.getRect(element));\n    };\n    const getBoxAt = (bridge, element, offset) => {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n    const getEntireBox = (bridge, element) => {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n\n    const JUMP_SIZE = 5;\n    const NUM_RETRIES = 100;\n    const adt$1 = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    const isOutside = (caret, box) => {\n      return caret.left < box.left || Math.abs(box.right - caret.left) < 1 || caret.left > box.right;\n    };\n    const inOutsideBlock = (bridge, element, caret) => {\n      return closest$2(element, isBlock).fold(never, cell => {\n        return getEntireBox(bridge, cell).exists(box => {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    const adjustDown = (bridge, element, guessBox, original, caret) => {\n      const lowerCaret = moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom - original.bottom) < 1) {\n        return adt$1.retry(lowerCaret);\n      } else if (guessBox.top > caret.bottom) {\n        return adt$1.retry(lowerCaret);\n      } else if (guessBox.top === caret.bottom) {\n        return adt$1.retry(moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$1.retry(translate(lowerCaret, JUMP_SIZE, 0)) : adt$1.none();\n      }\n    };\n    const adjustUp = (bridge, element, guessBox, original, caret) => {\n      const higherCaret = moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top - original.top) < 1) {\n        return adt$1.retry(higherCaret);\n      } else if (guessBox.bottom < caret.top) {\n        return adt$1.retry(higherCaret);\n      } else if (guessBox.bottom === caret.top) {\n        return adt$1.retry(moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$1.retry(translate(higherCaret, JUMP_SIZE, 0)) : adt$1.none();\n      }\n    };\n    const upMovement = {\n      point: getTop,\n      adjuster: adjustUp,\n      move: moveUp,\n      gather: before\n    };\n    const downMovement = {\n      point: getBottom,\n      adjuster: adjustDown,\n      move: moveDown,\n      gather: after$1\n    };\n    const isAtTable = (bridge, x, y) => {\n      return bridge.elementFromPoint(x, y).filter(elm => {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    const adjustForTable = (bridge, movement, original, caret, numRetries) => {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    const adjustTil = (bridge, movement, original, caret, numRetries) => {\n      if (numRetries === 0) {\n        return Optional.some(caret);\n      }\n      if (isAtTable(bridge, caret.left, movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left, movement.point(caret)).bind(guess => {\n        return guess.start.fold(Optional.none, element => {\n          return getEntireBox(bridge, element).bind(guessBox => {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Optional.none, newCaret => {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(() => {\n            return Optional.some(caret);\n          });\n        }, Optional.none);\n      });\n    };\n    const checkScroll = (movement, adjusted, bridge) => {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Optional.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Optional.some(-movement.point(adjusted));\n      } else {\n        return Optional.none();\n      }\n    };\n    const retry = (movement, bridge, caret) => {\n      const moved = movement.move(caret, JUMP_SIZE);\n      const adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(() => {\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted));\n      }, delta => {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted) - delta);\n      });\n    };\n    const Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    const MAX_RETRIES = 20;\n    const findSpot = (bridge, isRoot, direction) => {\n      return bridge.getSelection().bind(sel => {\n        return tryBr(isRoot, sel.finish, sel.foffset, direction).fold(() => {\n          return Optional.some(point(sel.finish, sel.foffset));\n        }, brNeighbour => {\n          const range = bridge.fromSitus(brNeighbour);\n          const analysis = BeforeAfter.verify(bridge, sel.finish, sel.foffset, range.finish, range.foffset, direction.failure, isRoot);\n          return process(analysis);\n        });\n      });\n    };\n    const scan = (bridge, isRoot, element, offset, direction, numRetries) => {\n      if (numRetries === 0) {\n        return Optional.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(situs => {\n        const range = bridge.fromSitus(situs);\n        const analysis = BeforeAfter.verify(bridge, element, offset, range.finish, range.foffset, direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, () => {\n          return Optional.none();\n        }, () => {\n          return Optional.some(situs);\n        }, cell => {\n          if (eq$1(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, cell => {\n          if (eq$1(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    const tryAgain = (bridge, element, offset, move, direction) => {\n      return getBoxAt(bridge, element, offset).bind(box => {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    const tryAt = (bridge, direction, box) => {\n      const browser = detect$2().browser;\n      if (browser.isChromium() || browser.isSafari() || browser.isFirefox()) {\n        return direction.retry(bridge, box);\n      } else {\n        return Optional.none();\n      }\n    };\n    const tryCursor = (bridge, isRoot, element, offset, direction) => {\n      return getBoxAt(bridge, element, offset).bind(box => {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    const handle$1 = (bridge, isRoot, direction) => {\n      return findSpot(bridge, isRoot, direction).bind(spot => {\n        return scan(bridge, isRoot, spot.element, spot.offset, direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n\n    const inSameTable = (elem, table) => {\n      return ancestor(elem, e => {\n        return parent(e).exists(p => {\n          return eq$1(p, table);\n        });\n      });\n    };\n    const simulate = (bridge, isRoot, direction, initial, anchor) => {\n      return closest$1(initial, 'td,th', isRoot).bind(start => {\n        return closest$1(start, 'table', isRoot).bind(table => {\n          if (!inSameTable(anchor, table)) {\n            return Optional.none();\n          }\n          return handle$1(bridge, isRoot, direction).bind(range => {\n            return closest$1(range.finish, 'td,th', isRoot).map(finish => {\n              return {\n                start,\n                finish,\n                range\n              };\n            });\n          });\n        });\n      });\n    };\n    const navigate = (bridge, isRoot, direction, initial, anchor, precheck) => {\n      return precheck(initial, isRoot).orThunk(() => {\n        return simulate(bridge, isRoot, direction, initial, anchor).map(info => {\n          const range = info.range;\n          return Response.create(Optional.some(makeSitus(range.start, range.soffset, range.finish, range.foffset)), true);\n        });\n      });\n    };\n    const firstUpCheck = (initial, isRoot) => {\n      return closest$1(initial, 'tr', isRoot).bind(startRow => {\n        return closest$1(startRow, 'table', isRoot).bind(table => {\n          const rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[0])) {\n            return seekLeft(table, element => {\n              return last$1(element).isSome();\n            }, isRoot).map(last => {\n              const lastOffset = getEnd(last);\n              return Response.create(Optional.some(makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    const lastDownCheck = (initial, isRoot) => {\n      return closest$1(initial, 'tr', isRoot).bind(startRow => {\n        return closest$1(startRow, 'table', isRoot).bind(table => {\n          const rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[rows.length - 1])) {\n            return seekRight(table, element => {\n              return first(element).isSome();\n            }, isRoot).map(first => {\n              return Response.create(Optional.some(makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    const select = (bridge, container, isRoot, direction, initial, anchor, selectRange) => {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(info => {\n        return detect(container, isRoot, info.start, info.finish, selectRange);\n      });\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const value = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    const findCell = (target, isRoot) => closest$1(target, 'td,th', isRoot);\n    const MouseSelection = (bridge, container, isRoot, annotations) => {\n      const cursor = value();\n      const clearstate = cursor.clear;\n      const applySelection = event => {\n        cursor.on(start => {\n          annotations.clearBeforeUpdate(container);\n          findCell(event.target, isRoot).each(finish => {\n            identify(start, finish, isRoot).each(cellSel => {\n              const boxes = cellSel.boxes.getOr([]);\n              if (boxes.length === 1) {\n                const singleCell = boxes[0];\n                const isNonEditableCell = getRaw(singleCell) === 'false';\n                const isCellClosestContentEditable = is(closest(event.target), singleCell, eq$1);\n                if (isNonEditableCell && isCellClosestContentEditable) {\n                  annotations.selectRange(container, boxes, singleCell, singleCell);\n                  bridge.selectContents(singleCell);\n                }\n              } else if (boxes.length > 1) {\n                annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      const mousedown = event => {\n        annotations.clear(container);\n        findCell(event.target, isRoot).each(cursor.set);\n      };\n      const mouseover = event => {\n        applySelection(event);\n      };\n      const mouseup = event => {\n        applySelection(event);\n        clearstate();\n      };\n      return {\n        clearstate,\n        mousedown,\n        mouseover,\n        mouseup\n      };\n    };\n\n    const down = {\n      traverse: nextSibling,\n      gather: after$1,\n      relative: Situ.before,\n      retry: Retries.tryDown,\n      failure: BeforeAfter.failedDown\n    };\n    const up = {\n      traverse: prevSibling,\n      gather: before,\n      relative: Situ.before,\n      retry: Retries.tryUp,\n      failure: BeforeAfter.failedUp\n    };\n\n    const isKey = key => {\n      return keycode => {\n        return keycode === key;\n      };\n    };\n    const isUp = isKey(38);\n    const isDown = isKey(40);\n    const isNavigation = keycode => {\n      return keycode >= 37 && keycode <= 40;\n    };\n    const ltr = {\n      isBackward: isKey(37),\n      isForward: isKey(39)\n    };\n    const rtl = {\n      isBackward: isKey(39),\n      isForward: isKey(37)\n    };\n\n    const get$3 = _DOC => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n    const by = (x, y, _DOC) => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const win = doc.defaultView;\n      if (win) {\n        win.scrollBy(x, y);\n      }\n    };\n\n    const adt = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const exactFromRange = simRange => adt.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    const getStart = selection => selection.match({\n      domRange: rng => SugarElement.fromDom(rng.startContainer),\n      relative: (startSitu, _finishSitu) => Situ.getStart(startSitu),\n      exact: (start, _soffset, _finish, _foffset) => start\n    });\n    const domRange = adt.domRange;\n    const relative = adt.relative;\n    const exact = adt.exact;\n    const getWin = selection => {\n      const start = getStart(selection);\n      return defaultView(start);\n    };\n    const range = SimRange.create;\n    const SimSelection = {\n      domRange,\n      relative,\n      exact,\n      exactFromRange,\n      getWin,\n      range\n    };\n\n    const caretPositionFromPoint = (doc, x, y) => {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretPositionFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)).bind(pos => {\n        if (pos.offsetNode === null) {\n          return Optional.none();\n        }\n        const r = doc.dom.createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Optional.some(r);\n      });\n    };\n    const caretRangeFromPoint = (doc, x, y) => {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretRangeFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y));\n    };\n    const availableSearch = (() => {\n      if (document.caretPositionFromPoint) {\n        return caretPositionFromPoint;\n      } else if (document.caretRangeFromPoint) {\n        return caretRangeFromPoint;\n      } else {\n        return Optional.none;\n      }\n    })();\n    const fromPoint = (win, x, y) => {\n      const doc = SugarElement.fromDom(win.document);\n      return availableSearch(doc, x, y).map(rng => SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset));\n    };\n\n    const beforeSpecial = (element, offset) => {\n      const name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains$2([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    const preprocessRelative = (startSitu, finishSitu) => {\n      const start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      const finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return SimSelection.relative(start, finish);\n    };\n    const preprocessExact = (start, soffset, finish, foffset) => {\n      const startSitu = beforeSpecial(start, soffset);\n      const finishSitu = beforeSpecial(finish, foffset);\n      return SimSelection.relative(startSitu, finishSitu);\n    };\n\n    const makeRange = (start, soffset, finish, foffset) => {\n      const doc = owner(start);\n      const rng = doc.dom.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const after = (start, soffset, finish, foffset) => {\n      const r = makeRange(start, soffset, finish, foffset);\n      const same = eq$1(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    const getNativeSelection = win => Optional.from(win.getSelection());\n    const doSetNativeRange = (win, rng) => {\n      getNativeSelection(win).each(selection => {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    const doSetRange = (win, start, soffset, finish, foffset) => {\n      const rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    const setLegacyRtlRange = (win, selection, start, soffset, finish, foffset) => {\n      selection.collapse(start.dom, soffset);\n      selection.extend(finish.dom, foffset);\n    };\n    const setRangeFromRelative = (win, relative) => diagnose(win, relative).match({\n      ltr: (start, soffset, finish, foffset) => {\n        doSetRange(win, start, soffset, finish, foffset);\n      },\n      rtl: (start, soffset, finish, foffset) => {\n        getNativeSelection(win).each(selection => {\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom, soffset, finish.dom, foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        });\n      }\n    });\n    const setExact = (win, start, soffset, finish, foffset) => {\n      const relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    const setRelative = (win, startSitu, finishSitu) => {\n      const relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    const readRange = selection => {\n      if (selection.rangeCount > 0) {\n        const firstRng = selection.getRangeAt(0);\n        const lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Optional.none();\n      }\n    };\n    const doGetExact = selection => {\n      if (selection.anchorNode === null || selection.focusNode === null) {\n        return readRange(selection);\n      } else {\n        const anchor = SugarElement.fromDom(selection.anchorNode);\n        const focus = SugarElement.fromDom(selection.focusNode);\n        return after(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n      }\n    };\n    const setToElement = (win, element, selectNodeContents$1 = true) => {\n      const rngGetter = selectNodeContents$1 ? selectNodeContents : selectNode;\n      const rng = rngGetter(win, element);\n      doSetNativeRange(win, rng);\n    };\n    const getExact = win => getNativeSelection(win).filter(sel => sel.rangeCount > 0).bind(doGetExact);\n    const get$2 = win => getExact(win).map(range => SimSelection.exact(range.start, range.soffset, range.finish, range.foffset));\n    const getFirstRect = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getFirstRect$1(rng);\n    };\n    const getAtPoint = (win, x, y) => fromPoint(win, x, y);\n    const clear = win => {\n      getNativeSelection(win).each(selection => selection.removeAllRanges());\n    };\n\n    const WindowBridge = win => {\n      const elementFromPoint = (x, y) => {\n        return SugarElement.fromPoint(SugarElement.fromDom(win.document), x, y);\n      };\n      const getRect = element => {\n        return element.dom.getBoundingClientRect();\n      };\n      const getRangedRect = (start, soffset, finish, foffset) => {\n        const sel = SimSelection.exact(start, soffset, finish, foffset);\n        return getFirstRect(win, sel);\n      };\n      const getSelection = () => {\n        return get$2(win).map(exactAdt => {\n          return convertToRange(win, exactAdt);\n        });\n      };\n      const fromSitus = situs => {\n        const relative = SimSelection.relative(situs.start, situs.finish);\n        return convertToRange(win, relative);\n      };\n      const situsFromPoint = (x, y) => {\n        return getAtPoint(win, x, y).map(exact => {\n          return Situs.create(exact.start, exact.soffset, exact.finish, exact.foffset);\n        });\n      };\n      const clearSelection = () => {\n        clear(win);\n      };\n      const collapseSelection = (toStart = false) => {\n        get$2(win).each(sel => sel.fold(rng => rng.collapse(toStart), (startSitu, finishSitu) => {\n          const situ = toStart ? startSitu : finishSitu;\n          setRelative(win, situ, situ);\n        }, (start, soffset, finish, foffset) => {\n          const node = toStart ? start : finish;\n          const offset = toStart ? soffset : foffset;\n          setExact(win, node, offset, node, offset);\n        }));\n      };\n      const selectNode = element => {\n        setToElement(win, element, false);\n      };\n      const selectContents = element => {\n        setToElement(win, element);\n      };\n      const setSelection = sel => {\n        setExact(win, sel.start, sel.soffset, sel.finish, sel.foffset);\n      };\n      const setRelativeSelection = (start, finish) => {\n        setRelative(win, start, finish);\n      };\n      const getInnerHeight = () => {\n        return win.innerHeight;\n      };\n      const getScrollY = () => {\n        const pos = get$3(SugarElement.fromDom(win.document));\n        return pos.top;\n      };\n      const scrollBy = (x, y) => {\n        by(x, y, SugarElement.fromDom(win.document));\n      };\n      return {\n        elementFromPoint,\n        getRect,\n        getRangedRect,\n        getSelection,\n        fromSitus,\n        situsFromPoint,\n        clearSelection,\n        collapseSelection,\n        setSelection,\n        setRelativeSelection,\n        selectNode,\n        selectContents,\n        getInnerHeight,\n        getScrollY,\n        scrollBy\n      };\n    };\n\n    const rc = (rows, cols) => ({\n      rows,\n      cols\n    });\n    const mouse = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      const handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        clearstate: handlers.clearstate,\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    const keyboard = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      const clearToNavigate = () => {\n        annotations.clear(container);\n        return Optional.none();\n      };\n      const keydown = (event, start, soffset, finish, foffset, direction) => {\n        const realEvent = event.raw;\n        const keycode = realEvent.which;\n        const shiftKey = realEvent.shiftKey === true;\n        const handler = retrieve$1(container, annotations.selectedSelector).fold(() => {\n          if (isNavigation(keycode) && !shiftKey) {\n            annotations.clearBeforeUpdate(container);\n          }\n          if (isDown(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, down, finish, start, annotations.selectRange);\n          } else if (isUp(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, up, finish, start, annotations.selectRange);\n          } else if (isDown(keycode)) {\n            return curry(navigate, bridge, isRoot, down, finish, start, lastDownCheck);\n          } else if (isUp(keycode)) {\n            return curry(navigate, bridge, isRoot, up, finish, start, firstUpCheck);\n          } else {\n            return Optional.none;\n          }\n        }, selected => {\n          const update$1 = attempts => {\n            return () => {\n              const navigation = findMap(attempts, delta => {\n                return update(delta.rows, delta.cols, container, selected, annotations);\n              });\n              return navigation.fold(() => {\n                return getEdges(container, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(edges => {\n                  const relative = isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first, 0), relative(edges.table));\n                  annotations.clear(container);\n                  return Response.create(Optional.none(), true);\n                });\n              }, _ => {\n                return Optional.some(Response.create(Optional.none(), true));\n              });\n            };\n          };\n          if (isDown(keycode) && shiftKey) {\n            return update$1([rc(+1, 0)]);\n          } else if (isUp(keycode) && shiftKey) {\n            return update$1([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (isNavigation(keycode) && !shiftKey) {\n            return clearToNavigate;\n          } else {\n            return Optional.none;\n          }\n        });\n        return handler();\n      };\n      const keyup = (event, start, soffset, finish, foffset) => {\n        return retrieve$1(container, annotations.selectedSelector).fold(() => {\n          const realEvent = event.raw;\n          const keycode = realEvent.which;\n          const shiftKey = realEvent.shiftKey === true;\n          if (!shiftKey) {\n            return Optional.none();\n          }\n          if (isNavigation(keycode)) {\n            return sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Optional.none();\n          }\n        }, Optional.none);\n      };\n      return {\n        keydown,\n        keyup\n      };\n    };\n    const external = (win, container, isRoot, annotations) => {\n      const bridge = WindowBridge(win);\n      return (start, finish) => {\n        annotations.clearBeforeUpdate(container);\n        identify(start, finish, isRoot).each(cellSel => {\n          const boxes = cellSel.boxes.getOr([]);\n          annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n          bridge.selectContents(finish);\n          bridge.collapseSelection();\n        });\n      };\n    };\n\n    const read = (element, attr) => {\n      const value = get$b(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$2 = (element, attr, id) => {\n      const old = read(element, attr);\n      const nu = old.concat([id]);\n      set$2(element, attr, nu.join(' '));\n      return true;\n    };\n    const remove$4 = (element, attr, id) => {\n      const nu = filter$2(read(element, attr), v => v !== id);\n      if (nu.length > 0) {\n        set$2(element, attr, nu.join(' '));\n      } else {\n        remove$7(element, attr);\n      }\n      return false;\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n    const get$1 = element => read(element, 'class');\n    const add$1 = (element, clazz) => add$2(element, 'class', clazz);\n    const remove$3 = (element, clazz) => remove$4(element, 'class', clazz);\n\n    const add = (element, clazz) => {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    const cleanClass = element => {\n      const classList = supports(element) ? element.dom.classList : get$1(element);\n      if (classList.length === 0) {\n        remove$7(element, 'class');\n      }\n    };\n    const remove$2 = (element, clazz) => {\n      if (supports(element)) {\n        const classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$3(element, clazz);\n      }\n      cleanClass(element);\n    };\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const remove$1 = (element, classes) => {\n      each$2(classes, x => {\n        remove$2(element, x);\n      });\n    };\n\n    const addClass = clazz => element => {\n      add(element, clazz);\n    };\n    const removeClasses = classes => element => {\n      remove$1(element, classes);\n    };\n\n    const byClass = ephemera => {\n      const addSelectionClass = addClass(ephemera.selected);\n      const removeSelectionClasses = removeClasses([\n        ephemera.selected,\n        ephemera.lastSelected,\n        ephemera.firstSelected\n      ]);\n      const clear = container => {\n        const sels = descendants(container, ephemera.selectedSelector);\n        each$2(sels, removeSelectionClasses);\n      };\n      const selectRange = (container, cells, start, finish) => {\n        clear(container);\n        each$2(cells, addSelectionClass);\n        add(start, ephemera.firstSelected);\n        add(finish, ephemera.lastSelected);\n      };\n      return {\n        clearBeforeUpdate: clear,\n        clear,\n        selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    const byAttr = (ephemera, onSelection, onClear) => {\n      const removeSelectionAttributes = element => {\n        remove$7(element, ephemera.selected);\n        remove$7(element, ephemera.firstSelected);\n        remove$7(element, ephemera.lastSelected);\n      };\n      const addSelectionAttribute = element => {\n        set$2(element, ephemera.selected, '1');\n      };\n      const clear = container => {\n        clearBeforeUpdate(container);\n        onClear();\n      };\n      const clearBeforeUpdate = container => {\n        const sels = descendants(container, `${ ephemera.selectedSelector },${ ephemera.firstSelectedSelector },${ ephemera.lastSelectedSelector }`);\n        each$2(sels, removeSelectionAttributes);\n      };\n      const selectRange = (container, cells, start, finish) => {\n        clear(container);\n        each$2(cells, addSelectionAttribute);\n        set$2(start, ephemera.firstSelected, '1');\n        set$2(finish, ephemera.lastSelected, '1');\n        onSelection(cells, start, finish);\n      };\n      return {\n        clearBeforeUpdate,\n        clear,\n        selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    const SelectionAnnotation = {\n      byClass,\n      byAttr\n    };\n\n    const fold = (subject, onNone, onMultiple, onSingle) => {\n      switch (subject.tag) {\n      case 'none':\n        return onNone();\n      case 'single':\n        return onSingle(subject.element);\n      case 'multiple':\n        return onMultiple(subject.elements);\n      }\n    };\n    const none = () => ({ tag: 'none' });\n    const multiple = elements => ({\n      tag: 'multiple',\n      elements\n    });\n    const single = element => ({\n      tag: 'single',\n      element\n    });\n\n    const Selections = (lazyRoot, getStart, selectedSelector) => {\n      const get = () => retrieve(lazyRoot(), selectedSelector).fold(() => getStart().fold(none, single), multiple);\n      return { get };\n    };\n\n    const getUpOrLeftCells = (grid, selectedCells) => {\n      const upGrid = grid.slice(0, selectedCells[selectedCells.length - 1].row + 1);\n      const upDetails = toDetailList(upGrid);\n      return bind$2(upDetails, detail => {\n        const slicedCells = detail.cells.slice(0, selectedCells[selectedCells.length - 1].column + 1);\n        return map$1(slicedCells, cell => cell.element);\n      });\n    };\n    const getDownOrRightCells = (grid, selectedCells) => {\n      const downGrid = grid.slice(selectedCells[0].row + selectedCells[0].rowspan - 1, grid.length);\n      const downDetails = toDetailList(downGrid);\n      return bind$2(downDetails, detail => {\n        const slicedCells = detail.cells.slice(selectedCells[0].column + selectedCells[0].colspan - 1, detail.cells.length);\n        return map$1(slicedCells, cell => cell.element);\n      });\n    };\n    const getOtherCells = (table, target, generators) => {\n      const warehouse = Warehouse.fromTable(table);\n      const details = onCells(warehouse, target);\n      return details.map(selectedCells => {\n        const grid = toGrid(warehouse, generators, false);\n        const {rows} = extractGridDetails(grid);\n        const upOrLeftCells = getUpOrLeftCells(rows, selectedCells);\n        const downOrRightCells = getDownOrRightCells(rows, selectedCells);\n        return {\n          upOrLeftCells,\n          downOrRightCells\n        };\n      });\n    };\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n      target,\n      x,\n      y,\n      stop,\n      prevent,\n      kill,\n      raw\n    });\n    const fromRawEvent$1 = rawEvent => {\n      const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      const stop = () => rawEvent.stopPropagation();\n      const prevent = () => rawEvent.preventDefault();\n      const kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => rawEvent => {\n      if (filter(rawEvent)) {\n        handler(fromRawEvent$1(rawEvent));\n      }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n      const wrapped = handle(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    const bind$1 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const unbind = (element, event, handler, useCapture) => {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const filter = always;\n    const bind = (element, event, handler) => bind$1(element, event, filter, handler);\n    const fromRawEvent = fromRawEvent$1;\n\n    const hasInternalTarget = e => !has(SugarElement.fromDom(e.target), 'ephox-snooker-resizer-bar');\n    const TableCellSelectionHandler = (editor, resizeHandler) => {\n      const cellSelection = Selections(() => SugarElement.fromDom(editor.getBody()), () => getSelectionCell(getSelectionStart(editor), getIsRoot(editor)), ephemera.selectedSelector);\n      const onSelection = (cells, start, finish) => {\n        const tableOpt = table(start);\n        tableOpt.each(table => {\n          const cloneFormats = getTableCloneElements(editor);\n          const generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), cloneFormats);\n          const selectedCells = getCellsFromSelection(editor);\n          const otherCells = getOtherCells(table, { selection: selectedCells }, generators);\n          fireTableSelectionChange(editor, cells, start, finish, otherCells);\n        });\n      };\n      const onClear = () => fireTableSelectionClear(editor);\n      const annotations = SelectionAnnotation.byAttr(ephemera, onSelection, onClear);\n      editor.on('init', _e => {\n        const win = editor.getWin();\n        const body = getBody(editor);\n        const isRoot = getIsRoot(editor);\n        const syncSelection = () => {\n          const sel = editor.selection;\n          const start = SugarElement.fromDom(sel.getStart());\n          const end = SugarElement.fromDom(sel.getEnd());\n          const shared = sharedOne(table, [\n            start,\n            end\n          ]);\n          shared.fold(() => annotations.clear(body), noop);\n        };\n        const mouseHandlers = mouse(win, body, isRoot, annotations);\n        const keyHandlers = keyboard(win, body, isRoot, annotations);\n        const external$1 = external(win, body, isRoot, annotations);\n        const hasShiftKey = event => event.raw.shiftKey === true;\n        editor.on('TableSelectorChange', e => external$1(e.start, e.finish));\n        const handleResponse = (event, response) => {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill) {\n            event.kill();\n          }\n          response.selection.each(ns => {\n            const relative = SimSelection.relative(ns.start, ns.finish);\n            const rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        const keyup = event => {\n          const wrappedEvent = fromRawEvent(event);\n          if (wrappedEvent.raw.shiftKey && isNavigation(wrappedEvent.raw.which)) {\n            const rng = editor.selection.getRng();\n            const start = SugarElement.fromDom(rng.startContainer);\n            const end = SugarElement.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(response => {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        const keydown = event => {\n          const wrappedEvent = fromRawEvent(event);\n          resizeHandler.hide();\n          const rng = editor.selection.getRng();\n          const start = SugarElement.fromDom(rng.startContainer);\n          const end = SugarElement.fromDom(rng.endContainer);\n          const direction = onDirection(ltr, rtl)(SugarElement.fromDom(editor.selection.getStart()));\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(response => {\n            handleResponse(wrappedEvent, response);\n          });\n          resizeHandler.show();\n        };\n        const isLeftMouse = raw => raw.button === 0;\n        const isLeftButtonPressed = raw => {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        const dragStart = _e => {\n          mouseHandlers.clearstate();\n        };\n        const mouseDown = e => {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(fromRawEvent(e));\n          }\n        };\n        const mouseOver = e => {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(fromRawEvent(e));\n          }\n        };\n        const mouseUp = e => {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(fromRawEvent(e));\n          }\n        };\n        const getDoubleTap = () => {\n          const lastTarget = Cell(SugarElement.fromDom(body));\n          const lastTimeStamp = Cell(0);\n          const touchEnd = t => {\n            const target = SugarElement.fromDom(t.target);\n            if (isTag('td')(target) || isTag('th')(target)) {\n              const lT = lastTarget.get();\n              const lTS = lastTimeStamp.get();\n              if (eq$1(lT, target) && t.timeStamp - lTS < 300) {\n                t.preventDefault();\n                external$1(target, target);\n              }\n            }\n            lastTarget.set(target);\n            lastTimeStamp.set(t.timeStamp);\n          };\n          return { touchEnd };\n        };\n        const doubleTap = getDoubleTap();\n        editor.on('dragstart', dragStart);\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('touchend', doubleTap.touchEnd);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('NodeChange', syncSelection);\n      });\n      editor.on('PreInit', () => {\n        editor.serializer.addTempAttr(ephemera.firstSelected);\n        editor.serializer.addTempAttr(ephemera.lastSelected);\n      });\n      const clearSelectedCells = container => annotations.clear(SugarElement.fromDom(container));\n      const getSelectedCells = () => fold(cellSelection.get(), constant([]), cells => {\n        return map$1(cells, cell => cell.dom);\n      }, cell => [cell.dom]);\n      return {\n        getSelectedCells,\n        clearSelectedCells\n      };\n    };\n\n    const Event = fields => {\n      let handlers = [];\n      const bind = handler => {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      const unbind = handler => {\n        handlers = filter$2(handlers, h => {\n          return h !== handler;\n        });\n      };\n      const trigger = (...args) => {\n        const event = {};\n        each$2(fields, (name, i) => {\n          event[name] = args[i];\n        });\n        each$2(handlers, handler => {\n          handler(event);\n        });\n      };\n      return {\n        bind,\n        unbind,\n        trigger\n      };\n    };\n\n    const create$1 = typeDefs => {\n      const registry = map(typeDefs, event => {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      const trigger = map(typeDefs, event => {\n        return event.trigger;\n      });\n      return {\n        registry,\n        trigger\n      };\n    };\n\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const sort = arr => {\n      return arr.slice(0).sort();\n    };\n    const reqMessage = (required, keys) => {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    const unsuppMessage = unsupported => {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    const validateStrArr = (label, array) => {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each$2(array, a => {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    const invalidTypeMessage = (incorrect, type) => {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    const checkDupes = everything => {\n      const sorted = sort(everything);\n      const dupe = find$1(sorted, (s, i) => {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(d => {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    const base = (handleUnsupported, required) => {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    const baseWith = (handleUnsupported, required, pred) => {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return obj => {\n        const keys$1 = keys(obj);\n        const allReqd = forall(required, req => {\n          return contains$2(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        const invalidKeys = filter$2(required, key => {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    const handleExact = (required, keys) => {\n      const unsupported = filter$2(keys, key => {\n        return !contains$2(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    const exactly = required => base(handleExact, required);\n\n    const DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    const DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    const DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    const InDrag = () => {\n      let previous = Optional.none();\n      const reset = () => {\n        previous = Optional.none();\n      };\n      const update = (mode, nu) => {\n        const result = previous.map(old => {\n          return mode.compare(old, nu);\n        });\n        previous = Optional.some(nu);\n        return result;\n      };\n      const onEvent = (event, mode) => {\n        const dataOption = mode.extract(event);\n        dataOption.each(data => {\n          const offset = update(mode, data);\n          offset.each(d => {\n            events.trigger.move(d);\n          });\n        });\n      };\n      const events = create$1({ move: Event(['info']) });\n      return {\n        onEvent,\n        reset,\n        events: events.registry\n      };\n    };\n\n    const NoDrag = () => {\n      const events = create$1({ move: Event(['info']) });\n      return {\n        onEvent: noop,\n        reset: noop,\n        events: events.registry\n      };\n    };\n\n    const Movement = () => {\n      const noDragState = NoDrag();\n      const inDragState = InDrag();\n      let dragState = noDragState;\n      const on = () => {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      const off = () => {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      const onEvent = (event, mode) => {\n        dragState.onEvent(event, mode);\n      };\n      const isOn = () => {\n        return dragState === inDragState;\n      };\n      return {\n        on,\n        off,\n        isOn,\n        onEvent,\n        events: inDragState.events\n      };\n    };\n\n    const setup = (mutation, mode, settings) => {\n      let active = false;\n      const events = create$1({\n        start: Event([]),\n        stop: Event([])\n      });\n      const movement = Movement();\n      const drop = () => {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      const throttledDrop = last(drop, 200);\n      const go = parent => {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      const mousemove = event => {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(event => {\n        mode.mutate(mutation, event.info);\n      });\n      const on = () => {\n        active = true;\n      };\n      const off = () => {\n        active = false;\n      };\n      const runIfActive = f => {\n        return (...args) => {\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      const sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      const destroy = () => {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go,\n        on,\n        off,\n        destroy,\n        events: events.registry\n      };\n    };\n\n    const css = namespace => {\n      const dashNamespace = namespace.replace(/\\./g, '-');\n      const resolve = str => {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve };\n    };\n\n    const styles$1 = css('ephox-dragster');\n    const resolve$1 = styles$1.resolve;\n\n    const Blocker = options => {\n      const settings = {\n        layerClass: resolve$1('blocker'),\n        ...options\n      };\n      const div = SugarElement.fromTag('div');\n      set$2(div, 'role', 'presentation');\n      setAll(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add(div, resolve$1('blocker'));\n      add(div, settings.layerClass);\n      const element = constant(div);\n      const destroy = () => {\n        remove$6(div);\n      };\n      return {\n        element,\n        destroy\n      };\n    };\n\n    const compare = (old, nu) => {\n      return SugarPosition(nu.left - old.left, nu.top - old.top);\n    };\n    const extract = event => {\n      return Optional.some(SugarPosition(event.x, event.y));\n    };\n    const mutate = (mutation, info) => {\n      mutation.mutate(info.left, info.top);\n    };\n    const sink = (dragApi, settings) => {\n      const blocker = Blocker(settings);\n      const mdown = bind(blocker.element(), 'mousedown', dragApi.forceDrop);\n      const mup = bind(blocker.element(), 'mouseup', dragApi.drop);\n      const mmove = bind(blocker.element(), 'mousemove', dragApi.move);\n      const mout = bind(blocker.element(), 'mouseout', dragApi.delayDrop);\n      const destroy = () => {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      const start = parent => {\n        append$1(parent, blocker.element());\n      };\n      const stop = () => {\n        remove$6(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start,\n        stop,\n        destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare,\n      extract,\n      sink,\n      mutate\n    });\n\n    const transform = (mutation, settings = {}) => {\n      var _a;\n      const mode = (_a = settings.mode) !== null && _a !== void 0 ? _a : MouseDrag;\n      return setup(mutation, mode, settings);\n    };\n\n    const styles = css('ephox-snooker');\n    const resolve = styles.resolve;\n\n    const Mutation = () => {\n      const events = create$1({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      const mutate = (x, y) => {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate,\n        events: events.registry\n      };\n    };\n\n    const BarMutation = () => {\n      const events = create$1({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      let target = Optional.none();\n      const delegate = Mutation();\n      delegate.events.drag.bind(event => {\n        target.each(t => {\n          events.trigger.drag(event.xDelta, event.yDelta, t);\n        });\n      });\n      const assign = t => {\n        target = Optional.some(t);\n      };\n      const get = () => {\n        return target;\n      };\n      return {\n        assign,\n        get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    const col = (column, x, y, w, h) => {\n      const bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n    const row = (r, x, y, w, h) => {\n      const bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n\n    const resizeBar = resolve('resizer-bar');\n    const resizeRowBar = resolve('resizer-rows');\n    const resizeColBar = resolve('resizer-cols');\n    const BAR_THICKNESS = 7;\n    const resizableRows = (warehouse, isResizable) => bind$2(warehouse.all, (row, i) => isResizable(row.element) ? [i] : []);\n    const resizableColumns = (warehouse, isResizable) => {\n      const resizableCols = [];\n      range$1(warehouse.grid.columns, index => {\n        const colElmOpt = Warehouse.getColumnAt(warehouse, index).map(col => col.element);\n        if (colElmOpt.forall(isResizable)) {\n          resizableCols.push(index);\n        }\n      });\n      return filter$2(resizableCols, colIndex => {\n        const columnCells = Warehouse.filterItems(warehouse, cell => cell.column === colIndex);\n        return forall(columnCells, cell => isResizable(cell.element));\n      });\n    };\n    const destroy = wire => {\n      const previous = descendants(wire.parent(), '.' + resizeBar);\n      each$2(previous, remove$6);\n    };\n    const drawBar = (wire, positions, create) => {\n      const origin = wire.origin();\n      each$2(positions, cpOption => {\n        cpOption.each(cp => {\n          const bar = create(origin, cp);\n          add(bar, resizeBar);\n          append$1(wire.parent(), bar);\n        });\n      });\n    };\n    const refreshCol = (wire, colPositions, position, tableHeight) => {\n      drawBar(wire, colPositions, (origin, cp) => {\n        const colBar = col(cp.col, cp.x - origin.left, position.top - origin.top, BAR_THICKNESS, tableHeight);\n        add(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    const refreshRow = (wire, rowPositions, position, tableWidth) => {\n      drawBar(wire, rowPositions, (origin, cp) => {\n        const rowBar = row(cp.row, position.left - origin.left, cp.y - origin.top, tableWidth, BAR_THICKNESS);\n        add(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    const refreshGrid = (warhouse, wire, table, rows, cols) => {\n      const position = absolute(table);\n      const isResizable = wire.isResizable;\n      const rowPositions = rows.length > 0 ? height.positions(rows, table) : [];\n      const resizableRowBars = rowPositions.length > 0 ? resizableRows(warhouse, isResizable) : [];\n      const resizableRowPositions = filter$2(rowPositions, (_pos, i) => exists(resizableRowBars, barIndex => i === barIndex));\n      refreshRow(wire, resizableRowPositions, position, getOuter$2(table));\n      const colPositions = cols.length > 0 ? width.positions(cols, table) : [];\n      const resizableColBars = colPositions.length > 0 ? resizableColumns(warhouse, isResizable) : [];\n      const resizableColPositions = filter$2(colPositions, (_pos, i) => exists(resizableColBars, barIndex => i === barIndex));\n      refreshCol(wire, resizableColPositions, position, getOuter$1(table));\n    };\n    const refresh = (wire, table) => {\n      destroy(wire);\n      if (wire.isResizable(table)) {\n        const warehouse = Warehouse.fromTable(table);\n        const rows$1 = rows(warehouse);\n        const cols = columns(warehouse);\n        refreshGrid(warehouse, wire, table, rows$1, cols);\n      }\n    };\n    const each = (wire, f) => {\n      const bars = descendants(wire.parent(), '.' + resizeBar);\n      each$2(bars, f);\n    };\n    const hide = wire => {\n      each(wire, bar => {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    const show = wire => {\n      each(wire, bar => {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    const isRowBar = element => {\n      return has(element, resizeRowBar);\n    };\n    const isColBar = element => {\n      return has(element, resizeColBar);\n    };\n\n    const resizeBarDragging = resolve('resizer-bar-dragging');\n    const BarManager = wire => {\n      const mutation = BarMutation();\n      const resizing = transform(mutation, {});\n      let hoverTable = Optional.none();\n      const getResizer = (element, type) => {\n        return Optional.from(get$b(element, type));\n      };\n      mutation.events.drag.bind(event => {\n        getResizer(event.target, 'data-row').each(_dataRow => {\n          const currentRow = getCssValue(event.target, 'top');\n          set$1(event.target, 'top', currentRow + event.yDelta + 'px');\n        });\n        getResizer(event.target, 'data-column').each(_dataCol => {\n          const currentCol = getCssValue(event.target, 'left');\n          set$1(event.target, 'left', currentCol + event.xDelta + 'px');\n        });\n      });\n      const getDelta = (target, dir) => {\n        const newX = getCssValue(target, dir);\n        const oldX = getAttrValue(target, 'data-initial-' + dir, 0);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(() => {\n        mutation.get().each(target => {\n          hoverTable.each(table => {\n            getResizer(target, 'data-row').each(row => {\n              const delta = getDelta(target, 'top');\n              remove$7(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(column => {\n              const delta = getDelta(target, 'left');\n              remove$7(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            refresh(wire, table);\n          });\n        });\n      });\n      const handler = (target, dir) => {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set$2(target, 'data-initial-' + dir, getCssValue(target, dir));\n        add(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      const mousedown = bind(wire.parent(), 'mousedown', event => {\n        if (isRowBar(event.target)) {\n          handler(event.target, 'top');\n        }\n        if (isColBar(event.target)) {\n          handler(event.target, 'left');\n        }\n      });\n      const isRoot = e => {\n        return eq$1(e, wire.view());\n      };\n      const findClosestEditableTable = target => closest$1(target, 'table', isRoot).filter(isEditable$1);\n      const mouseover = bind(wire.view(), 'mouseover', event => {\n        findClosestEditableTable(event.target).fold(() => {\n          if (inBody(event.target)) {\n            destroy(wire);\n          }\n        }, table => {\n          hoverTable = Optional.some(table);\n          refresh(wire, table);\n        });\n      });\n      const destroy$1 = () => {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        destroy(wire);\n      };\n      const refresh$1 = tbl => {\n        refresh(wire, tbl);\n      };\n      const events = create$1({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy$1,\n        refresh: refresh$1,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(hide, wire),\n        showBars: curry(show, wire),\n        events: events.registry\n      };\n    };\n\n    const create = (wire, resizing, lazySizing) => {\n      const hdirection = height;\n      const vdirection = width;\n      const manager = BarManager(wire);\n      const events = create$1({\n        beforeResize: Event([\n          'table',\n          'type'\n        ]),\n        afterResize: Event([\n          'table',\n          'type'\n        ]),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(event => {\n        const table = event.table;\n        events.trigger.beforeResize(table, 'row');\n        const delta = hdirection.delta(event.delta, table);\n        adjustHeight(table, delta, event.row, hdirection);\n        events.trigger.afterResize(table, 'row');\n      });\n      manager.events.startAdjust.bind(_event => {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(event => {\n        const table = event.table;\n        events.trigger.beforeResize(table, 'col');\n        const delta = vdirection.delta(event.delta, table);\n        const tableSize = lazySizing(table);\n        adjustWidth(table, delta, event.column, resizing, tableSize);\n        events.trigger.afterResize(table, 'col');\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        refreshBars: manager.refresh,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    const TableResize = { create };\n\n    const only = (element, isResizable) => {\n      const parent = isDocument(element) ? documentElement(element) : element;\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable\n      };\n    };\n    const detached = (editable, chrome, isResizable) => {\n      const origin = () => absolute(chrome);\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin,\n        isResizable\n      };\n    };\n    const body = (editable, chrome, isResizable) => {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable\n      };\n    };\n    const ResizeWire = {\n      only,\n      detached,\n      body\n    };\n\n    const createContainer = () => {\n      const container = SugarElement.fromTag('div');\n      setAll(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append$1(body$1(), container);\n      return container;\n    };\n    const get = (editor, isResizable) => {\n      return editor.inline ? ResizeWire.body(SugarElement.fromDom(editor.getBody()), createContainer(), isResizable) : ResizeWire.only(SugarElement.fromDom(editor.getDoc()), isResizable);\n    };\n    const remove = (editor, wire) => {\n      if (editor.inline) {\n        remove$6(wire.parent());\n      }\n    };\n\n    const isTable = node => isNonNullable(node) && node.nodeName === 'TABLE';\n    const barResizerPrefix = 'bar-';\n    const isResizable = elm => get$b(elm, 'data-mce-resize') !== 'false';\n    const syncPixels = table => {\n      const warehouse = Warehouse.fromTable(table);\n      if (!Warehouse.hasColumns(warehouse)) {\n        each$2(cells$1(table), cell => {\n          const computedWidth = get$a(cell, 'width');\n          set$1(cell, 'width', computedWidth);\n          remove$7(cell, 'width');\n        });\n      }\n    };\n    const TableResizeHandler = editor => {\n      const selectionRng = value();\n      const tableResize = value();\n      const resizeWire = value();\n      let startW;\n      let startRawW;\n      const lazySizing = table => get$5(editor, table);\n      const lazyResizingBehaviour = () => isPreserveTableColumnResizing(editor) ? preserveTable() : resizeTable();\n      const getNumColumns = table => getGridSize(table).columns;\n      const afterCornerResize = (table, origin, width) => {\n        const isRightEdgeResize = endsWith(origin, 'e');\n        if (startRawW === '') {\n          convertToPercentSize(table);\n        }\n        if (width !== startW && startRawW !== '') {\n          set$1(table, 'width', startRawW);\n          const resizing = lazyResizingBehaviour();\n          const tableSize = lazySizing(table);\n          const col = isPreserveTableColumnResizing(editor) || isRightEdgeResize ? getNumColumns(table) - 1 : 0;\n          adjustWidth(table, width - startW, col, resizing, tableSize);\n        } else if (isPercentage$1(startRawW)) {\n          const percentW = parseFloat(startRawW.replace('%', ''));\n          const targetPercentW = width * percentW / startW;\n          set$1(table, 'width', targetPercentW + '%');\n        }\n        if (isPixel(startRawW)) {\n          syncPixels(table);\n        }\n      };\n      const destroy = () => {\n        tableResize.on(sz => {\n          sz.destroy();\n        });\n        resizeWire.on(w => {\n          remove(editor, w);\n        });\n      };\n      editor.on('init', () => {\n        const rawWire = get(editor, isResizable);\n        resizeWire.set(rawWire);\n        if (hasTableObjectResizing(editor) && hasTableResizeBars(editor)) {\n          const resizing = lazyResizingBehaviour();\n          const sz = TableResize.create(rawWire, resizing, lazySizing);\n          sz.on();\n          sz.events.startDrag.bind(_event => {\n            selectionRng.set(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(event => {\n            const rawTable = event.table.dom;\n            fireObjectResizeStart(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n          });\n          sz.events.afterResize.bind(event => {\n            const table = event.table;\n            const rawTable = table.dom;\n            removeDataStyle(table);\n            selectionRng.on(rng => {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n            editor.undoManager.add();\n          });\n          tableResize.set(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', e => {\n        const targetElm = e.target;\n        if (isTable(targetElm)) {\n          const table = SugarElement.fromDom(targetElm);\n          each$2(editor.dom.select('.mce-clonedresizable'), clone => {\n            editor.dom.addClass(clone, 'mce-' + getTableColumnResizingBehaviour(editor) + '-columns');\n          });\n          if (!isPixelSizing(table) && isTablePixelsForced(editor)) {\n            convertToPixelSize(table);\n          } else if (!isPercentSizing(table) && isTablePercentagesForced(editor)) {\n            convertToPercentSize(table);\n          }\n          if (isNoneSizing(table) && startsWith(e.origin, barResizerPrefix)) {\n            convertToPercentSize(table);\n          }\n          startW = e.width;\n          startRawW = isTableResponsiveForced(editor) ? '' : getRawWidth(editor, targetElm).getOr('');\n        }\n      });\n      editor.on('ObjectResized', e => {\n        const targetElm = e.target;\n        if (isTable(targetElm)) {\n          const table = SugarElement.fromDom(targetElm);\n          const origin = e.origin;\n          if (startsWith(origin, 'corner-')) {\n            afterCornerResize(table, origin, e.width);\n          }\n          removeDataStyle(table);\n          fireTableModified(editor, table.dom, styleModified);\n        }\n      });\n      editor.on('SwitchMode', () => {\n        tableResize.on(resize => {\n          if (editor.mode.isReadOnly()) {\n            resize.hideBars();\n          } else {\n            resize.showBars();\n          }\n        });\n      });\n      editor.on('remove', () => {\n        destroy();\n      });\n      const refresh = table => {\n        tableResize.on(resize => resize.refreshBars(SugarElement.fromDom(table)));\n      };\n      const hide = () => {\n        tableResize.on(resize => resize.hideBars());\n      };\n      const show = () => {\n        tableResize.on(resize => resize.showBars());\n      };\n      return {\n        refresh,\n        hide,\n        show\n      };\n    };\n\n    const setupTable = editor => {\n      register(editor);\n      const resizeHandler = TableResizeHandler(editor);\n      const cellSelectionHandler = TableCellSelectionHandler(editor, resizeHandler);\n      const actions = TableActions(editor, resizeHandler, cellSelectionHandler);\n      registerCommands(editor, actions);\n      registerQueryCommands(editor, actions);\n      registerEvents(editor, actions);\n      return {\n        getSelectedCells: cellSelectionHandler.getSelectedCells,\n        clearSelectedCells: cellSelectionHandler.clearSelectedCells\n      };\n    };\n\n    const DomModel = editor => {\n      const table = setupTable(editor);\n      return { table };\n    };\n    var Model = () => {\n      global$1.add('dom', DomModel);\n    };\n\n    Model();\n\n})();\n"},"lineCount":7982}},"error":null,"hash":"1796a4c6f12da9ea9d08e8039c38c235","cacheData":{"env":{}}}